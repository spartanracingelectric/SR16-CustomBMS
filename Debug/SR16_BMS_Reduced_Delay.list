
SR16_BMS_Reduced_Delay.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006644  080001e8  080001e8  000011e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000468  0800682c  0800682c  0000782c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006c94  08006c94  000080c8  2**0
                  CONTENTS
  4 .ARM          00000008  08006c94  08006c94  00007c94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006c9c  08006c9c  000080c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006c9c  08006c9c  00007c9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006ca0  08006ca0  00007ca0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000c8  20000000  08006ca4  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000314  200000c8  08006d6c  000080c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003dc  08006d6c  000083dc  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000080c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001249c  00000000  00000000  000080f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003487  00000000  00000000  0001a58d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000012a0  00000000  00000000  0001da18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000e60  00000000  00000000  0001ecb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00021f6e  00000000  00000000  0001fb18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000176ea  00000000  00000000  00041a86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000bf9ef  00000000  00000000  00059170  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000086  00000000  00000000  00118b5f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000051ac  00000000  00000000  00118be8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000051  00000000  00000000  0011dd94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e8 <__do_global_dtors_aux>:
 80001e8:	b510      	push	{r4, lr}
 80001ea:	4c05      	ldr	r4, [pc, #20]	@ (8000200 <__do_global_dtors_aux+0x18>)
 80001ec:	7823      	ldrb	r3, [r4, #0]
 80001ee:	b933      	cbnz	r3, 80001fe <__do_global_dtors_aux+0x16>
 80001f0:	4b04      	ldr	r3, [pc, #16]	@ (8000204 <__do_global_dtors_aux+0x1c>)
 80001f2:	b113      	cbz	r3, 80001fa <__do_global_dtors_aux+0x12>
 80001f4:	4804      	ldr	r0, [pc, #16]	@ (8000208 <__do_global_dtors_aux+0x20>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	2301      	movs	r3, #1
 80001fc:	7023      	strb	r3, [r4, #0]
 80001fe:	bd10      	pop	{r4, pc}
 8000200:	200000c8 	.word	0x200000c8
 8000204:	00000000 	.word	0x00000000
 8000208:	08006814 	.word	0x08006814

0800020c <frame_dummy>:
 800020c:	b508      	push	{r3, lr}
 800020e:	4b03      	ldr	r3, [pc, #12]	@ (800021c <frame_dummy+0x10>)
 8000210:	b11b      	cbz	r3, 800021a <frame_dummy+0xe>
 8000212:	4903      	ldr	r1, [pc, #12]	@ (8000220 <frame_dummy+0x14>)
 8000214:	4803      	ldr	r0, [pc, #12]	@ (8000224 <frame_dummy+0x18>)
 8000216:	f3af 8000 	nop.w
 800021a:	bd08      	pop	{r3, pc}
 800021c:	00000000 	.word	0x00000000
 8000220:	200000cc 	.word	0x200000cc
 8000224:	08006814 	.word	0x08006814

08000228 <__aeabi_drsub>:
 8000228:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 800022c:	e002      	b.n	8000234 <__adddf3>
 800022e:	bf00      	nop

08000230 <__aeabi_dsub>:
 8000230:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000234 <__adddf3>:
 8000234:	b530      	push	{r4, r5, lr}
 8000236:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800023a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800023e:	ea94 0f05 	teq	r4, r5
 8000242:	bf08      	it	eq
 8000244:	ea90 0f02 	teqeq	r0, r2
 8000248:	bf1f      	itttt	ne
 800024a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800024e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000252:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000256:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800025a:	f000 80e2 	beq.w	8000422 <__adddf3+0x1ee>
 800025e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000262:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000266:	bfb8      	it	lt
 8000268:	426d      	neglt	r5, r5
 800026a:	dd0c      	ble.n	8000286 <__adddf3+0x52>
 800026c:	442c      	add	r4, r5
 800026e:	ea80 0202 	eor.w	r2, r0, r2
 8000272:	ea81 0303 	eor.w	r3, r1, r3
 8000276:	ea82 0000 	eor.w	r0, r2, r0
 800027a:	ea83 0101 	eor.w	r1, r3, r1
 800027e:	ea80 0202 	eor.w	r2, r0, r2
 8000282:	ea81 0303 	eor.w	r3, r1, r3
 8000286:	2d36      	cmp	r5, #54	@ 0x36
 8000288:	bf88      	it	hi
 800028a:	bd30      	pophi	{r4, r5, pc}
 800028c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000290:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000294:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000298:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800029c:	d002      	beq.n	80002a4 <__adddf3+0x70>
 800029e:	4240      	negs	r0, r0
 80002a0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002a4:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80002a8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002ac:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002b0:	d002      	beq.n	80002b8 <__adddf3+0x84>
 80002b2:	4252      	negs	r2, r2
 80002b4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002b8:	ea94 0f05 	teq	r4, r5
 80002bc:	f000 80a7 	beq.w	800040e <__adddf3+0x1da>
 80002c0:	f1a4 0401 	sub.w	r4, r4, #1
 80002c4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002c8:	db0d      	blt.n	80002e6 <__adddf3+0xb2>
 80002ca:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ce:	fa22 f205 	lsr.w	r2, r2, r5
 80002d2:	1880      	adds	r0, r0, r2
 80002d4:	f141 0100 	adc.w	r1, r1, #0
 80002d8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002dc:	1880      	adds	r0, r0, r2
 80002de:	fa43 f305 	asr.w	r3, r3, r5
 80002e2:	4159      	adcs	r1, r3
 80002e4:	e00e      	b.n	8000304 <__adddf3+0xd0>
 80002e6:	f1a5 0520 	sub.w	r5, r5, #32
 80002ea:	f10e 0e20 	add.w	lr, lr, #32
 80002ee:	2a01      	cmp	r2, #1
 80002f0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002f4:	bf28      	it	cs
 80002f6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002fa:	fa43 f305 	asr.w	r3, r3, r5
 80002fe:	18c0      	adds	r0, r0, r3
 8000300:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000304:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000308:	d507      	bpl.n	800031a <__adddf3+0xe6>
 800030a:	f04f 0e00 	mov.w	lr, #0
 800030e:	f1dc 0c00 	rsbs	ip, ip, #0
 8000312:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000316:	eb6e 0101 	sbc.w	r1, lr, r1
 800031a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 800031e:	d31b      	bcc.n	8000358 <__adddf3+0x124>
 8000320:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000324:	d30c      	bcc.n	8000340 <__adddf3+0x10c>
 8000326:	0849      	lsrs	r1, r1, #1
 8000328:	ea5f 0030 	movs.w	r0, r0, rrx
 800032c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000330:	f104 0401 	add.w	r4, r4, #1
 8000334:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000338:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 800033c:	f080 809a 	bcs.w	8000474 <__adddf3+0x240>
 8000340:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000344:	bf08      	it	eq
 8000346:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800034a:	f150 0000 	adcs.w	r0, r0, #0
 800034e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000352:	ea41 0105 	orr.w	r1, r1, r5
 8000356:	bd30      	pop	{r4, r5, pc}
 8000358:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800035c:	4140      	adcs	r0, r0
 800035e:	eb41 0101 	adc.w	r1, r1, r1
 8000362:	3c01      	subs	r4, #1
 8000364:	bf28      	it	cs
 8000366:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800036a:	d2e9      	bcs.n	8000340 <__adddf3+0x10c>
 800036c:	f091 0f00 	teq	r1, #0
 8000370:	bf04      	itt	eq
 8000372:	4601      	moveq	r1, r0
 8000374:	2000      	moveq	r0, #0
 8000376:	fab1 f381 	clz	r3, r1
 800037a:	bf08      	it	eq
 800037c:	3320      	addeq	r3, #32
 800037e:	f1a3 030b 	sub.w	r3, r3, #11
 8000382:	f1b3 0220 	subs.w	r2, r3, #32
 8000386:	da0c      	bge.n	80003a2 <__adddf3+0x16e>
 8000388:	320c      	adds	r2, #12
 800038a:	dd08      	ble.n	800039e <__adddf3+0x16a>
 800038c:	f102 0c14 	add.w	ip, r2, #20
 8000390:	f1c2 020c 	rsb	r2, r2, #12
 8000394:	fa01 f00c 	lsl.w	r0, r1, ip
 8000398:	fa21 f102 	lsr.w	r1, r1, r2
 800039c:	e00c      	b.n	80003b8 <__adddf3+0x184>
 800039e:	f102 0214 	add.w	r2, r2, #20
 80003a2:	bfd8      	it	le
 80003a4:	f1c2 0c20 	rsble	ip, r2, #32
 80003a8:	fa01 f102 	lsl.w	r1, r1, r2
 80003ac:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003b0:	bfdc      	itt	le
 80003b2:	ea41 010c 	orrle.w	r1, r1, ip
 80003b6:	4090      	lslle	r0, r2
 80003b8:	1ae4      	subs	r4, r4, r3
 80003ba:	bfa2      	ittt	ge
 80003bc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003c0:	4329      	orrge	r1, r5
 80003c2:	bd30      	popge	{r4, r5, pc}
 80003c4:	ea6f 0404 	mvn.w	r4, r4
 80003c8:	3c1f      	subs	r4, #31
 80003ca:	da1c      	bge.n	8000406 <__adddf3+0x1d2>
 80003cc:	340c      	adds	r4, #12
 80003ce:	dc0e      	bgt.n	80003ee <__adddf3+0x1ba>
 80003d0:	f104 0414 	add.w	r4, r4, #20
 80003d4:	f1c4 0220 	rsb	r2, r4, #32
 80003d8:	fa20 f004 	lsr.w	r0, r0, r4
 80003dc:	fa01 f302 	lsl.w	r3, r1, r2
 80003e0:	ea40 0003 	orr.w	r0, r0, r3
 80003e4:	fa21 f304 	lsr.w	r3, r1, r4
 80003e8:	ea45 0103 	orr.w	r1, r5, r3
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	f1c4 040c 	rsb	r4, r4, #12
 80003f2:	f1c4 0220 	rsb	r2, r4, #32
 80003f6:	fa20 f002 	lsr.w	r0, r0, r2
 80003fa:	fa01 f304 	lsl.w	r3, r1, r4
 80003fe:	ea40 0003 	orr.w	r0, r0, r3
 8000402:	4629      	mov	r1, r5
 8000404:	bd30      	pop	{r4, r5, pc}
 8000406:	fa21 f004 	lsr.w	r0, r1, r4
 800040a:	4629      	mov	r1, r5
 800040c:	bd30      	pop	{r4, r5, pc}
 800040e:	f094 0f00 	teq	r4, #0
 8000412:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 8000416:	bf06      	itte	eq
 8000418:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 800041c:	3401      	addeq	r4, #1
 800041e:	3d01      	subne	r5, #1
 8000420:	e74e      	b.n	80002c0 <__adddf3+0x8c>
 8000422:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000426:	bf18      	it	ne
 8000428:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800042c:	d029      	beq.n	8000482 <__adddf3+0x24e>
 800042e:	ea94 0f05 	teq	r4, r5
 8000432:	bf08      	it	eq
 8000434:	ea90 0f02 	teqeq	r0, r2
 8000438:	d005      	beq.n	8000446 <__adddf3+0x212>
 800043a:	ea54 0c00 	orrs.w	ip, r4, r0
 800043e:	bf04      	itt	eq
 8000440:	4619      	moveq	r1, r3
 8000442:	4610      	moveq	r0, r2
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	ea91 0f03 	teq	r1, r3
 800044a:	bf1e      	ittt	ne
 800044c:	2100      	movne	r1, #0
 800044e:	2000      	movne	r0, #0
 8000450:	bd30      	popne	{r4, r5, pc}
 8000452:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000456:	d105      	bne.n	8000464 <__adddf3+0x230>
 8000458:	0040      	lsls	r0, r0, #1
 800045a:	4149      	adcs	r1, r1
 800045c:	bf28      	it	cs
 800045e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000462:	bd30      	pop	{r4, r5, pc}
 8000464:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000468:	bf3c      	itt	cc
 800046a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800046e:	bd30      	popcc	{r4, r5, pc}
 8000470:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000474:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000478:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800047c:	f04f 0000 	mov.w	r0, #0
 8000480:	bd30      	pop	{r4, r5, pc}
 8000482:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000486:	bf1a      	itte	ne
 8000488:	4619      	movne	r1, r3
 800048a:	4610      	movne	r0, r2
 800048c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000490:	bf1c      	itt	ne
 8000492:	460b      	movne	r3, r1
 8000494:	4602      	movne	r2, r0
 8000496:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800049a:	bf06      	itte	eq
 800049c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004a0:	ea91 0f03 	teqeq	r1, r3
 80004a4:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80004a8:	bd30      	pop	{r4, r5, pc}
 80004aa:	bf00      	nop

080004ac <__aeabi_ui2d>:
 80004ac:	f090 0f00 	teq	r0, #0
 80004b0:	bf04      	itt	eq
 80004b2:	2100      	moveq	r1, #0
 80004b4:	4770      	bxeq	lr
 80004b6:	b530      	push	{r4, r5, lr}
 80004b8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004bc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004c0:	f04f 0500 	mov.w	r5, #0
 80004c4:	f04f 0100 	mov.w	r1, #0
 80004c8:	e750      	b.n	800036c <__adddf3+0x138>
 80004ca:	bf00      	nop

080004cc <__aeabi_i2d>:
 80004cc:	f090 0f00 	teq	r0, #0
 80004d0:	bf04      	itt	eq
 80004d2:	2100      	moveq	r1, #0
 80004d4:	4770      	bxeq	lr
 80004d6:	b530      	push	{r4, r5, lr}
 80004d8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004dc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004e0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80004e4:	bf48      	it	mi
 80004e6:	4240      	negmi	r0, r0
 80004e8:	f04f 0100 	mov.w	r1, #0
 80004ec:	e73e      	b.n	800036c <__adddf3+0x138>
 80004ee:	bf00      	nop

080004f0 <__aeabi_f2d>:
 80004f0:	0042      	lsls	r2, r0, #1
 80004f2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004f6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004fa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004fe:	bf1f      	itttt	ne
 8000500:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 8000504:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000508:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 800050c:	4770      	bxne	lr
 800050e:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 8000512:	bf08      	it	eq
 8000514:	4770      	bxeq	lr
 8000516:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 800051a:	bf04      	itt	eq
 800051c:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000520:	4770      	bxeq	lr
 8000522:	b530      	push	{r4, r5, lr}
 8000524:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000528:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800052c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000530:	e71c      	b.n	800036c <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_ul2d>:
 8000534:	ea50 0201 	orrs.w	r2, r0, r1
 8000538:	bf08      	it	eq
 800053a:	4770      	bxeq	lr
 800053c:	b530      	push	{r4, r5, lr}
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	e00a      	b.n	800055a <__aeabi_l2d+0x16>

08000544 <__aeabi_l2d>:
 8000544:	ea50 0201 	orrs.w	r2, r0, r1
 8000548:	bf08      	it	eq
 800054a:	4770      	bxeq	lr
 800054c:	b530      	push	{r4, r5, lr}
 800054e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000552:	d502      	bpl.n	800055a <__aeabi_l2d+0x16>
 8000554:	4240      	negs	r0, r0
 8000556:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800055a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800055e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000562:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000566:	f43f aed8 	beq.w	800031a <__adddf3+0xe6>
 800056a:	f04f 0203 	mov.w	r2, #3
 800056e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000572:	bf18      	it	ne
 8000574:	3203      	addne	r2, #3
 8000576:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800057a:	bf18      	it	ne
 800057c:	3203      	addne	r2, #3
 800057e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000582:	f1c2 0320 	rsb	r3, r2, #32
 8000586:	fa00 fc03 	lsl.w	ip, r0, r3
 800058a:	fa20 f002 	lsr.w	r0, r0, r2
 800058e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000592:	ea40 000e 	orr.w	r0, r0, lr
 8000596:	fa21 f102 	lsr.w	r1, r1, r2
 800059a:	4414      	add	r4, r2
 800059c:	e6bd      	b.n	800031a <__adddf3+0xe6>
 800059e:	bf00      	nop

080005a0 <__aeabi_dmul>:
 80005a0:	b570      	push	{r4, r5, r6, lr}
 80005a2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005a6:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80005aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005ae:	bf1d      	ittte	ne
 80005b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005b4:	ea94 0f0c 	teqne	r4, ip
 80005b8:	ea95 0f0c 	teqne	r5, ip
 80005bc:	f000 f8de 	bleq	800077c <__aeabi_dmul+0x1dc>
 80005c0:	442c      	add	r4, r5
 80005c2:	ea81 0603 	eor.w	r6, r1, r3
 80005c6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005ca:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ce:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005d2:	bf18      	it	ne
 80005d4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005d8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005dc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80005e0:	d038      	beq.n	8000654 <__aeabi_dmul+0xb4>
 80005e2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005e6:	f04f 0500 	mov.w	r5, #0
 80005ea:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ee:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005f2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005f6:	f04f 0600 	mov.w	r6, #0
 80005fa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005fe:	f09c 0f00 	teq	ip, #0
 8000602:	bf18      	it	ne
 8000604:	f04e 0e01 	orrne.w	lr, lr, #1
 8000608:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 800060c:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000610:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 8000614:	d204      	bcs.n	8000620 <__aeabi_dmul+0x80>
 8000616:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800061a:	416d      	adcs	r5, r5
 800061c:	eb46 0606 	adc.w	r6, r6, r6
 8000620:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000624:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000628:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800062c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000630:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000634:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000638:	bf88      	it	hi
 800063a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800063e:	d81e      	bhi.n	800067e <__aeabi_dmul+0xde>
 8000640:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000644:	bf08      	it	eq
 8000646:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800064a:	f150 0000 	adcs.w	r0, r0, #0
 800064e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000652:	bd70      	pop	{r4, r5, r6, pc}
 8000654:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000658:	ea46 0101 	orr.w	r1, r6, r1
 800065c:	ea40 0002 	orr.w	r0, r0, r2
 8000660:	ea81 0103 	eor.w	r1, r1, r3
 8000664:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000668:	bfc2      	ittt	gt
 800066a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800066e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000672:	bd70      	popgt	{r4, r5, r6, pc}
 8000674:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000678:	f04f 0e00 	mov.w	lr, #0
 800067c:	3c01      	subs	r4, #1
 800067e:	f300 80ab 	bgt.w	80007d8 <__aeabi_dmul+0x238>
 8000682:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000686:	bfde      	ittt	le
 8000688:	2000      	movle	r0, #0
 800068a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800068e:	bd70      	pople	{r4, r5, r6, pc}
 8000690:	f1c4 0400 	rsb	r4, r4, #0
 8000694:	3c20      	subs	r4, #32
 8000696:	da35      	bge.n	8000704 <__aeabi_dmul+0x164>
 8000698:	340c      	adds	r4, #12
 800069a:	dc1b      	bgt.n	80006d4 <__aeabi_dmul+0x134>
 800069c:	f104 0414 	add.w	r4, r4, #20
 80006a0:	f1c4 0520 	rsb	r5, r4, #32
 80006a4:	fa00 f305 	lsl.w	r3, r0, r5
 80006a8:	fa20 f004 	lsr.w	r0, r0, r4
 80006ac:	fa01 f205 	lsl.w	r2, r1, r5
 80006b0:	ea40 0002 	orr.w	r0, r0, r2
 80006b4:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80006b8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80006bc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006c0:	fa21 f604 	lsr.w	r6, r1, r4
 80006c4:	eb42 0106 	adc.w	r1, r2, r6
 80006c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006cc:	bf08      	it	eq
 80006ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006d2:	bd70      	pop	{r4, r5, r6, pc}
 80006d4:	f1c4 040c 	rsb	r4, r4, #12
 80006d8:	f1c4 0520 	rsb	r5, r4, #32
 80006dc:	fa00 f304 	lsl.w	r3, r0, r4
 80006e0:	fa20 f005 	lsr.w	r0, r0, r5
 80006e4:	fa01 f204 	lsl.w	r2, r1, r4
 80006e8:	ea40 0002 	orr.w	r0, r0, r2
 80006ec:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006f0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006f4:	f141 0100 	adc.w	r1, r1, #0
 80006f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006fc:	bf08      	it	eq
 80006fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000702:	bd70      	pop	{r4, r5, r6, pc}
 8000704:	f1c4 0520 	rsb	r5, r4, #32
 8000708:	fa00 f205 	lsl.w	r2, r0, r5
 800070c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000710:	fa20 f304 	lsr.w	r3, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea43 0302 	orr.w	r3, r3, r2
 800071c:	fa21 f004 	lsr.w	r0, r1, r4
 8000720:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	fa21 f204 	lsr.w	r2, r1, r4
 8000728:	ea20 0002 	bic.w	r0, r0, r2
 800072c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f094 0f00 	teq	r4, #0
 8000740:	d10f      	bne.n	8000762 <__aeabi_dmul+0x1c2>
 8000742:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000746:	0040      	lsls	r0, r0, #1
 8000748:	eb41 0101 	adc.w	r1, r1, r1
 800074c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000750:	bf08      	it	eq
 8000752:	3c01      	subeq	r4, #1
 8000754:	d0f7      	beq.n	8000746 <__aeabi_dmul+0x1a6>
 8000756:	ea41 0106 	orr.w	r1, r1, r6
 800075a:	f095 0f00 	teq	r5, #0
 800075e:	bf18      	it	ne
 8000760:	4770      	bxne	lr
 8000762:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000766:	0052      	lsls	r2, r2, #1
 8000768:	eb43 0303 	adc.w	r3, r3, r3
 800076c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000770:	bf08      	it	eq
 8000772:	3d01      	subeq	r5, #1
 8000774:	d0f7      	beq.n	8000766 <__aeabi_dmul+0x1c6>
 8000776:	ea43 0306 	orr.w	r3, r3, r6
 800077a:	4770      	bx	lr
 800077c:	ea94 0f0c 	teq	r4, ip
 8000780:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000784:	bf18      	it	ne
 8000786:	ea95 0f0c 	teqne	r5, ip
 800078a:	d00c      	beq.n	80007a6 <__aeabi_dmul+0x206>
 800078c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000790:	bf18      	it	ne
 8000792:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000796:	d1d1      	bne.n	800073c <__aeabi_dmul+0x19c>
 8000798:	ea81 0103 	eor.w	r1, r1, r3
 800079c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007a0:	f04f 0000 	mov.w	r0, #0
 80007a4:	bd70      	pop	{r4, r5, r6, pc}
 80007a6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007aa:	bf06      	itte	eq
 80007ac:	4610      	moveq	r0, r2
 80007ae:	4619      	moveq	r1, r3
 80007b0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007b4:	d019      	beq.n	80007ea <__aeabi_dmul+0x24a>
 80007b6:	ea94 0f0c 	teq	r4, ip
 80007ba:	d102      	bne.n	80007c2 <__aeabi_dmul+0x222>
 80007bc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007c0:	d113      	bne.n	80007ea <__aeabi_dmul+0x24a>
 80007c2:	ea95 0f0c 	teq	r5, ip
 80007c6:	d105      	bne.n	80007d4 <__aeabi_dmul+0x234>
 80007c8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007cc:	bf1c      	itt	ne
 80007ce:	4610      	movne	r0, r2
 80007d0:	4619      	movne	r1, r3
 80007d2:	d10a      	bne.n	80007ea <__aeabi_dmul+0x24a>
 80007d4:	ea81 0103 	eor.w	r1, r1, r3
 80007d8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007dc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80007e4:	f04f 0000 	mov.w	r0, #0
 80007e8:	bd70      	pop	{r4, r5, r6, pc}
 80007ea:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007ee:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007f2:	bd70      	pop	{r4, r5, r6, pc}

080007f4 <__aeabi_ddiv>:
 80007f4:	b570      	push	{r4, r5, r6, lr}
 80007f6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80007fa:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80007fe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000802:	bf1d      	ittte	ne
 8000804:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000808:	ea94 0f0c 	teqne	r4, ip
 800080c:	ea95 0f0c 	teqne	r5, ip
 8000810:	f000 f8a7 	bleq	8000962 <__aeabi_ddiv+0x16e>
 8000814:	eba4 0405 	sub.w	r4, r4, r5
 8000818:	ea81 0e03 	eor.w	lr, r1, r3
 800081c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000820:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000824:	f000 8088 	beq.w	8000938 <__aeabi_ddiv+0x144>
 8000828:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800082c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000830:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000834:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000838:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800083c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000840:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000844:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000848:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 800084c:	429d      	cmp	r5, r3
 800084e:	bf08      	it	eq
 8000850:	4296      	cmpeq	r6, r2
 8000852:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000856:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800085a:	d202      	bcs.n	8000862 <__aeabi_ddiv+0x6e>
 800085c:	085b      	lsrs	r3, r3, #1
 800085e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000862:	1ab6      	subs	r6, r6, r2
 8000864:	eb65 0503 	sbc.w	r5, r5, r3
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000872:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000876:	ebb6 0e02 	subs.w	lr, r6, r2
 800087a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800087e:	bf22      	ittt	cs
 8000880:	1ab6      	subcs	r6, r6, r2
 8000882:	4675      	movcs	r5, lr
 8000884:	ea40 000c 	orrcs.w	r0, r0, ip
 8000888:	085b      	lsrs	r3, r3, #1
 800088a:	ea4f 0232 	mov.w	r2, r2, rrx
 800088e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000892:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000896:	bf22      	ittt	cs
 8000898:	1ab6      	subcs	r6, r6, r2
 800089a:	4675      	movcs	r5, lr
 800089c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008a0:	085b      	lsrs	r3, r3, #1
 80008a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008a6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008aa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ae:	bf22      	ittt	cs
 80008b0:	1ab6      	subcs	r6, r6, r2
 80008b2:	4675      	movcs	r5, lr
 80008b4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008b8:	085b      	lsrs	r3, r3, #1
 80008ba:	ea4f 0232 	mov.w	r2, r2, rrx
 80008be:	ebb6 0e02 	subs.w	lr, r6, r2
 80008c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008c6:	bf22      	ittt	cs
 80008c8:	1ab6      	subcs	r6, r6, r2
 80008ca:	4675      	movcs	r5, lr
 80008cc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008d0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008d4:	d018      	beq.n	8000908 <__aeabi_ddiv+0x114>
 80008d6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008da:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008de:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008e2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008e6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008ea:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ee:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008f2:	d1c0      	bne.n	8000876 <__aeabi_ddiv+0x82>
 80008f4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008f8:	d10b      	bne.n	8000912 <__aeabi_ddiv+0x11e>
 80008fa:	ea41 0100 	orr.w	r1, r1, r0
 80008fe:	f04f 0000 	mov.w	r0, #0
 8000902:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8000906:	e7b6      	b.n	8000876 <__aeabi_ddiv+0x82>
 8000908:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 800090c:	bf04      	itt	eq
 800090e:	4301      	orreq	r1, r0
 8000910:	2000      	moveq	r0, #0
 8000912:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000916:	bf88      	it	hi
 8000918:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800091c:	f63f aeaf 	bhi.w	800067e <__aeabi_dmul+0xde>
 8000920:	ebb5 0c03 	subs.w	ip, r5, r3
 8000924:	bf04      	itt	eq
 8000926:	ebb6 0c02 	subseq.w	ip, r6, r2
 800092a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800092e:	f150 0000 	adcs.w	r0, r0, #0
 8000932:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000936:	bd70      	pop	{r4, r5, r6, pc}
 8000938:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 800093c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000940:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000944:	bfc2      	ittt	gt
 8000946:	ebd4 050c 	rsbsgt	r5, r4, ip
 800094a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800094e:	bd70      	popgt	{r4, r5, r6, pc}
 8000950:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000954:	f04f 0e00 	mov.w	lr, #0
 8000958:	3c01      	subs	r4, #1
 800095a:	e690      	b.n	800067e <__aeabi_dmul+0xde>
 800095c:	ea45 0e06 	orr.w	lr, r5, r6
 8000960:	e68d      	b.n	800067e <__aeabi_dmul+0xde>
 8000962:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000966:	ea94 0f0c 	teq	r4, ip
 800096a:	bf08      	it	eq
 800096c:	ea95 0f0c 	teqeq	r5, ip
 8000970:	f43f af3b 	beq.w	80007ea <__aeabi_dmul+0x24a>
 8000974:	ea94 0f0c 	teq	r4, ip
 8000978:	d10a      	bne.n	8000990 <__aeabi_ddiv+0x19c>
 800097a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800097e:	f47f af34 	bne.w	80007ea <__aeabi_dmul+0x24a>
 8000982:	ea95 0f0c 	teq	r5, ip
 8000986:	f47f af25 	bne.w	80007d4 <__aeabi_dmul+0x234>
 800098a:	4610      	mov	r0, r2
 800098c:	4619      	mov	r1, r3
 800098e:	e72c      	b.n	80007ea <__aeabi_dmul+0x24a>
 8000990:	ea95 0f0c 	teq	r5, ip
 8000994:	d106      	bne.n	80009a4 <__aeabi_ddiv+0x1b0>
 8000996:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800099a:	f43f aefd 	beq.w	8000798 <__aeabi_dmul+0x1f8>
 800099e:	4610      	mov	r0, r2
 80009a0:	4619      	mov	r1, r3
 80009a2:	e722      	b.n	80007ea <__aeabi_dmul+0x24a>
 80009a4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009a8:	bf18      	it	ne
 80009aa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009ae:	f47f aec5 	bne.w	800073c <__aeabi_dmul+0x19c>
 80009b2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009b6:	f47f af0d 	bne.w	80007d4 <__aeabi_dmul+0x234>
 80009ba:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009be:	f47f aeeb 	bne.w	8000798 <__aeabi_dmul+0x1f8>
 80009c2:	e712      	b.n	80007ea <__aeabi_dmul+0x24a>

080009c4 <__gedf2>:
 80009c4:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 80009c8:	e006      	b.n	80009d8 <__cmpdf2+0x4>
 80009ca:	bf00      	nop

080009cc <__ledf2>:
 80009cc:	f04f 0c01 	mov.w	ip, #1
 80009d0:	e002      	b.n	80009d8 <__cmpdf2+0x4>
 80009d2:	bf00      	nop

080009d4 <__cmpdf2>:
 80009d4:	f04f 0c01 	mov.w	ip, #1
 80009d8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009dc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009e8:	bf18      	it	ne
 80009ea:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009ee:	d01b      	beq.n	8000a28 <__cmpdf2+0x54>
 80009f0:	b001      	add	sp, #4
 80009f2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009f6:	bf0c      	ite	eq
 80009f8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009fc:	ea91 0f03 	teqne	r1, r3
 8000a00:	bf02      	ittt	eq
 8000a02:	ea90 0f02 	teqeq	r0, r2
 8000a06:	2000      	moveq	r0, #0
 8000a08:	4770      	bxeq	lr
 8000a0a:	f110 0f00 	cmn.w	r0, #0
 8000a0e:	ea91 0f03 	teq	r1, r3
 8000a12:	bf58      	it	pl
 8000a14:	4299      	cmppl	r1, r3
 8000a16:	bf08      	it	eq
 8000a18:	4290      	cmpeq	r0, r2
 8000a1a:	bf2c      	ite	cs
 8000a1c:	17d8      	asrcs	r0, r3, #31
 8000a1e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a22:	f040 0001 	orr.w	r0, r0, #1
 8000a26:	4770      	bx	lr
 8000a28:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a2c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a30:	d102      	bne.n	8000a38 <__cmpdf2+0x64>
 8000a32:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a36:	d107      	bne.n	8000a48 <__cmpdf2+0x74>
 8000a38:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a3c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a40:	d1d6      	bne.n	80009f0 <__cmpdf2+0x1c>
 8000a42:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a46:	d0d3      	beq.n	80009f0 <__cmpdf2+0x1c>
 8000a48:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a4c:	4770      	bx	lr
 8000a4e:	bf00      	nop

08000a50 <__aeabi_cdrcmple>:
 8000a50:	4684      	mov	ip, r0
 8000a52:	4610      	mov	r0, r2
 8000a54:	4662      	mov	r2, ip
 8000a56:	468c      	mov	ip, r1
 8000a58:	4619      	mov	r1, r3
 8000a5a:	4663      	mov	r3, ip
 8000a5c:	e000      	b.n	8000a60 <__aeabi_cdcmpeq>
 8000a5e:	bf00      	nop

08000a60 <__aeabi_cdcmpeq>:
 8000a60:	b501      	push	{r0, lr}
 8000a62:	f7ff ffb7 	bl	80009d4 <__cmpdf2>
 8000a66:	2800      	cmp	r0, #0
 8000a68:	bf48      	it	mi
 8000a6a:	f110 0f00 	cmnmi.w	r0, #0
 8000a6e:	bd01      	pop	{r0, pc}

08000a70 <__aeabi_dcmpeq>:
 8000a70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a74:	f7ff fff4 	bl	8000a60 <__aeabi_cdcmpeq>
 8000a78:	bf0c      	ite	eq
 8000a7a:	2001      	moveq	r0, #1
 8000a7c:	2000      	movne	r0, #0
 8000a7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a82:	bf00      	nop

08000a84 <__aeabi_dcmplt>:
 8000a84:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a88:	f7ff ffea 	bl	8000a60 <__aeabi_cdcmpeq>
 8000a8c:	bf34      	ite	cc
 8000a8e:	2001      	movcc	r0, #1
 8000a90:	2000      	movcs	r0, #0
 8000a92:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a96:	bf00      	nop

08000a98 <__aeabi_dcmple>:
 8000a98:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a9c:	f7ff ffe0 	bl	8000a60 <__aeabi_cdcmpeq>
 8000aa0:	bf94      	ite	ls
 8000aa2:	2001      	movls	r0, #1
 8000aa4:	2000      	movhi	r0, #0
 8000aa6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aaa:	bf00      	nop

08000aac <__aeabi_dcmpge>:
 8000aac:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ab0:	f7ff ffce 	bl	8000a50 <__aeabi_cdrcmple>
 8000ab4:	bf94      	ite	ls
 8000ab6:	2001      	movls	r0, #1
 8000ab8:	2000      	movhi	r0, #0
 8000aba:	f85d fb08 	ldr.w	pc, [sp], #8
 8000abe:	bf00      	nop

08000ac0 <__aeabi_dcmpgt>:
 8000ac0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac4:	f7ff ffc4 	bl	8000a50 <__aeabi_cdrcmple>
 8000ac8:	bf34      	ite	cc
 8000aca:	2001      	movcc	r0, #1
 8000acc:	2000      	movcs	r0, #0
 8000ace:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ad2:	bf00      	nop

08000ad4 <__aeabi_dcmpun>:
 8000ad4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000adc:	d102      	bne.n	8000ae4 <__aeabi_dcmpun+0x10>
 8000ade:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ae2:	d10a      	bne.n	8000afa <__aeabi_dcmpun+0x26>
 8000ae4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aec:	d102      	bne.n	8000af4 <__aeabi_dcmpun+0x20>
 8000aee:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000af2:	d102      	bne.n	8000afa <__aeabi_dcmpun+0x26>
 8000af4:	f04f 0000 	mov.w	r0, #0
 8000af8:	4770      	bx	lr
 8000afa:	f04f 0001 	mov.w	r0, #1
 8000afe:	4770      	bx	lr

08000b00 <__aeabi_d2f>:
 8000b00:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b04:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b08:	bf24      	itt	cs
 8000b0a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b0e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b12:	d90d      	bls.n	8000b30 <__aeabi_d2f+0x30>
 8000b14:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b18:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b1c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b20:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b24:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b28:	bf08      	it	eq
 8000b2a:	f020 0001 	biceq.w	r0, r0, #1
 8000b2e:	4770      	bx	lr
 8000b30:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b34:	d121      	bne.n	8000b7a <__aeabi_d2f+0x7a>
 8000b36:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b3a:	bfbc      	itt	lt
 8000b3c:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b40:	4770      	bxlt	lr
 8000b42:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b46:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b4a:	f1c2 0218 	rsb	r2, r2, #24
 8000b4e:	f1c2 0c20 	rsb	ip, r2, #32
 8000b52:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b56:	fa20 f002 	lsr.w	r0, r0, r2
 8000b5a:	bf18      	it	ne
 8000b5c:	f040 0001 	orrne.w	r0, r0, #1
 8000b60:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b64:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b68:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b6c:	ea40 000c 	orr.w	r0, r0, ip
 8000b70:	fa23 f302 	lsr.w	r3, r3, r2
 8000b74:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b78:	e7cc      	b.n	8000b14 <__aeabi_d2f+0x14>
 8000b7a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b7e:	d107      	bne.n	8000b90 <__aeabi_d2f+0x90>
 8000b80:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b84:	bf1e      	ittt	ne
 8000b86:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b8a:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b8e:	4770      	bxne	lr
 8000b90:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b94:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b98:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b9c:	4770      	bx	lr
 8000b9e:	bf00      	nop

08000ba0 <__aeabi_frsub>:
 8000ba0:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000ba4:	e002      	b.n	8000bac <__addsf3>
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_fsub>:
 8000ba8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000bac <__addsf3>:
 8000bac:	0042      	lsls	r2, r0, #1
 8000bae:	bf1f      	itttt	ne
 8000bb0:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000bb4:	ea92 0f03 	teqne	r2, r3
 8000bb8:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000bbc:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bc0:	d06a      	beq.n	8000c98 <__addsf3+0xec>
 8000bc2:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bc6:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bca:	bfc1      	itttt	gt
 8000bcc:	18d2      	addgt	r2, r2, r3
 8000bce:	4041      	eorgt	r1, r0
 8000bd0:	4048      	eorgt	r0, r1
 8000bd2:	4041      	eorgt	r1, r0
 8000bd4:	bfb8      	it	lt
 8000bd6:	425b      	neglt	r3, r3
 8000bd8:	2b19      	cmp	r3, #25
 8000bda:	bf88      	it	hi
 8000bdc:	4770      	bxhi	lr
 8000bde:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000be2:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000be6:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000bea:	bf18      	it	ne
 8000bec:	4240      	negne	r0, r0
 8000bee:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bf2:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000bf6:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000bfa:	bf18      	it	ne
 8000bfc:	4249      	negne	r1, r1
 8000bfe:	ea92 0f03 	teq	r2, r3
 8000c02:	d03f      	beq.n	8000c84 <__addsf3+0xd8>
 8000c04:	f1a2 0201 	sub.w	r2, r2, #1
 8000c08:	fa41 fc03 	asr.w	ip, r1, r3
 8000c0c:	eb10 000c 	adds.w	r0, r0, ip
 8000c10:	f1c3 0320 	rsb	r3, r3, #32
 8000c14:	fa01 f103 	lsl.w	r1, r1, r3
 8000c18:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c1c:	d502      	bpl.n	8000c24 <__addsf3+0x78>
 8000c1e:	4249      	negs	r1, r1
 8000c20:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c24:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000c28:	d313      	bcc.n	8000c52 <__addsf3+0xa6>
 8000c2a:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000c2e:	d306      	bcc.n	8000c3e <__addsf3+0x92>
 8000c30:	0840      	lsrs	r0, r0, #1
 8000c32:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c36:	f102 0201 	add.w	r2, r2, #1
 8000c3a:	2afe      	cmp	r2, #254	@ 0xfe
 8000c3c:	d251      	bcs.n	8000ce2 <__addsf3+0x136>
 8000c3e:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c42:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c46:	bf08      	it	eq
 8000c48:	f020 0001 	biceq.w	r0, r0, #1
 8000c4c:	ea40 0003 	orr.w	r0, r0, r3
 8000c50:	4770      	bx	lr
 8000c52:	0049      	lsls	r1, r1, #1
 8000c54:	eb40 0000 	adc.w	r0, r0, r0
 8000c58:	3a01      	subs	r2, #1
 8000c5a:	bf28      	it	cs
 8000c5c:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c60:	d2ed      	bcs.n	8000c3e <__addsf3+0x92>
 8000c62:	fab0 fc80 	clz	ip, r0
 8000c66:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c6a:	ebb2 020c 	subs.w	r2, r2, ip
 8000c6e:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c72:	bfaa      	itet	ge
 8000c74:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c78:	4252      	neglt	r2, r2
 8000c7a:	4318      	orrge	r0, r3
 8000c7c:	bfbc      	itt	lt
 8000c7e:	40d0      	lsrlt	r0, r2
 8000c80:	4318      	orrlt	r0, r3
 8000c82:	4770      	bx	lr
 8000c84:	f092 0f00 	teq	r2, #0
 8000c88:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c8c:	bf06      	itte	eq
 8000c8e:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c92:	3201      	addeq	r2, #1
 8000c94:	3b01      	subne	r3, #1
 8000c96:	e7b5      	b.n	8000c04 <__addsf3+0x58>
 8000c98:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c9c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000ca0:	bf18      	it	ne
 8000ca2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ca6:	d021      	beq.n	8000cec <__addsf3+0x140>
 8000ca8:	ea92 0f03 	teq	r2, r3
 8000cac:	d004      	beq.n	8000cb8 <__addsf3+0x10c>
 8000cae:	f092 0f00 	teq	r2, #0
 8000cb2:	bf08      	it	eq
 8000cb4:	4608      	moveq	r0, r1
 8000cb6:	4770      	bx	lr
 8000cb8:	ea90 0f01 	teq	r0, r1
 8000cbc:	bf1c      	itt	ne
 8000cbe:	2000      	movne	r0, #0
 8000cc0:	4770      	bxne	lr
 8000cc2:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000cc6:	d104      	bne.n	8000cd2 <__addsf3+0x126>
 8000cc8:	0040      	lsls	r0, r0, #1
 8000cca:	bf28      	it	cs
 8000ccc:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000cd0:	4770      	bx	lr
 8000cd2:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000cd6:	bf3c      	itt	cc
 8000cd8:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000cdc:	4770      	bxcc	lr
 8000cde:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000ce2:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000ce6:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cea:	4770      	bx	lr
 8000cec:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cf0:	bf16      	itet	ne
 8000cf2:	4608      	movne	r0, r1
 8000cf4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000cf8:	4601      	movne	r1, r0
 8000cfa:	0242      	lsls	r2, r0, #9
 8000cfc:	bf06      	itte	eq
 8000cfe:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d02:	ea90 0f01 	teqeq	r0, r1
 8000d06:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000d0a:	4770      	bx	lr

08000d0c <__aeabi_ui2f>:
 8000d0c:	f04f 0300 	mov.w	r3, #0
 8000d10:	e004      	b.n	8000d1c <__aeabi_i2f+0x8>
 8000d12:	bf00      	nop

08000d14 <__aeabi_i2f>:
 8000d14:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000d18:	bf48      	it	mi
 8000d1a:	4240      	negmi	r0, r0
 8000d1c:	ea5f 0c00 	movs.w	ip, r0
 8000d20:	bf08      	it	eq
 8000d22:	4770      	bxeq	lr
 8000d24:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000d28:	4601      	mov	r1, r0
 8000d2a:	f04f 0000 	mov.w	r0, #0
 8000d2e:	e01c      	b.n	8000d6a <__aeabi_l2f+0x2a>

08000d30 <__aeabi_ul2f>:
 8000d30:	ea50 0201 	orrs.w	r2, r0, r1
 8000d34:	bf08      	it	eq
 8000d36:	4770      	bxeq	lr
 8000d38:	f04f 0300 	mov.w	r3, #0
 8000d3c:	e00a      	b.n	8000d54 <__aeabi_l2f+0x14>
 8000d3e:	bf00      	nop

08000d40 <__aeabi_l2f>:
 8000d40:	ea50 0201 	orrs.w	r2, r0, r1
 8000d44:	bf08      	it	eq
 8000d46:	4770      	bxeq	lr
 8000d48:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d4c:	d502      	bpl.n	8000d54 <__aeabi_l2f+0x14>
 8000d4e:	4240      	negs	r0, r0
 8000d50:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d54:	ea5f 0c01 	movs.w	ip, r1
 8000d58:	bf02      	ittt	eq
 8000d5a:	4684      	moveq	ip, r0
 8000d5c:	4601      	moveq	r1, r0
 8000d5e:	2000      	moveq	r0, #0
 8000d60:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d64:	bf08      	it	eq
 8000d66:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d6a:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d6e:	fabc f28c 	clz	r2, ip
 8000d72:	3a08      	subs	r2, #8
 8000d74:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d78:	db10      	blt.n	8000d9c <__aeabi_l2f+0x5c>
 8000d7a:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d7e:	4463      	add	r3, ip
 8000d80:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d84:	f1c2 0220 	rsb	r2, r2, #32
 8000d88:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d8c:	fa20 f202 	lsr.w	r2, r0, r2
 8000d90:	eb43 0002 	adc.w	r0, r3, r2
 8000d94:	bf08      	it	eq
 8000d96:	f020 0001 	biceq.w	r0, r0, #1
 8000d9a:	4770      	bx	lr
 8000d9c:	f102 0220 	add.w	r2, r2, #32
 8000da0:	fa01 fc02 	lsl.w	ip, r1, r2
 8000da4:	f1c2 0220 	rsb	r2, r2, #32
 8000da8:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000dac:	fa21 f202 	lsr.w	r2, r1, r2
 8000db0:	eb43 0002 	adc.w	r0, r3, r2
 8000db4:	bf08      	it	eq
 8000db6:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000dba:	4770      	bx	lr

08000dbc <__aeabi_fmul>:
 8000dbc:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000dc0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dc4:	bf1e      	ittt	ne
 8000dc6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000dca:	ea92 0f0c 	teqne	r2, ip
 8000dce:	ea93 0f0c 	teqne	r3, ip
 8000dd2:	d06f      	beq.n	8000eb4 <__aeabi_fmul+0xf8>
 8000dd4:	441a      	add	r2, r3
 8000dd6:	ea80 0c01 	eor.w	ip, r0, r1
 8000dda:	0240      	lsls	r0, r0, #9
 8000ddc:	bf18      	it	ne
 8000dde:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000de2:	d01e      	beq.n	8000e22 <__aeabi_fmul+0x66>
 8000de4:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000de8:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000dec:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000df0:	fba0 3101 	umull	r3, r1, r0, r1
 8000df4:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000df8:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000dfc:	bf3e      	ittt	cc
 8000dfe:	0049      	lslcc	r1, r1, #1
 8000e00:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000e04:	005b      	lslcc	r3, r3, #1
 8000e06:	ea40 0001 	orr.w	r0, r0, r1
 8000e0a:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000e0e:	2afd      	cmp	r2, #253	@ 0xfd
 8000e10:	d81d      	bhi.n	8000e4e <__aeabi_fmul+0x92>
 8000e12:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000e16:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e1a:	bf08      	it	eq
 8000e1c:	f020 0001 	biceq.w	r0, r0, #1
 8000e20:	4770      	bx	lr
 8000e22:	f090 0f00 	teq	r0, #0
 8000e26:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000e2a:	bf08      	it	eq
 8000e2c:	0249      	lsleq	r1, r1, #9
 8000e2e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e32:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e36:	3a7f      	subs	r2, #127	@ 0x7f
 8000e38:	bfc2      	ittt	gt
 8000e3a:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000e3e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e42:	4770      	bxgt	lr
 8000e44:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e48:	f04f 0300 	mov.w	r3, #0
 8000e4c:	3a01      	subs	r2, #1
 8000e4e:	dc5d      	bgt.n	8000f0c <__aeabi_fmul+0x150>
 8000e50:	f112 0f19 	cmn.w	r2, #25
 8000e54:	bfdc      	itt	le
 8000e56:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000e5a:	4770      	bxle	lr
 8000e5c:	f1c2 0200 	rsb	r2, r2, #0
 8000e60:	0041      	lsls	r1, r0, #1
 8000e62:	fa21 f102 	lsr.w	r1, r1, r2
 8000e66:	f1c2 0220 	rsb	r2, r2, #32
 8000e6a:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e6e:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e72:	f140 0000 	adc.w	r0, r0, #0
 8000e76:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e7a:	bf08      	it	eq
 8000e7c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e80:	4770      	bx	lr
 8000e82:	f092 0f00 	teq	r2, #0
 8000e86:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e8a:	bf02      	ittt	eq
 8000e8c:	0040      	lsleq	r0, r0, #1
 8000e8e:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e92:	3a01      	subeq	r2, #1
 8000e94:	d0f9      	beq.n	8000e8a <__aeabi_fmul+0xce>
 8000e96:	ea40 000c 	orr.w	r0, r0, ip
 8000e9a:	f093 0f00 	teq	r3, #0
 8000e9e:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000ea2:	bf02      	ittt	eq
 8000ea4:	0049      	lsleq	r1, r1, #1
 8000ea6:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000eaa:	3b01      	subeq	r3, #1
 8000eac:	d0f9      	beq.n	8000ea2 <__aeabi_fmul+0xe6>
 8000eae:	ea41 010c 	orr.w	r1, r1, ip
 8000eb2:	e78f      	b.n	8000dd4 <__aeabi_fmul+0x18>
 8000eb4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000eb8:	ea92 0f0c 	teq	r2, ip
 8000ebc:	bf18      	it	ne
 8000ebe:	ea93 0f0c 	teqne	r3, ip
 8000ec2:	d00a      	beq.n	8000eda <__aeabi_fmul+0x11e>
 8000ec4:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000ec8:	bf18      	it	ne
 8000eca:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000ece:	d1d8      	bne.n	8000e82 <__aeabi_fmul+0xc6>
 8000ed0:	ea80 0001 	eor.w	r0, r0, r1
 8000ed4:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ed8:	4770      	bx	lr
 8000eda:	f090 0f00 	teq	r0, #0
 8000ede:	bf17      	itett	ne
 8000ee0:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000ee4:	4608      	moveq	r0, r1
 8000ee6:	f091 0f00 	teqne	r1, #0
 8000eea:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000eee:	d014      	beq.n	8000f1a <__aeabi_fmul+0x15e>
 8000ef0:	ea92 0f0c 	teq	r2, ip
 8000ef4:	d101      	bne.n	8000efa <__aeabi_fmul+0x13e>
 8000ef6:	0242      	lsls	r2, r0, #9
 8000ef8:	d10f      	bne.n	8000f1a <__aeabi_fmul+0x15e>
 8000efa:	ea93 0f0c 	teq	r3, ip
 8000efe:	d103      	bne.n	8000f08 <__aeabi_fmul+0x14c>
 8000f00:	024b      	lsls	r3, r1, #9
 8000f02:	bf18      	it	ne
 8000f04:	4608      	movne	r0, r1
 8000f06:	d108      	bne.n	8000f1a <__aeabi_fmul+0x15e>
 8000f08:	ea80 0001 	eor.w	r0, r0, r1
 8000f0c:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000f10:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000f14:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f18:	4770      	bx	lr
 8000f1a:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000f1e:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000f22:	4770      	bx	lr

08000f24 <__aeabi_fdiv>:
 8000f24:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000f28:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f2c:	bf1e      	ittt	ne
 8000f2e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f32:	ea92 0f0c 	teqne	r2, ip
 8000f36:	ea93 0f0c 	teqne	r3, ip
 8000f3a:	d069      	beq.n	8001010 <__aeabi_fdiv+0xec>
 8000f3c:	eba2 0203 	sub.w	r2, r2, r3
 8000f40:	ea80 0c01 	eor.w	ip, r0, r1
 8000f44:	0249      	lsls	r1, r1, #9
 8000f46:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f4a:	d037      	beq.n	8000fbc <__aeabi_fdiv+0x98>
 8000f4c:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000f50:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f54:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f58:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f5c:	428b      	cmp	r3, r1
 8000f5e:	bf38      	it	cc
 8000f60:	005b      	lslcc	r3, r3, #1
 8000f62:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000f66:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000f6a:	428b      	cmp	r3, r1
 8000f6c:	bf24      	itt	cs
 8000f6e:	1a5b      	subcs	r3, r3, r1
 8000f70:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f74:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f78:	bf24      	itt	cs
 8000f7a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f7e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f82:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f86:	bf24      	itt	cs
 8000f88:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f8c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f90:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f94:	bf24      	itt	cs
 8000f96:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f9a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f9e:	011b      	lsls	r3, r3, #4
 8000fa0:	bf18      	it	ne
 8000fa2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000fa6:	d1e0      	bne.n	8000f6a <__aeabi_fdiv+0x46>
 8000fa8:	2afd      	cmp	r2, #253	@ 0xfd
 8000faa:	f63f af50 	bhi.w	8000e4e <__aeabi_fmul+0x92>
 8000fae:	428b      	cmp	r3, r1
 8000fb0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000fb4:	bf08      	it	eq
 8000fb6:	f020 0001 	biceq.w	r0, r0, #1
 8000fba:	4770      	bx	lr
 8000fbc:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000fc0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fc4:	327f      	adds	r2, #127	@ 0x7f
 8000fc6:	bfc2      	ittt	gt
 8000fc8:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000fcc:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fd0:	4770      	bxgt	lr
 8000fd2:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000fd6:	f04f 0300 	mov.w	r3, #0
 8000fda:	3a01      	subs	r2, #1
 8000fdc:	e737      	b.n	8000e4e <__aeabi_fmul+0x92>
 8000fde:	f092 0f00 	teq	r2, #0
 8000fe2:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fe6:	bf02      	ittt	eq
 8000fe8:	0040      	lsleq	r0, r0, #1
 8000fea:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000fee:	3a01      	subeq	r2, #1
 8000ff0:	d0f9      	beq.n	8000fe6 <__aeabi_fdiv+0xc2>
 8000ff2:	ea40 000c 	orr.w	r0, r0, ip
 8000ff6:	f093 0f00 	teq	r3, #0
 8000ffa:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000ffe:	bf02      	ittt	eq
 8001000:	0049      	lsleq	r1, r1, #1
 8001002:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8001006:	3b01      	subeq	r3, #1
 8001008:	d0f9      	beq.n	8000ffe <__aeabi_fdiv+0xda>
 800100a:	ea41 010c 	orr.w	r1, r1, ip
 800100e:	e795      	b.n	8000f3c <__aeabi_fdiv+0x18>
 8001010:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8001014:	ea92 0f0c 	teq	r2, ip
 8001018:	d108      	bne.n	800102c <__aeabi_fdiv+0x108>
 800101a:	0242      	lsls	r2, r0, #9
 800101c:	f47f af7d 	bne.w	8000f1a <__aeabi_fmul+0x15e>
 8001020:	ea93 0f0c 	teq	r3, ip
 8001024:	f47f af70 	bne.w	8000f08 <__aeabi_fmul+0x14c>
 8001028:	4608      	mov	r0, r1
 800102a:	e776      	b.n	8000f1a <__aeabi_fmul+0x15e>
 800102c:	ea93 0f0c 	teq	r3, ip
 8001030:	d104      	bne.n	800103c <__aeabi_fdiv+0x118>
 8001032:	024b      	lsls	r3, r1, #9
 8001034:	f43f af4c 	beq.w	8000ed0 <__aeabi_fmul+0x114>
 8001038:	4608      	mov	r0, r1
 800103a:	e76e      	b.n	8000f1a <__aeabi_fmul+0x15e>
 800103c:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001040:	bf18      	it	ne
 8001042:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8001046:	d1ca      	bne.n	8000fde <__aeabi_fdiv+0xba>
 8001048:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 800104c:	f47f af5c 	bne.w	8000f08 <__aeabi_fmul+0x14c>
 8001050:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8001054:	f47f af3c 	bne.w	8000ed0 <__aeabi_fmul+0x114>
 8001058:	e75f      	b.n	8000f1a <__aeabi_fmul+0x15e>
 800105a:	bf00      	nop

0800105c <__aeabi_f2uiz>:
 800105c:	0042      	lsls	r2, r0, #1
 800105e:	d20e      	bcs.n	800107e <__aeabi_f2uiz+0x22>
 8001060:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8001064:	d30b      	bcc.n	800107e <__aeabi_f2uiz+0x22>
 8001066:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 800106a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800106e:	d409      	bmi.n	8001084 <__aeabi_f2uiz+0x28>
 8001070:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001074:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8001078:	fa23 f002 	lsr.w	r0, r3, r2
 800107c:	4770      	bx	lr
 800107e:	f04f 0000 	mov.w	r0, #0
 8001082:	4770      	bx	lr
 8001084:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8001088:	d101      	bne.n	800108e <__aeabi_f2uiz+0x32>
 800108a:	0242      	lsls	r2, r0, #9
 800108c:	d102      	bne.n	8001094 <__aeabi_f2uiz+0x38>
 800108e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001092:	4770      	bx	lr
 8001094:	f04f 0000 	mov.w	r0, #0
 8001098:	4770      	bx	lr
 800109a:	bf00      	nop

0800109c <__aeabi_uldivmod>:
 800109c:	b953      	cbnz	r3, 80010b4 <__aeabi_uldivmod+0x18>
 800109e:	b94a      	cbnz	r2, 80010b4 <__aeabi_uldivmod+0x18>
 80010a0:	2900      	cmp	r1, #0
 80010a2:	bf08      	it	eq
 80010a4:	2800      	cmpeq	r0, #0
 80010a6:	bf1c      	itt	ne
 80010a8:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 80010ac:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 80010b0:	f000 b968 	b.w	8001384 <__aeabi_idiv0>
 80010b4:	f1ad 0c08 	sub.w	ip, sp, #8
 80010b8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80010bc:	f000 f806 	bl	80010cc <__udivmoddi4>
 80010c0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80010c4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80010c8:	b004      	add	sp, #16
 80010ca:	4770      	bx	lr

080010cc <__udivmoddi4>:
 80010cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80010d0:	9d08      	ldr	r5, [sp, #32]
 80010d2:	460c      	mov	r4, r1
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	d14e      	bne.n	8001176 <__udivmoddi4+0xaa>
 80010d8:	4694      	mov	ip, r2
 80010da:	458c      	cmp	ip, r1
 80010dc:	4686      	mov	lr, r0
 80010de:	fab2 f282 	clz	r2, r2
 80010e2:	d962      	bls.n	80011aa <__udivmoddi4+0xde>
 80010e4:	b14a      	cbz	r2, 80010fa <__udivmoddi4+0x2e>
 80010e6:	f1c2 0320 	rsb	r3, r2, #32
 80010ea:	4091      	lsls	r1, r2
 80010ec:	fa20 f303 	lsr.w	r3, r0, r3
 80010f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80010f4:	4319      	orrs	r1, r3
 80010f6:	fa00 fe02 	lsl.w	lr, r0, r2
 80010fa:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80010fe:	fbb1 f4f7 	udiv	r4, r1, r7
 8001102:	fb07 1114 	mls	r1, r7, r4, r1
 8001106:	fa1f f68c 	uxth.w	r6, ip
 800110a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800110e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8001112:	fb04 f106 	mul.w	r1, r4, r6
 8001116:	4299      	cmp	r1, r3
 8001118:	d90a      	bls.n	8001130 <__udivmoddi4+0x64>
 800111a:	eb1c 0303 	adds.w	r3, ip, r3
 800111e:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
 8001122:	f080 8110 	bcs.w	8001346 <__udivmoddi4+0x27a>
 8001126:	4299      	cmp	r1, r3
 8001128:	f240 810d 	bls.w	8001346 <__udivmoddi4+0x27a>
 800112c:	3c02      	subs	r4, #2
 800112e:	4463      	add	r3, ip
 8001130:	1a59      	subs	r1, r3, r1
 8001132:	fbb1 f0f7 	udiv	r0, r1, r7
 8001136:	fb07 1110 	mls	r1, r7, r0, r1
 800113a:	fb00 f606 	mul.w	r6, r0, r6
 800113e:	fa1f f38e 	uxth.w	r3, lr
 8001142:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8001146:	429e      	cmp	r6, r3
 8001148:	d90a      	bls.n	8001160 <__udivmoddi4+0x94>
 800114a:	eb1c 0303 	adds.w	r3, ip, r3
 800114e:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
 8001152:	f080 80fa 	bcs.w	800134a <__udivmoddi4+0x27e>
 8001156:	429e      	cmp	r6, r3
 8001158:	f240 80f7 	bls.w	800134a <__udivmoddi4+0x27e>
 800115c:	4463      	add	r3, ip
 800115e:	3802      	subs	r0, #2
 8001160:	2100      	movs	r1, #0
 8001162:	1b9b      	subs	r3, r3, r6
 8001164:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8001168:	b11d      	cbz	r5, 8001172 <__udivmoddi4+0xa6>
 800116a:	40d3      	lsrs	r3, r2
 800116c:	2200      	movs	r2, #0
 800116e:	e9c5 3200 	strd	r3, r2, [r5]
 8001172:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001176:	428b      	cmp	r3, r1
 8001178:	d905      	bls.n	8001186 <__udivmoddi4+0xba>
 800117a:	b10d      	cbz	r5, 8001180 <__udivmoddi4+0xb4>
 800117c:	e9c5 0100 	strd	r0, r1, [r5]
 8001180:	2100      	movs	r1, #0
 8001182:	4608      	mov	r0, r1
 8001184:	e7f5      	b.n	8001172 <__udivmoddi4+0xa6>
 8001186:	fab3 f183 	clz	r1, r3
 800118a:	2900      	cmp	r1, #0
 800118c:	d146      	bne.n	800121c <__udivmoddi4+0x150>
 800118e:	42a3      	cmp	r3, r4
 8001190:	d302      	bcc.n	8001198 <__udivmoddi4+0xcc>
 8001192:	4290      	cmp	r0, r2
 8001194:	f0c0 80ee 	bcc.w	8001374 <__udivmoddi4+0x2a8>
 8001198:	1a86      	subs	r6, r0, r2
 800119a:	eb64 0303 	sbc.w	r3, r4, r3
 800119e:	2001      	movs	r0, #1
 80011a0:	2d00      	cmp	r5, #0
 80011a2:	d0e6      	beq.n	8001172 <__udivmoddi4+0xa6>
 80011a4:	e9c5 6300 	strd	r6, r3, [r5]
 80011a8:	e7e3      	b.n	8001172 <__udivmoddi4+0xa6>
 80011aa:	2a00      	cmp	r2, #0
 80011ac:	f040 808f 	bne.w	80012ce <__udivmoddi4+0x202>
 80011b0:	eba1 040c 	sub.w	r4, r1, ip
 80011b4:	2101      	movs	r1, #1
 80011b6:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80011ba:	fa1f f78c 	uxth.w	r7, ip
 80011be:	fbb4 f6f8 	udiv	r6, r4, r8
 80011c2:	fb08 4416 	mls	r4, r8, r6, r4
 80011c6:	fb07 f006 	mul.w	r0, r7, r6
 80011ca:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80011ce:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80011d2:	4298      	cmp	r0, r3
 80011d4:	d908      	bls.n	80011e8 <__udivmoddi4+0x11c>
 80011d6:	eb1c 0303 	adds.w	r3, ip, r3
 80011da:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
 80011de:	d202      	bcs.n	80011e6 <__udivmoddi4+0x11a>
 80011e0:	4298      	cmp	r0, r3
 80011e2:	f200 80cb 	bhi.w	800137c <__udivmoddi4+0x2b0>
 80011e6:	4626      	mov	r6, r4
 80011e8:	1a1c      	subs	r4, r3, r0
 80011ea:	fbb4 f0f8 	udiv	r0, r4, r8
 80011ee:	fb08 4410 	mls	r4, r8, r0, r4
 80011f2:	fb00 f707 	mul.w	r7, r0, r7
 80011f6:	fa1f f38e 	uxth.w	r3, lr
 80011fa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80011fe:	429f      	cmp	r7, r3
 8001200:	d908      	bls.n	8001214 <__udivmoddi4+0x148>
 8001202:	eb1c 0303 	adds.w	r3, ip, r3
 8001206:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
 800120a:	d202      	bcs.n	8001212 <__udivmoddi4+0x146>
 800120c:	429f      	cmp	r7, r3
 800120e:	f200 80ae 	bhi.w	800136e <__udivmoddi4+0x2a2>
 8001212:	4620      	mov	r0, r4
 8001214:	1bdb      	subs	r3, r3, r7
 8001216:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800121a:	e7a5      	b.n	8001168 <__udivmoddi4+0x9c>
 800121c:	f1c1 0720 	rsb	r7, r1, #32
 8001220:	408b      	lsls	r3, r1
 8001222:	fa22 fc07 	lsr.w	ip, r2, r7
 8001226:	ea4c 0c03 	orr.w	ip, ip, r3
 800122a:	fa24 f607 	lsr.w	r6, r4, r7
 800122e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8001232:	fbb6 f8f9 	udiv	r8, r6, r9
 8001236:	fa1f fe8c 	uxth.w	lr, ip
 800123a:	fb09 6618 	mls	r6, r9, r8, r6
 800123e:	fa20 f307 	lsr.w	r3, r0, r7
 8001242:	408c      	lsls	r4, r1
 8001244:	fa00 fa01 	lsl.w	sl, r0, r1
 8001248:	fb08 f00e 	mul.w	r0, r8, lr
 800124c:	431c      	orrs	r4, r3
 800124e:	0c23      	lsrs	r3, r4, #16
 8001250:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8001254:	4298      	cmp	r0, r3
 8001256:	fa02 f201 	lsl.w	r2, r2, r1
 800125a:	d90a      	bls.n	8001272 <__udivmoddi4+0x1a6>
 800125c:	eb1c 0303 	adds.w	r3, ip, r3
 8001260:	f108 36ff 	add.w	r6, r8, #4294967295	@ 0xffffffff
 8001264:	f080 8081 	bcs.w	800136a <__udivmoddi4+0x29e>
 8001268:	4298      	cmp	r0, r3
 800126a:	d97e      	bls.n	800136a <__udivmoddi4+0x29e>
 800126c:	f1a8 0802 	sub.w	r8, r8, #2
 8001270:	4463      	add	r3, ip
 8001272:	1a1e      	subs	r6, r3, r0
 8001274:	fbb6 f3f9 	udiv	r3, r6, r9
 8001278:	fb09 6613 	mls	r6, r9, r3, r6
 800127c:	fb03 fe0e 	mul.w	lr, r3, lr
 8001280:	b2a4      	uxth	r4, r4
 8001282:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8001286:	45a6      	cmp	lr, r4
 8001288:	d908      	bls.n	800129c <__udivmoddi4+0x1d0>
 800128a:	eb1c 0404 	adds.w	r4, ip, r4
 800128e:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
 8001292:	d266      	bcs.n	8001362 <__udivmoddi4+0x296>
 8001294:	45a6      	cmp	lr, r4
 8001296:	d964      	bls.n	8001362 <__udivmoddi4+0x296>
 8001298:	3b02      	subs	r3, #2
 800129a:	4464      	add	r4, ip
 800129c:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 80012a0:	fba0 8302 	umull	r8, r3, r0, r2
 80012a4:	eba4 040e 	sub.w	r4, r4, lr
 80012a8:	429c      	cmp	r4, r3
 80012aa:	46c6      	mov	lr, r8
 80012ac:	461e      	mov	r6, r3
 80012ae:	d350      	bcc.n	8001352 <__udivmoddi4+0x286>
 80012b0:	d04d      	beq.n	800134e <__udivmoddi4+0x282>
 80012b2:	b155      	cbz	r5, 80012ca <__udivmoddi4+0x1fe>
 80012b4:	ebba 030e 	subs.w	r3, sl, lr
 80012b8:	eb64 0406 	sbc.w	r4, r4, r6
 80012bc:	fa04 f707 	lsl.w	r7, r4, r7
 80012c0:	40cb      	lsrs	r3, r1
 80012c2:	431f      	orrs	r7, r3
 80012c4:	40cc      	lsrs	r4, r1
 80012c6:	e9c5 7400 	strd	r7, r4, [r5]
 80012ca:	2100      	movs	r1, #0
 80012cc:	e751      	b.n	8001172 <__udivmoddi4+0xa6>
 80012ce:	fa0c fc02 	lsl.w	ip, ip, r2
 80012d2:	f1c2 0320 	rsb	r3, r2, #32
 80012d6:	40d9      	lsrs	r1, r3
 80012d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80012dc:	fa20 f303 	lsr.w	r3, r0, r3
 80012e0:	fa00 fe02 	lsl.w	lr, r0, r2
 80012e4:	fbb1 f0f8 	udiv	r0, r1, r8
 80012e8:	fb08 1110 	mls	r1, r8, r0, r1
 80012ec:	4094      	lsls	r4, r2
 80012ee:	431c      	orrs	r4, r3
 80012f0:	fa1f f78c 	uxth.w	r7, ip
 80012f4:	0c23      	lsrs	r3, r4, #16
 80012f6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80012fa:	fb00 f107 	mul.w	r1, r0, r7
 80012fe:	4299      	cmp	r1, r3
 8001300:	d908      	bls.n	8001314 <__udivmoddi4+0x248>
 8001302:	eb1c 0303 	adds.w	r3, ip, r3
 8001306:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
 800130a:	d22c      	bcs.n	8001366 <__udivmoddi4+0x29a>
 800130c:	4299      	cmp	r1, r3
 800130e:	d92a      	bls.n	8001366 <__udivmoddi4+0x29a>
 8001310:	3802      	subs	r0, #2
 8001312:	4463      	add	r3, ip
 8001314:	1a5b      	subs	r3, r3, r1
 8001316:	fbb3 f1f8 	udiv	r1, r3, r8
 800131a:	fb08 3311 	mls	r3, r8, r1, r3
 800131e:	b2a4      	uxth	r4, r4
 8001320:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8001324:	fb01 f307 	mul.w	r3, r1, r7
 8001328:	42a3      	cmp	r3, r4
 800132a:	d908      	bls.n	800133e <__udivmoddi4+0x272>
 800132c:	eb1c 0404 	adds.w	r4, ip, r4
 8001330:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
 8001334:	d213      	bcs.n	800135e <__udivmoddi4+0x292>
 8001336:	42a3      	cmp	r3, r4
 8001338:	d911      	bls.n	800135e <__udivmoddi4+0x292>
 800133a:	3902      	subs	r1, #2
 800133c:	4464      	add	r4, ip
 800133e:	1ae4      	subs	r4, r4, r3
 8001340:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8001344:	e73b      	b.n	80011be <__udivmoddi4+0xf2>
 8001346:	4604      	mov	r4, r0
 8001348:	e6f2      	b.n	8001130 <__udivmoddi4+0x64>
 800134a:	4608      	mov	r0, r1
 800134c:	e708      	b.n	8001160 <__udivmoddi4+0x94>
 800134e:	45c2      	cmp	sl, r8
 8001350:	d2af      	bcs.n	80012b2 <__udivmoddi4+0x1e6>
 8001352:	ebb8 0e02 	subs.w	lr, r8, r2
 8001356:	eb63 060c 	sbc.w	r6, r3, ip
 800135a:	3801      	subs	r0, #1
 800135c:	e7a9      	b.n	80012b2 <__udivmoddi4+0x1e6>
 800135e:	4631      	mov	r1, r6
 8001360:	e7ed      	b.n	800133e <__udivmoddi4+0x272>
 8001362:	4603      	mov	r3, r0
 8001364:	e79a      	b.n	800129c <__udivmoddi4+0x1d0>
 8001366:	4630      	mov	r0, r6
 8001368:	e7d4      	b.n	8001314 <__udivmoddi4+0x248>
 800136a:	46b0      	mov	r8, r6
 800136c:	e781      	b.n	8001272 <__udivmoddi4+0x1a6>
 800136e:	4463      	add	r3, ip
 8001370:	3802      	subs	r0, #2
 8001372:	e74f      	b.n	8001214 <__udivmoddi4+0x148>
 8001374:	4606      	mov	r6, r0
 8001376:	4623      	mov	r3, r4
 8001378:	4608      	mov	r0, r1
 800137a:	e711      	b.n	80011a0 <__udivmoddi4+0xd4>
 800137c:	3e02      	subs	r6, #2
 800137e:	4463      	add	r3, ip
 8001380:	e732      	b.n	80011e8 <__udivmoddi4+0x11c>
 8001382:	bf00      	nop

08001384 <__aeabi_idiv0>:
 8001384:	4770      	bx	lr
 8001386:	bf00      	nop

08001388 <Wakeup_Idle>:
LTC_CMD_RDCVC, LTC_CMD_RDCVD };

static const uint16_t LTC_CMD_AUXREG[2] = { LTC_CMD_RDAUXA, LTC_CMD_RDAUXB };

/* Wake LTC up from IDLE state into READY state */
void Wakeup_Idle(void) {
 8001388:	b580      	push	{r7, lr}
 800138a:	b082      	sub	sp, #8
 800138c:	af00      	add	r7, sp, #0
	uint8_t hex_ff = 0xFF;
 800138e:	23ff      	movs	r3, #255	@ 0xff
 8001390:	70fb      	strb	r3, [r7, #3]
	for (int i = 0; i < NUM_DEVICES; i++) {
 8001392:	2300      	movs	r3, #0
 8001394:	607b      	str	r3, [r7, #4]
 8001396:	e00c      	b.n	80013b2 <Wakeup_Idle+0x2a>
		LTC_nCS_Low();							   // Pull CS low
 8001398:	f001 fdb4 	bl	8002f04 <LTC_nCS_Low>
		HAL_SPI_Transmit(&hspi1, &hex_ff, 1, 100); // Send byte 0xFF to wake LTC up
 800139c:	1cf9      	adds	r1, r7, #3
 800139e:	2364      	movs	r3, #100	@ 0x64
 80013a0:	2201      	movs	r2, #1
 80013a2:	4808      	ldr	r0, [pc, #32]	@ (80013c4 <Wakeup_Idle+0x3c>)
 80013a4:	f004 f8d8 	bl	8005558 <HAL_SPI_Transmit>
		LTC_nCS_High();							   // Pull CS high
 80013a8:	f001 fda0 	bl	8002eec <LTC_nCS_High>
	for (int i = 0; i < NUM_DEVICES; i++) {
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	3301      	adds	r3, #1
 80013b0:	607b      	str	r3, [r7, #4]
 80013b2:	687b      	ldr	r3, [r7, #4]
 80013b4:	2b07      	cmp	r3, #7
 80013b6:	ddef      	ble.n	8001398 <Wakeup_Idle+0x10>
	}
}
 80013b8:	bf00      	nop
 80013ba:	bf00      	nop
 80013bc:	3708      	adds	r7, #8
 80013be:	46bd      	mov	sp, r7
 80013c0:	bd80      	pop	{r7, pc}
 80013c2:	bf00      	nop
 80013c4:	200001b8 	.word	0x200001b8

080013c8 <Wakeup_Sleep>:

// wake up sleep
void Wakeup_Sleep(void) {
 80013c8:	b580      	push	{r7, lr}
 80013ca:	b082      	sub	sp, #8
 80013cc:	af00      	add	r7, sp, #0

	for (int i = 0; i < NUM_DEVICES; i++) {
 80013ce:	2300      	movs	r3, #0
 80013d0:	607b      	str	r3, [r7, #4]
 80013d2:	e00c      	b.n	80013ee <Wakeup_Sleep+0x26>
		LTC_nCS_Low();
 80013d4:	f001 fd96 	bl	8002f04 <LTC_nCS_Low>
		HAL_Delay(1);
 80013d8:	2001      	movs	r0, #1
 80013da:	f001 ff61 	bl	80032a0 <HAL_Delay>
		LTC_nCS_High();
 80013de:	f001 fd85 	bl	8002eec <LTC_nCS_High>
		HAL_Delay(1);
 80013e2:	2001      	movs	r0, #1
 80013e4:	f001 ff5c 	bl	80032a0 <HAL_Delay>
	for (int i = 0; i < NUM_DEVICES; i++) {
 80013e8:	687b      	ldr	r3, [r7, #4]
 80013ea:	3301      	adds	r3, #1
 80013ec:	607b      	str	r3, [r7, #4]
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	2b07      	cmp	r3, #7
 80013f2:	ddef      	ble.n	80013d4 <Wakeup_Sleep+0xc>
	}
}
 80013f4:	bf00      	nop
 80013f6:	bf00      	nop
 80013f8:	3708      	adds	r7, #8
 80013fa:	46bd      	mov	sp, r7
 80013fc:	bd80      	pop	{r7, pc}
	...

08001400 <Read_Cell_Volt>:

/* Read and store raw cell voltages at uint8_t 2d pointer */
LTC_SPI_StatusTypeDef Read_Cell_Volt(uint16_t *read_voltages) {
 8001400:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001404:	b089      	sub	sp, #36	@ 0x24
 8001406:	af00      	add	r7, sp, #0
 8001408:	6078      	str	r0, [r7, #4]
 800140a:	466b      	mov	r3, sp
 800140c:	461e      	mov	r6, r3
	LTC_SPI_StatusTypeDef ret = LTC_SPI_OK;
 800140e:	2300      	movs	r3, #0
 8001410:	77fb      	strb	r3, [r7, #31]
	LTC_SPI_StatusTypeDef hal_ret;
	const uint8_t ARR_SIZE_REG = NUM_DEVICES * REG_LEN;
 8001412:	2340      	movs	r3, #64	@ 0x40
 8001414:	773b      	strb	r3, [r7, #28]
	uint8_t read_voltages_reg[ARR_SIZE_REG]; // Increased in size to handle multiple devices
 8001416:	7f3b      	ldrb	r3, [r7, #28]
 8001418:	3b01      	subs	r3, #1
 800141a:	61bb      	str	r3, [r7, #24]
 800141c:	7f3b      	ldrb	r3, [r7, #28]
 800141e:	2200      	movs	r2, #0
 8001420:	4698      	mov	r8, r3
 8001422:	4691      	mov	r9, r2
 8001424:	f04f 0200 	mov.w	r2, #0
 8001428:	f04f 0300 	mov.w	r3, #0
 800142c:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8001430:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8001434:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001438:	7f3b      	ldrb	r3, [r7, #28]
 800143a:	2200      	movs	r2, #0
 800143c:	461c      	mov	r4, r3
 800143e:	4615      	mov	r5, r2
 8001440:	f04f 0200 	mov.w	r2, #0
 8001444:	f04f 0300 	mov.w	r3, #0
 8001448:	00eb      	lsls	r3, r5, #3
 800144a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800144e:	00e2      	lsls	r2, r4, #3
 8001450:	7f3b      	ldrb	r3, [r7, #28]
 8001452:	3307      	adds	r3, #7
 8001454:	08db      	lsrs	r3, r3, #3
 8001456:	00db      	lsls	r3, r3, #3
 8001458:	ebad 0d03 	sub.w	sp, sp, r3
 800145c:	466b      	mov	r3, sp
 800145e:	3300      	adds	r3, #0
 8001460:	617b      	str	r3, [r7, #20]

	for (uint8_t i = 0; i < (NUM_CELL_SERIES_GROUP / LTC_SERIES_GROUPS_PER_RDCV);
 8001462:	2300      	movs	r3, #0
 8001464:	77bb      	strb	r3, [r7, #30]
 8001466:	e074      	b.n	8001552 <Read_Cell_Volt+0x152>
			i++) {
		uint8_t cmd[4];
		uint16_t cmd_pec;

		cmd[0] = (0xFF & (LTC_CMD_RDCV[i] >> 8)); // RDCV Register
 8001468:	7fbb      	ldrb	r3, [r7, #30]
 800146a:	4a3f      	ldr	r2, [pc, #252]	@ (8001568 <Read_Cell_Volt+0x168>)
 800146c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001470:	0a1b      	lsrs	r3, r3, #8
 8001472:	b29b      	uxth	r3, r3
 8001474:	b2db      	uxtb	r3, r3
 8001476:	723b      	strb	r3, [r7, #8]
		cmd[1] = (0xFF & (LTC_CMD_RDCV[i]));	  // RDCV Register
 8001478:	7fbb      	ldrb	r3, [r7, #30]
 800147a:	4a3b      	ldr	r2, [pc, #236]	@ (8001568 <Read_Cell_Volt+0x168>)
 800147c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001480:	b2db      	uxtb	r3, r3
 8001482:	727b      	strb	r3, [r7, #9]
		cmd_pec = LTC_Pec15_Calc(2, cmd);
 8001484:	f107 0308 	add.w	r3, r7, #8
 8001488:	4619      	mov	r1, r3
 800148a:	2002      	movs	r0, #2
 800148c:	f000 faa2 	bl	80019d4 <LTC_Pec15_Calc>
 8001490:	4603      	mov	r3, r0
 8001492:	827b      	strh	r3, [r7, #18]
		cmd[2] = (uint8_t) (cmd_pec >> 8);
 8001494:	8a7b      	ldrh	r3, [r7, #18]
 8001496:	0a1b      	lsrs	r3, r3, #8
 8001498:	b29b      	uxth	r3, r3
 800149a:	b2db      	uxtb	r3, r3
 800149c:	72bb      	strb	r3, [r7, #10]
		cmd[3] = (uint8_t) (cmd_pec);
 800149e:	8a7b      	ldrh	r3, [r7, #18]
 80014a0:	b2db      	uxtb	r3, r3
 80014a2:	72fb      	strb	r3, [r7, #11]

		Wakeup_Idle(); // Wake LTC up
 80014a4:	f7ff ff70 	bl	8001388 <Wakeup_Idle>

		LTC_nCS_Low(); // Pull CS low
 80014a8:	f001 fd2c 	bl	8002f04 <LTC_nCS_Low>

		hal_ret = HAL_SPI_Transmit(&hspi1, (uint8_t*) cmd, 4, 100);
 80014ac:	f107 0108 	add.w	r1, r7, #8
 80014b0:	2364      	movs	r3, #100	@ 0x64
 80014b2:	2204      	movs	r2, #4
 80014b4:	482d      	ldr	r0, [pc, #180]	@ (800156c <Read_Cell_Volt+0x16c>)
 80014b6:	f004 f84f 	bl	8005558 <HAL_SPI_Transmit>
 80014ba:	4603      	mov	r3, r0
 80014bc:	747b      	strb	r3, [r7, #17]
		if (hal_ret) {									// Non-zero means error
 80014be:	7c7b      	ldrb	r3, [r7, #17]
 80014c0:	2b00      	cmp	r3, #0
 80014c2:	d009      	beq.n	80014d8 <Read_Cell_Volt+0xd8>
			ret |= (1 << (hal_ret + LTC_SPI_TX_BIT_OFFSET)); // TX error
 80014c4:	7c7b      	ldrb	r3, [r7, #17]
 80014c6:	2201      	movs	r2, #1
 80014c8:	fa02 f303 	lsl.w	r3, r2, r3
 80014cc:	b25a      	sxtb	r2, r3
 80014ce:	f997 301f 	ldrsb.w	r3, [r7, #31]
 80014d2:	4313      	orrs	r3, r2
 80014d4:	b25b      	sxtb	r3, r3
 80014d6:	77fb      	strb	r3, [r7, #31]
		}

		hal_ret = HAL_SPI_Receive(&hspi1, (uint8_t*) read_voltages_reg,
 80014d8:	7f3b      	ldrb	r3, [r7, #28]
 80014da:	b29a      	uxth	r2, r3
 80014dc:	2364      	movs	r3, #100	@ 0x64
 80014de:	6979      	ldr	r1, [r7, #20]
 80014e0:	4822      	ldr	r0, [pc, #136]	@ (800156c <Read_Cell_Volt+0x16c>)
 80014e2:	f004 f97d 	bl	80057e0 <HAL_SPI_Receive>
 80014e6:	4603      	mov	r3, r0
 80014e8:	747b      	strb	r3, [r7, #17]
				ARR_SIZE_REG, 100);
		if (hal_ret) {									// Non-zero means error
 80014ea:	7c7b      	ldrb	r3, [r7, #17]
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d00a      	beq.n	8001506 <Read_Cell_Volt+0x106>
			ret |= (1 << (hal_ret + LTC_SPI_RX_BIT_OFFSET)); // RX error
 80014f0:	7c7b      	ldrb	r3, [r7, #17]
 80014f2:	3304      	adds	r3, #4
 80014f4:	2201      	movs	r2, #1
 80014f6:	fa02 f303 	lsl.w	r3, r2, r3
 80014fa:	b25a      	sxtb	r2, r3
 80014fc:	f997 301f 	ldrsb.w	r3, [r7, #31]
 8001500:	4313      	orrs	r3, r2
 8001502:	b25b      	sxtb	r3, r3
 8001504:	77fb      	strb	r3, [r7, #31]
		}
		LTC_nCS_High(); // Pull CS high
 8001506:	f001 fcf1 	bl	8002eec <LTC_nCS_High>

		// Process the received data
		for (uint8_t dev_idx = 0; dev_idx < NUM_DEVICES; dev_idx++) {
 800150a:	2300      	movs	r3, #0
 800150c:	777b      	strb	r3, [r7, #29]
 800150e:	e01a      	b.n	8001546 <Read_Cell_Volt+0x146>
			// Assuming data format is [cell voltage, cell voltage, ..., PEC, PEC]
			// PEC for each device is the last two bytes of its data segment
			uint8_t *data_ptr = &read_voltages_reg[dev_idx * REG_LEN];
 8001510:	7f7b      	ldrb	r3, [r7, #29]
 8001512:	00db      	lsls	r3, r3, #3
 8001514:	697a      	ldr	r2, [r7, #20]
 8001516:	4413      	add	r3, r2
 8001518:	60fb      	str	r3, [r7, #12]
			// If PEC matches, copy the voltage data, omitting the PEC bytes
			memcpy(
					&read_voltages[dev_idx * NUM_CELL_SERIES_GROUP
 800151a:	7f7a      	ldrb	r2, [r7, #29]
 800151c:	4613      	mov	r3, r2
 800151e:	005b      	lsls	r3, r3, #1
 8001520:	4413      	add	r3, r2
 8001522:	009b      	lsls	r3, r3, #2
 8001524:	4619      	mov	r1, r3
							+ i * LTC_SERIES_GROUPS_PER_RDCV], data_ptr,
 8001526:	7fba      	ldrb	r2, [r7, #30]
 8001528:	4613      	mov	r3, r2
 800152a:	005b      	lsls	r3, r3, #1
 800152c:	4413      	add	r3, r2
 800152e:	440b      	add	r3, r1
					&read_voltages[dev_idx * NUM_CELL_SERIES_GROUP
 8001530:	005b      	lsls	r3, r3, #1
 8001532:	687a      	ldr	r2, [r7, #4]
 8001534:	4413      	add	r3, r2
			memcpy(
 8001536:	2206      	movs	r2, #6
 8001538:	68f9      	ldr	r1, [r7, #12]
 800153a:	4618      	mov	r0, r3
 800153c:	f004 ff72 	bl	8006424 <memcpy>
		for (uint8_t dev_idx = 0; dev_idx < NUM_DEVICES; dev_idx++) {
 8001540:	7f7b      	ldrb	r3, [r7, #29]
 8001542:	3301      	adds	r3, #1
 8001544:	777b      	strb	r3, [r7, #29]
 8001546:	7f7b      	ldrb	r3, [r7, #29]
 8001548:	2b07      	cmp	r3, #7
 800154a:	d9e1      	bls.n	8001510 <Read_Cell_Volt+0x110>
			i++) {
 800154c:	7fbb      	ldrb	r3, [r7, #30]
 800154e:	3301      	adds	r3, #1
 8001550:	77bb      	strb	r3, [r7, #30]
	for (uint8_t i = 0; i < (NUM_CELL_SERIES_GROUP / LTC_SERIES_GROUPS_PER_RDCV);
 8001552:	7fbb      	ldrb	r3, [r7, #30]
 8001554:	2b03      	cmp	r3, #3
 8001556:	d987      	bls.n	8001468 <Read_Cell_Volt+0x68>
					REG_LEN - 2);
		}
	}

	return ret;
 8001558:	7ffb      	ldrb	r3, [r7, #31]
 800155a:	46b5      	mov	sp, r6
}
 800155c:	4618      	mov	r0, r3
 800155e:	3724      	adds	r7, #36	@ 0x24
 8001560:	46bd      	mov	sp, r7
 8001562:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001566:	bf00      	nop
 8001568:	0800682c 	.word	0x0800682c
 800156c:	200001b8 	.word	0x200001b8

08001570 <LTC_WRCOMM>:
/**
 * 
 * @param total_ic	The number of ICs being written to
 * @param comm[6]	A two dimensional array of the comm data that will be written
 */
void LTC_WRCOMM(uint8_t total_ic, uint8_t comm[6]) {
 8001570:	b580      	push	{r7, lr}
 8001572:	b086      	sub	sp, #24
 8001574:	af00      	add	r7, sp, #0
 8001576:	4603      	mov	r3, r0
 8001578:	6039      	str	r1, [r7, #0]
 800157a:	71fb      	strb	r3, [r7, #7]
	const uint8_t BYTES_IN_REG = 6;
 800157c:	2306      	movs	r3, #6
 800157e:	753b      	strb	r3, [r7, #20]
	const uint8_t CMD_LEN = 4 + (8 * total_ic);
 8001580:	79fb      	ldrb	r3, [r7, #7]
 8001582:	00db      	lsls	r3, r3, #3
 8001584:	b2db      	uxtb	r3, r3
 8001586:	3304      	adds	r3, #4
 8001588:	74fb      	strb	r3, [r7, #19]
	uint16_t comm_pec;
	uint16_t cmd_pec;
	uint8_t cmd_index; // command counter

	wrcomm_buffer[0] = 0x07;
 800158a:	4b2e      	ldr	r3, [pc, #184]	@ (8001644 <LTC_WRCOMM+0xd4>)
 800158c:	2207      	movs	r2, #7
 800158e:	701a      	strb	r2, [r3, #0]
	wrcomm_buffer[1] = 0x21;
 8001590:	4b2c      	ldr	r3, [pc, #176]	@ (8001644 <LTC_WRCOMM+0xd4>)
 8001592:	2221      	movs	r2, #33	@ 0x21
 8001594:	705a      	strb	r2, [r3, #1]
	cmd_pec = LTC_Pec15_Calc(2, wrcomm_buffer);
 8001596:	492b      	ldr	r1, [pc, #172]	@ (8001644 <LTC_WRCOMM+0xd4>)
 8001598:	2002      	movs	r0, #2
 800159a:	f000 fa1b 	bl	80019d4 <LTC_Pec15_Calc>
 800159e:	4603      	mov	r3, r0
 80015a0:	823b      	strh	r3, [r7, #16]
	wrcomm_buffer[2] = (uint8_t) (cmd_pec >> 8);
 80015a2:	8a3b      	ldrh	r3, [r7, #16]
 80015a4:	0a1b      	lsrs	r3, r3, #8
 80015a6:	b29b      	uxth	r3, r3
 80015a8:	b2da      	uxtb	r2, r3
 80015aa:	4b26      	ldr	r3, [pc, #152]	@ (8001644 <LTC_WRCOMM+0xd4>)
 80015ac:	709a      	strb	r2, [r3, #2]
	wrcomm_buffer[3] = (uint8_t) (cmd_pec);
 80015ae:	8a3b      	ldrh	r3, [r7, #16]
 80015b0:	b2da      	uxtb	r2, r3
 80015b2:	4b24      	ldr	r3, [pc, #144]	@ (8001644 <LTC_WRCOMM+0xd4>)
 80015b4:	70da      	strb	r2, [r3, #3]

	cmd_index = 4;
 80015b6:	2304      	movs	r3, #4
 80015b8:	75fb      	strb	r3, [r7, #23]
	for (uint8_t current_ic = total_ic; current_ic > 0; current_ic--) // executes for each ltc6811 in daisy chain, this loops starts with
 80015ba:	79fb      	ldrb	r3, [r7, #7]
 80015bc:	75bb      	strb	r3, [r7, #22]
 80015be:	e02d      	b.n	800161c <LTC_WRCOMM+0xac>
			{
		// the last IC on the stack. The first configuration written is
		// received by the last IC in the daisy chain

		for (uint8_t current_byte = 0; current_byte < BYTES_IN_REG;
 80015c0:	2300      	movs	r3, #0
 80015c2:	757b      	strb	r3, [r7, #21]
 80015c4:	e00c      	b.n	80015e0 <LTC_WRCOMM+0x70>
				current_byte++) // executes for each of the 6 bytes in the CFGR register
				{
			// current_byte is the byte counter
			wrcomm_buffer[cmd_index] = comm[current_byte]; // adding the config data to the array to be sent
 80015c6:	7d7b      	ldrb	r3, [r7, #21]
 80015c8:	683a      	ldr	r2, [r7, #0]
 80015ca:	441a      	add	r2, r3
 80015cc:	7dfb      	ldrb	r3, [r7, #23]
 80015ce:	7811      	ldrb	r1, [r2, #0]
 80015d0:	4a1c      	ldr	r2, [pc, #112]	@ (8001644 <LTC_WRCOMM+0xd4>)
 80015d2:	54d1      	strb	r1, [r2, r3]
			cmd_index = cmd_index + 1;
 80015d4:	7dfb      	ldrb	r3, [r7, #23]
 80015d6:	3301      	adds	r3, #1
 80015d8:	75fb      	strb	r3, [r7, #23]
				current_byte++) // executes for each of the 6 bytes in the CFGR register
 80015da:	7d7b      	ldrb	r3, [r7, #21]
 80015dc:	3301      	adds	r3, #1
 80015de:	757b      	strb	r3, [r7, #21]
		for (uint8_t current_byte = 0; current_byte < BYTES_IN_REG;
 80015e0:	7d7a      	ldrb	r2, [r7, #21]
 80015e2:	7d3b      	ldrb	r3, [r7, #20]
 80015e4:	429a      	cmp	r2, r3
 80015e6:	d3ee      	bcc.n	80015c6 <LTC_WRCOMM+0x56>
		}
		comm_pec = (uint16_t) LTC_Pec15_Calc(BYTES_IN_REG, &comm[0]); // calculating the PEC for each ICs configuration register data
 80015e8:	7d3b      	ldrb	r3, [r7, #20]
 80015ea:	6839      	ldr	r1, [r7, #0]
 80015ec:	4618      	mov	r0, r3
 80015ee:	f000 f9f1 	bl	80019d4 <LTC_Pec15_Calc>
 80015f2:	4603      	mov	r3, r0
 80015f4:	81fb      	strh	r3, [r7, #14]
		wrcomm_buffer[cmd_index] = (uint8_t) (comm_pec >> 8);
 80015f6:	89fb      	ldrh	r3, [r7, #14]
 80015f8:	0a1b      	lsrs	r3, r3, #8
 80015fa:	b29a      	uxth	r2, r3
 80015fc:	7dfb      	ldrb	r3, [r7, #23]
 80015fe:	b2d1      	uxtb	r1, r2
 8001600:	4a10      	ldr	r2, [pc, #64]	@ (8001644 <LTC_WRCOMM+0xd4>)
 8001602:	54d1      	strb	r1, [r2, r3]
		wrcomm_buffer[cmd_index + 1] = (uint8_t) comm_pec;
 8001604:	7dfb      	ldrb	r3, [r7, #23]
 8001606:	3301      	adds	r3, #1
 8001608:	89fa      	ldrh	r2, [r7, #14]
 800160a:	b2d1      	uxtb	r1, r2
 800160c:	4a0d      	ldr	r2, [pc, #52]	@ (8001644 <LTC_WRCOMM+0xd4>)
 800160e:	54d1      	strb	r1, [r2, r3]
		cmd_index = cmd_index + 2;
 8001610:	7dfb      	ldrb	r3, [r7, #23]
 8001612:	3302      	adds	r3, #2
 8001614:	75fb      	strb	r3, [r7, #23]
	for (uint8_t current_ic = total_ic; current_ic > 0; current_ic--) // executes for each ltc6811 in daisy chain, this loops starts with
 8001616:	7dbb      	ldrb	r3, [r7, #22]
 8001618:	3b01      	subs	r3, #1
 800161a:	75bb      	strb	r3, [r7, #22]
 800161c:	7dbb      	ldrb	r3, [r7, #22]
 800161e:	2b00      	cmp	r3, #0
 8001620:	d1ce      	bne.n	80015c0 <LTC_WRCOMM+0x50>
	}

	Wakeup_Idle(); // This will guarantee that the ltc6811 isoSPI port is awake.This command can be removed.
 8001622:	f7ff feb1 	bl	8001388 <Wakeup_Idle>
	LTC_nCS_Low();
 8001626:	f001 fc6d 	bl	8002f04 <LTC_nCS_Low>
	HAL_SPI_Transmit(&hspi1, (uint8_t*) wrcomm_buffer, CMD_LEN, 100);
 800162a:	7cfb      	ldrb	r3, [r7, #19]
 800162c:	b29a      	uxth	r2, r3
 800162e:	2364      	movs	r3, #100	@ 0x64
 8001630:	4904      	ldr	r1, [pc, #16]	@ (8001644 <LTC_WRCOMM+0xd4>)
 8001632:	4805      	ldr	r0, [pc, #20]	@ (8001648 <LTC_WRCOMM+0xd8>)
 8001634:	f003 ff90 	bl	8005558 <HAL_SPI_Transmit>
	LTC_nCS_High();
 8001638:	f001 fc58 	bl	8002eec <LTC_nCS_High>
}
 800163c:	bf00      	nop
 800163e:	3718      	adds	r7, #24
 8001640:	46bd      	mov	sp, r7
 8001642:	bd80      	pop	{r7, pc}
 8001644:	200000e4 	.word	0x200000e4
 8001648:	200001b8 	.word	0x200001b8

0800164c <LTC_STCOMM>:

/**
 * Shifts data in COMM register out over ltc6811 SPI/I2C port
 */
void LTC_STCOMM(uint8_t len) {
 800164c:	b580      	push	{r7, lr}
 800164e:	b086      	sub	sp, #24
 8001650:	af00      	add	r7, sp, #0
 8001652:	4603      	mov	r3, r0
 8001654:	71fb      	strb	r3, [r7, #7]

	uint8_t cmd[4];
	uint16_t cmd_pec;

	cmd[0] = 0x07;
 8001656:	2307      	movs	r3, #7
 8001658:	733b      	strb	r3, [r7, #12]
	cmd[1] = 0x23;
 800165a:	2323      	movs	r3, #35	@ 0x23
 800165c:	737b      	strb	r3, [r7, #13]
	cmd_pec = LTC_Pec15_Calc(2, cmd);
 800165e:	f107 030c 	add.w	r3, r7, #12
 8001662:	4619      	mov	r1, r3
 8001664:	2002      	movs	r0, #2
 8001666:	f000 f9b5 	bl	80019d4 <LTC_Pec15_Calc>
 800166a:	4603      	mov	r3, r0
 800166c:	827b      	strh	r3, [r7, #18]
	cmd[2] = (uint8_t) (cmd_pec >> 8);
 800166e:	8a7b      	ldrh	r3, [r7, #18]
 8001670:	0a1b      	lsrs	r3, r3, #8
 8001672:	b29b      	uxth	r3, r3
 8001674:	b2db      	uxtb	r3, r3
 8001676:	73bb      	strb	r3, [r7, #14]
	cmd[3] = (uint8_t) (cmd_pec);
 8001678:	8a7b      	ldrh	r3, [r7, #18]
 800167a:	b2db      	uxtb	r3, r3
 800167c:	73fb      	strb	r3, [r7, #15]

	Wakeup_Idle(); // This will guarantee that the ltc6811 isoSPI port is awake. This command can be removed.
 800167e:	f7ff fe83 	bl	8001388 <Wakeup_Idle>
	LTC_nCS_Low();
 8001682:	f001 fc3f 	bl	8002f04 <LTC_nCS_Low>
	HAL_SPI_Transmit(&hspi1, (uint8_t*) cmd, 4, 100);
 8001686:	f107 010c 	add.w	r1, r7, #12
 800168a:	2364      	movs	r3, #100	@ 0x64
 800168c:	2204      	movs	r2, #4
 800168e:	480e      	ldr	r0, [pc, #56]	@ (80016c8 <LTC_STCOMM+0x7c>)
 8001690:	f003 ff62 	bl	8005558 <HAL_SPI_Transmit>
	for (int i = 0; i < len * 3; i++) {
 8001694:	2300      	movs	r3, #0
 8001696:	617b      	str	r3, [r7, #20]
 8001698:	e008      	b.n	80016ac <LTC_STCOMM+0x60>
		HAL_SPI_Transmit(&hspi1, (uint8_t*) 0xFF, 1, 100);
 800169a:	2364      	movs	r3, #100	@ 0x64
 800169c:	2201      	movs	r2, #1
 800169e:	21ff      	movs	r1, #255	@ 0xff
 80016a0:	4809      	ldr	r0, [pc, #36]	@ (80016c8 <LTC_STCOMM+0x7c>)
 80016a2:	f003 ff59 	bl	8005558 <HAL_SPI_Transmit>
	for (int i = 0; i < len * 3; i++) {
 80016a6:	697b      	ldr	r3, [r7, #20]
 80016a8:	3301      	adds	r3, #1
 80016aa:	617b      	str	r3, [r7, #20]
 80016ac:	79fa      	ldrb	r2, [r7, #7]
 80016ae:	4613      	mov	r3, r2
 80016b0:	005b      	lsls	r3, r3, #1
 80016b2:	4413      	add	r3, r2
 80016b4:	697a      	ldr	r2, [r7, #20]
 80016b6:	429a      	cmp	r2, r3
 80016b8:	dbef      	blt.n	800169a <LTC_STCOMM+0x4e>
	}
	LTC_nCS_High();
 80016ba:	f001 fc17 	bl	8002eec <LTC_nCS_High>
}
 80016be:	bf00      	nop
 80016c0:	3718      	adds	r7, #24
 80016c2:	46bd      	mov	sp, r7
 80016c4:	bd80      	pop	{r7, pc}
 80016c6:	bf00      	nop
 80016c8:	200001b8 	.word	0x200001b8

080016cc <Read_Cell_Temps>:

LTC_SPI_StatusTypeDef Read_Cell_Temps(uint16_t *read_auxiliary) {
 80016cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80016d0:	b089      	sub	sp, #36	@ 0x24
 80016d2:	af00      	add	r7, sp, #0
 80016d4:	6078      	str	r0, [r7, #4]
 80016d6:	466b      	mov	r3, sp
 80016d8:	461e      	mov	r6, r3
	LTC_SPI_StatusTypeDef ret = LTC_SPI_OK;
 80016da:	2300      	movs	r3, #0
 80016dc:	77fb      	strb	r3, [r7, #31]
	LTC_SPI_StatusTypeDef hal_ret;
	const uint8_t ARR_SIZE_REG = NUM_DEVICES * REG_LEN;
 80016de:	2340      	movs	r3, #64	@ 0x40
 80016e0:	773b      	strb	r3, [r7, #28]
	uint8_t read_auxiliary_reg[ARR_SIZE_REG]; // Increased in size to handle multiple devices
 80016e2:	7f3b      	ldrb	r3, [r7, #28]
 80016e4:	3b01      	subs	r3, #1
 80016e6:	61bb      	str	r3, [r7, #24]
 80016e8:	7f3b      	ldrb	r3, [r7, #28]
 80016ea:	2200      	movs	r2, #0
 80016ec:	4698      	mov	r8, r3
 80016ee:	4691      	mov	r9, r2
 80016f0:	f04f 0200 	mov.w	r2, #0
 80016f4:	f04f 0300 	mov.w	r3, #0
 80016f8:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80016fc:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8001700:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001704:	7f3b      	ldrb	r3, [r7, #28]
 8001706:	2200      	movs	r2, #0
 8001708:	461c      	mov	r4, r3
 800170a:	4615      	mov	r5, r2
 800170c:	f04f 0200 	mov.w	r2, #0
 8001710:	f04f 0300 	mov.w	r3, #0
 8001714:	00eb      	lsls	r3, r5, #3
 8001716:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800171a:	00e2      	lsls	r2, r4, #3
 800171c:	7f3b      	ldrb	r3, [r7, #28]
 800171e:	3307      	adds	r3, #7
 8001720:	08db      	lsrs	r3, r3, #3
 8001722:	00db      	lsls	r3, r3, #3
 8001724:	ebad 0d03 	sub.w	sp, sp, r3
 8001728:	466b      	mov	r3, sp
 800172a:	3300      	adds	r3, #0
 800172c:	617b      	str	r3, [r7, #20]

	for (uint8_t i = 0;
 800172e:	2300      	movs	r3, #0
 8001730:	77bb      	strb	r3, [r7, #30]
 8001732:	e074      	b.n	800181e <Read_Cell_Temps+0x152>
			i < (NUM_AUX_SERIES_GROUPS / LTC_SERIES_GROUPS_PER_RDAUX); i++) {
		uint8_t cmd[4];
		uint16_t cmd_pec;

		cmd[0] = (0xFF & (LTC_CMD_AUXREG[i] >> 8)); // RDCV Register
 8001734:	7fbb      	ldrb	r3, [r7, #30]
 8001736:	4a3f      	ldr	r2, [pc, #252]	@ (8001834 <Read_Cell_Temps+0x168>)
 8001738:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800173c:	0a1b      	lsrs	r3, r3, #8
 800173e:	b29b      	uxth	r3, r3
 8001740:	b2db      	uxtb	r3, r3
 8001742:	723b      	strb	r3, [r7, #8]
		cmd[1] = (0xFF & (LTC_CMD_AUXREG[i]));		// RDCV Register
 8001744:	7fbb      	ldrb	r3, [r7, #30]
 8001746:	4a3b      	ldr	r2, [pc, #236]	@ (8001834 <Read_Cell_Temps+0x168>)
 8001748:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800174c:	b2db      	uxtb	r3, r3
 800174e:	727b      	strb	r3, [r7, #9]
		cmd_pec = LTC_Pec15_Calc(2, cmd);
 8001750:	f107 0308 	add.w	r3, r7, #8
 8001754:	4619      	mov	r1, r3
 8001756:	2002      	movs	r0, #2
 8001758:	f000 f93c 	bl	80019d4 <LTC_Pec15_Calc>
 800175c:	4603      	mov	r3, r0
 800175e:	827b      	strh	r3, [r7, #18]
		cmd[2] = (uint8_t) (cmd_pec >> 8);
 8001760:	8a7b      	ldrh	r3, [r7, #18]
 8001762:	0a1b      	lsrs	r3, r3, #8
 8001764:	b29b      	uxth	r3, r3
 8001766:	b2db      	uxtb	r3, r3
 8001768:	72bb      	strb	r3, [r7, #10]
		cmd[3] = (uint8_t) (cmd_pec);
 800176a:	8a7b      	ldrh	r3, [r7, #18]
 800176c:	b2db      	uxtb	r3, r3
 800176e:	72fb      	strb	r3, [r7, #11]

		Wakeup_Idle(); // Wake LTC up
 8001770:	f7ff fe0a 	bl	8001388 <Wakeup_Idle>

		LTC_nCS_Low(); // Pull CS low
 8001774:	f001 fbc6 	bl	8002f04 <LTC_nCS_Low>

		hal_ret = HAL_SPI_Transmit(&hspi1, (uint8_t*) cmd, 4, 100);
 8001778:	f107 0108 	add.w	r1, r7, #8
 800177c:	2364      	movs	r3, #100	@ 0x64
 800177e:	2204      	movs	r2, #4
 8001780:	482d      	ldr	r0, [pc, #180]	@ (8001838 <Read_Cell_Temps+0x16c>)
 8001782:	f003 fee9 	bl	8005558 <HAL_SPI_Transmit>
 8001786:	4603      	mov	r3, r0
 8001788:	747b      	strb	r3, [r7, #17]
		if (hal_ret) {									// Non-zero means error
 800178a:	7c7b      	ldrb	r3, [r7, #17]
 800178c:	2b00      	cmp	r3, #0
 800178e:	d009      	beq.n	80017a4 <Read_Cell_Temps+0xd8>
			ret |= (1 << (hal_ret + LTC_SPI_TX_BIT_OFFSET)); // TX error
 8001790:	7c7b      	ldrb	r3, [r7, #17]
 8001792:	2201      	movs	r2, #1
 8001794:	fa02 f303 	lsl.w	r3, r2, r3
 8001798:	b25a      	sxtb	r2, r3
 800179a:	f997 301f 	ldrsb.w	r3, [r7, #31]
 800179e:	4313      	orrs	r3, r2
 80017a0:	b25b      	sxtb	r3, r3
 80017a2:	77fb      	strb	r3, [r7, #31]
		}

		hal_ret = HAL_SPI_Receive(&hspi1, (uint8_t*) read_auxiliary_reg,
 80017a4:	7f3b      	ldrb	r3, [r7, #28]
 80017a6:	b29a      	uxth	r2, r3
 80017a8:	2364      	movs	r3, #100	@ 0x64
 80017aa:	6979      	ldr	r1, [r7, #20]
 80017ac:	4822      	ldr	r0, [pc, #136]	@ (8001838 <Read_Cell_Temps+0x16c>)
 80017ae:	f004 f817 	bl	80057e0 <HAL_SPI_Receive>
 80017b2:	4603      	mov	r3, r0
 80017b4:	747b      	strb	r3, [r7, #17]
				ARR_SIZE_REG, 100);
		if (hal_ret) {									// Non-zero means error
 80017b6:	7c7b      	ldrb	r3, [r7, #17]
 80017b8:	2b00      	cmp	r3, #0
 80017ba:	d00a      	beq.n	80017d2 <Read_Cell_Temps+0x106>
			ret |= (1 << (hal_ret + LTC_SPI_RX_BIT_OFFSET)); // RX error
 80017bc:	7c7b      	ldrb	r3, [r7, #17]
 80017be:	3304      	adds	r3, #4
 80017c0:	2201      	movs	r2, #1
 80017c2:	fa02 f303 	lsl.w	r3, r2, r3
 80017c6:	b25a      	sxtb	r2, r3
 80017c8:	f997 301f 	ldrsb.w	r3, [r7, #31]
 80017cc:	4313      	orrs	r3, r2
 80017ce:	b25b      	sxtb	r3, r3
 80017d0:	77fb      	strb	r3, [r7, #31]
		}

		LTC_nCS_High(); // Pull CS high
 80017d2:	f001 fb8b 	bl	8002eec <LTC_nCS_High>

		// Process the received data
		for (uint8_t dev_idx = 0; dev_idx < NUM_DEVICES; dev_idx++) {
 80017d6:	2300      	movs	r3, #0
 80017d8:	777b      	strb	r3, [r7, #29]
 80017da:	e01a      	b.n	8001812 <Read_Cell_Temps+0x146>
			// Assuming data format is [cell voltage, cell voltage, ..., PEC, PEC]
			// PEC for each device is the last two bytes of its data segment
			uint8_t *data_ptr = &read_auxiliary_reg[dev_idx * REG_LEN];
 80017dc:	7f7b      	ldrb	r3, [r7, #29]
 80017de:	00db      	lsls	r3, r3, #3
 80017e0:	697a      	ldr	r2, [r7, #20]
 80017e2:	4413      	add	r3, r2
 80017e4:	60fb      	str	r3, [r7, #12]

			memcpy(
					&read_auxiliary[dev_idx * NUM_AUX_SERIES_GROUPS
 80017e6:	7f7a      	ldrb	r2, [r7, #29]
 80017e8:	4613      	mov	r3, r2
 80017ea:	005b      	lsls	r3, r3, #1
 80017ec:	4413      	add	r3, r2
 80017ee:	005b      	lsls	r3, r3, #1
 80017f0:	4619      	mov	r1, r3
							+ i * LTC_SERIES_GROUPS_PER_RDAUX], data_ptr,
 80017f2:	7fba      	ldrb	r2, [r7, #30]
 80017f4:	4613      	mov	r3, r2
 80017f6:	005b      	lsls	r3, r3, #1
 80017f8:	4413      	add	r3, r2
 80017fa:	440b      	add	r3, r1
					&read_auxiliary[dev_idx * NUM_AUX_SERIES_GROUPS
 80017fc:	005b      	lsls	r3, r3, #1
 80017fe:	687a      	ldr	r2, [r7, #4]
 8001800:	4413      	add	r3, r2
			memcpy(
 8001802:	2206      	movs	r2, #6
 8001804:	68f9      	ldr	r1, [r7, #12]
 8001806:	4618      	mov	r0, r3
 8001808:	f004 fe0c 	bl	8006424 <memcpy>
		for (uint8_t dev_idx = 0; dev_idx < NUM_DEVICES; dev_idx++) {
 800180c:	7f7b      	ldrb	r3, [r7, #29]
 800180e:	3301      	adds	r3, #1
 8001810:	777b      	strb	r3, [r7, #29]
 8001812:	7f7b      	ldrb	r3, [r7, #29]
 8001814:	2b07      	cmp	r3, #7
 8001816:	d9e1      	bls.n	80017dc <Read_Cell_Temps+0x110>
			i < (NUM_AUX_SERIES_GROUPS / LTC_SERIES_GROUPS_PER_RDAUX); i++) {
 8001818:	7fbb      	ldrb	r3, [r7, #30]
 800181a:	3301      	adds	r3, #1
 800181c:	77bb      	strb	r3, [r7, #30]
 800181e:	7fbb      	ldrb	r3, [r7, #30]
 8001820:	2b01      	cmp	r3, #1
 8001822:	d987      	bls.n	8001734 <Read_Cell_Temps+0x68>
					REG_LEN - 2);
		}

	}

	return ret;
 8001824:	7ffb      	ldrb	r3, [r7, #31]
 8001826:	46b5      	mov	sp, r6
}
 8001828:	4618      	mov	r0, r3
 800182a:	3724      	adds	r7, #36	@ 0x24
 800182c:	46bd      	mov	sp, r7
 800182e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001832:	bf00      	nop
 8001834:	08006834 	.word	0x08006834
 8001838:	200001b8 	.word	0x200001b8

0800183c <LTC_ADCV>:
 Starts cell voltage conversion
 */
void LTC_ADCV(uint8_t MD,  // ADC Mode
		uint8_t DCP, // Discharge Permit
		uint8_t CH   // Cell Channels to be measured
		) {
 800183c:	b580      	push	{r7, lr}
 800183e:	b084      	sub	sp, #16
 8001840:	af00      	add	r7, sp, #0
 8001842:	4603      	mov	r3, r0
 8001844:	71fb      	strb	r3, [r7, #7]
 8001846:	460b      	mov	r3, r1
 8001848:	71bb      	strb	r3, [r7, #6]
 800184a:	4613      	mov	r3, r2
 800184c:	717b      	strb	r3, [r7, #5]
	uint8_t cmd[4];
	uint16_t cmd_pec;
	uint8_t md_bits;

	md_bits = (MD & 0x02) >> 1;
 800184e:	79fb      	ldrb	r3, [r7, #7]
 8001850:	105b      	asrs	r3, r3, #1
 8001852:	b2db      	uxtb	r3, r3
 8001854:	f003 0301 	and.w	r3, r3, #1
 8001858:	73fb      	strb	r3, [r7, #15]
	cmd[0] = md_bits + 0x02;
 800185a:	7bfb      	ldrb	r3, [r7, #15]
 800185c:	3302      	adds	r3, #2
 800185e:	b2db      	uxtb	r3, r3
 8001860:	723b      	strb	r3, [r7, #8]
	md_bits = (MD & 0x01) << 7;
 8001862:	79fb      	ldrb	r3, [r7, #7]
 8001864:	01db      	lsls	r3, r3, #7
 8001866:	73fb      	strb	r3, [r7, #15]
	cmd[1] = md_bits + 0x60 + (DCP << 4) + CH;
 8001868:	79bb      	ldrb	r3, [r7, #6]
 800186a:	011b      	lsls	r3, r3, #4
 800186c:	b2da      	uxtb	r2, r3
 800186e:	7bfb      	ldrb	r3, [r7, #15]
 8001870:	4413      	add	r3, r2
 8001872:	b2da      	uxtb	r2, r3
 8001874:	797b      	ldrb	r3, [r7, #5]
 8001876:	4413      	add	r3, r2
 8001878:	b2db      	uxtb	r3, r3
 800187a:	3360      	adds	r3, #96	@ 0x60
 800187c:	b2db      	uxtb	r3, r3
 800187e:	727b      	strb	r3, [r7, #9]
	cmd_pec = LTC_Pec15_Calc(2, cmd);
 8001880:	f107 0308 	add.w	r3, r7, #8
 8001884:	4619      	mov	r1, r3
 8001886:	2002      	movs	r0, #2
 8001888:	f000 f8a4 	bl	80019d4 <LTC_Pec15_Calc>
 800188c:	4603      	mov	r3, r0
 800188e:	81bb      	strh	r3, [r7, #12]
	cmd[2] = (uint8_t) (cmd_pec >> 8);
 8001890:	89bb      	ldrh	r3, [r7, #12]
 8001892:	0a1b      	lsrs	r3, r3, #8
 8001894:	b29b      	uxth	r3, r3
 8001896:	b2db      	uxtb	r3, r3
 8001898:	72bb      	strb	r3, [r7, #10]
	cmd[3] = (uint8_t) (cmd_pec);
 800189a:	89bb      	ldrh	r3, [r7, #12]
 800189c:	b2db      	uxtb	r3, r3
 800189e:	72fb      	strb	r3, [r7, #11]

	Wakeup_Idle(); // This will guarantee that the ltc6811 isoSPI port is awake. This command can be removed.
 80018a0:	f7ff fd72 	bl	8001388 <Wakeup_Idle>
	LTC_nCS_Low();
 80018a4:	f001 fb2e 	bl	8002f04 <LTC_nCS_Low>
	HAL_SPI_Transmit(&hspi1, (uint8_t*) cmd, 4, 100);
 80018a8:	f107 0108 	add.w	r1, r7, #8
 80018ac:	2364      	movs	r3, #100	@ 0x64
 80018ae:	2204      	movs	r2, #4
 80018b0:	4804      	ldr	r0, [pc, #16]	@ (80018c4 <LTC_ADCV+0x88>)
 80018b2:	f003 fe51 	bl	8005558 <HAL_SPI_Transmit>
	LTC_nCS_High();
 80018b6:	f001 fb19 	bl	8002eec <LTC_nCS_High>
}
 80018ba:	bf00      	nop
 80018bc:	3710      	adds	r7, #16
 80018be:	46bd      	mov	sp, r7
 80018c0:	bd80      	pop	{r7, pc}
 80018c2:	bf00      	nop
 80018c4:	200001b8 	.word	0x200001b8

080018c8 <LTC_ADAX>:

void LTC_ADAX(uint8_t MD, // ADC Mode
		uint8_t CHG // GPIO Channels to be measured)
		) {
 80018c8:	b580      	push	{r7, lr}
 80018ca:	b084      	sub	sp, #16
 80018cc:	af00      	add	r7, sp, #0
 80018ce:	4603      	mov	r3, r0
 80018d0:	460a      	mov	r2, r1
 80018d2:	71fb      	strb	r3, [r7, #7]
 80018d4:	4613      	mov	r3, r2
 80018d6:	71bb      	strb	r3, [r7, #6]
	uint8_t cmd[4];
	uint16_t cmd_pec;
	uint8_t md_bits;

	md_bits = (MD & 0x02) >> 1;
 80018d8:	79fb      	ldrb	r3, [r7, #7]
 80018da:	105b      	asrs	r3, r3, #1
 80018dc:	b2db      	uxtb	r3, r3
 80018de:	f003 0301 	and.w	r3, r3, #1
 80018e2:	73fb      	strb	r3, [r7, #15]
	cmd[0] = md_bits + 0x04;
 80018e4:	7bfb      	ldrb	r3, [r7, #15]
 80018e6:	3304      	adds	r3, #4
 80018e8:	b2db      	uxtb	r3, r3
 80018ea:	723b      	strb	r3, [r7, #8]
	md_bits = (MD & 0x01) << 7;
 80018ec:	79fb      	ldrb	r3, [r7, #7]
 80018ee:	01db      	lsls	r3, r3, #7
 80018f0:	73fb      	strb	r3, [r7, #15]
	cmd[1] = md_bits + 0x60 + CHG;
 80018f2:	7bfa      	ldrb	r2, [r7, #15]
 80018f4:	79bb      	ldrb	r3, [r7, #6]
 80018f6:	4413      	add	r3, r2
 80018f8:	b2db      	uxtb	r3, r3
 80018fa:	3360      	adds	r3, #96	@ 0x60
 80018fc:	b2db      	uxtb	r3, r3
 80018fe:	727b      	strb	r3, [r7, #9]
	cmd_pec = LTC_Pec15_Calc(2, cmd);
 8001900:	f107 0308 	add.w	r3, r7, #8
 8001904:	4619      	mov	r1, r3
 8001906:	2002      	movs	r0, #2
 8001908:	f000 f864 	bl	80019d4 <LTC_Pec15_Calc>
 800190c:	4603      	mov	r3, r0
 800190e:	81bb      	strh	r3, [r7, #12]
	cmd[2] = (uint8_t) (cmd_pec >> 8);
 8001910:	89bb      	ldrh	r3, [r7, #12]
 8001912:	0a1b      	lsrs	r3, r3, #8
 8001914:	b29b      	uxth	r3, r3
 8001916:	b2db      	uxtb	r3, r3
 8001918:	72bb      	strb	r3, [r7, #10]
	cmd[3] = (uint8_t) (cmd_pec);
 800191a:	89bb      	ldrh	r3, [r7, #12]
 800191c:	b2db      	uxtb	r3, r3
 800191e:	72fb      	strb	r3, [r7, #11]
	 Wakeup_Idle (); //This will guarantee that the ltc6811 isoSPI port is awake. This command can be removed.
	 output_low(LTC6811_CS);
	 spi_write_array(4,cmd);
	 output_high(LTC6811_CS);
	 */
	Wakeup_Idle(); // This will guarantee that the ltc6811 isoSPI port is awake. This command can be removed.
 8001920:	f7ff fd32 	bl	8001388 <Wakeup_Idle>
	LTC_nCS_Low();
 8001924:	f001 faee 	bl	8002f04 <LTC_nCS_Low>
	HAL_SPI_Transmit(&hspi1, (uint8_t*) cmd, 4, 100);
 8001928:	f107 0108 	add.w	r1, r7, #8
 800192c:	2364      	movs	r3, #100	@ 0x64
 800192e:	2204      	movs	r2, #4
 8001930:	4804      	ldr	r0, [pc, #16]	@ (8001944 <LTC_ADAX+0x7c>)
 8001932:	f003 fe11 	bl	8005558 <HAL_SPI_Transmit>
	LTC_nCS_High();
 8001936:	f001 fad9 	bl	8002eec <LTC_nCS_High>
}
 800193a:	bf00      	nop
 800193c:	3710      	adds	r7, #16
 800193e:	46bd      	mov	sp, r7
 8001940:	bd80      	pop	{r7, pc}
 8001942:	bf00      	nop
 8001944:	200001b8 	.word	0x200001b8

08001948 <LTC_POLLADC>:

int32_t LTC_POLLADC() {
 8001948:	b580      	push	{r7, lr}
 800194a:	b084      	sub	sp, #16
 800194c:	af00      	add	r7, sp, #0
	uint32_t counter = 0;
 800194e:	2300      	movs	r3, #0
 8001950:	60fb      	str	r3, [r7, #12]
	uint8_t finished = 0;
 8001952:	2300      	movs	r3, #0
 8001954:	72fb      	strb	r3, [r7, #11]
	uint8_t current_time = 0;
 8001956:	2300      	movs	r3, #0
 8001958:	72bb      	strb	r3, [r7, #10]
	uint8_t cmd[4];
	uint16_t cmd_pec;

	cmd[0] = 0x07;
 800195a:	2307      	movs	r3, #7
 800195c:	713b      	strb	r3, [r7, #4]
	cmd[1] = 0x14;
 800195e:	2314      	movs	r3, #20
 8001960:	717b      	strb	r3, [r7, #5]
	cmd_pec = LTC_Pec15_Calc(2, cmd);
 8001962:	1d3b      	adds	r3, r7, #4
 8001964:	4619      	mov	r1, r3
 8001966:	2002      	movs	r0, #2
 8001968:	f000 f834 	bl	80019d4 <LTC_Pec15_Calc>
 800196c:	4603      	mov	r3, r0
 800196e:	813b      	strh	r3, [r7, #8]
	cmd[2] = (uint8_t) (cmd_pec >> 8);
 8001970:	893b      	ldrh	r3, [r7, #8]
 8001972:	0a1b      	lsrs	r3, r3, #8
 8001974:	b29b      	uxth	r3, r3
 8001976:	b2db      	uxtb	r3, r3
 8001978:	71bb      	strb	r3, [r7, #6]
	cmd[3] = (uint8_t) (cmd_pec);
 800197a:	893b      	ldrh	r3, [r7, #8]
 800197c:	b2db      	uxtb	r3, r3
 800197e:	71fb      	strb	r3, [r7, #7]

	Wakeup_Idle(); // This will guarantee that the ltc6811 isoSPI port is awake. This command can be removed.
 8001980:	f7ff fd02 	bl	8001388 <Wakeup_Idle>

	LTC_nCS_Low();
 8001984:	f001 fabe 	bl	8002f04 <LTC_nCS_Low>
	HAL_SPI_Transmit(&hspi1, (uint8_t*) cmd, 4, 100);
 8001988:	1d39      	adds	r1, r7, #4
 800198a:	2364      	movs	r3, #100	@ 0x64
 800198c:	2204      	movs	r2, #4
 800198e:	480f      	ldr	r0, [pc, #60]	@ (80019cc <LTC_POLLADC+0x84>)
 8001990:	f003 fde2 	bl	8005558 <HAL_SPI_Transmit>

	while ((counter < 200000) && (finished == 0)) {
 8001994:	e00c      	b.n	80019b0 <LTC_POLLADC+0x68>
		current_time = HAL_GetTick();
 8001996:	f001 fc79 	bl	800328c <HAL_GetTick>
 800199a:	4603      	mov	r3, r0
 800199c:	72bb      	strb	r3, [r7, #10]
		if (current_time > 0) {
 800199e:	7abb      	ldrb	r3, [r7, #10]
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d002      	beq.n	80019aa <LTC_POLLADC+0x62>
			finished = 1;
 80019a4:	2301      	movs	r3, #1
 80019a6:	72fb      	strb	r3, [r7, #11]
 80019a8:	e002      	b.n	80019b0 <LTC_POLLADC+0x68>
		} else {
			counter = counter + 10;
 80019aa:	68fb      	ldr	r3, [r7, #12]
 80019ac:	330a      	adds	r3, #10
 80019ae:	60fb      	str	r3, [r7, #12]
	while ((counter < 200000) && (finished == 0)) {
 80019b0:	68fb      	ldr	r3, [r7, #12]
 80019b2:	4a07      	ldr	r2, [pc, #28]	@ (80019d0 <LTC_POLLADC+0x88>)
 80019b4:	4293      	cmp	r3, r2
 80019b6:	d802      	bhi.n	80019be <LTC_POLLADC+0x76>
 80019b8:	7afb      	ldrb	r3, [r7, #11]
 80019ba:	2b00      	cmp	r3, #0
 80019bc:	d0eb      	beq.n	8001996 <LTC_POLLADC+0x4e>
		}
	}
	LTC_nCS_High();
 80019be:	f001 fa95 	bl	8002eec <LTC_nCS_High>
	return (counter);
 80019c2:	68fb      	ldr	r3, [r7, #12]
}
 80019c4:	4618      	mov	r0, r3
 80019c6:	3710      	adds	r7, #16
 80019c8:	46bd      	mov	sp, r7
 80019ca:	bd80      	pop	{r7, pc}
 80019cc:	200001b8 	.word	0x200001b8
 80019d0:	00030d3f 	.word	0x00030d3f

080019d4 <LTC_Pec15_Calc>:
/**
 * error calculation and handling for poor command use. 
 * @param 	len		Number of bytes that will be used to calculate a PEC
 * @param	data	Array of data that will be used to calculate a PEC
 */
uint16_t LTC_Pec15_Calc(uint8_t len, uint8_t *data) {
 80019d4:	b480      	push	{r7}
 80019d6:	b085      	sub	sp, #20
 80019d8:	af00      	add	r7, sp, #0
 80019da:	4603      	mov	r3, r0
 80019dc:	6039      	str	r1, [r7, #0]
 80019de:	71fb      	strb	r3, [r7, #7]
	uint16_t remainder, addr;
	remainder = 16; // Initialize the PEC to 0x10000
 80019e0:	2310      	movs	r3, #16
 80019e2:	81fb      	strh	r3, [r7, #14]

	for (uint8_t i = 0; i < len; i++) // loops for each byte in data array
 80019e4:	2300      	movs	r3, #0
 80019e6:	737b      	strb	r3, [r7, #13]
 80019e8:	e017      	b.n	8001a1a <LTC_Pec15_Calc+0x46>
			{
		addr = ((remainder >> 7) ^ data[i]) & 0xff; // calculate PEC table address
 80019ea:	89fb      	ldrh	r3, [r7, #14]
 80019ec:	09db      	lsrs	r3, r3, #7
 80019ee:	b29b      	uxth	r3, r3
 80019f0:	7b7a      	ldrb	r2, [r7, #13]
 80019f2:	6839      	ldr	r1, [r7, #0]
 80019f4:	440a      	add	r2, r1
 80019f6:	7812      	ldrb	r2, [r2, #0]
 80019f8:	4053      	eors	r3, r2
 80019fa:	b29b      	uxth	r3, r3
 80019fc:	b2db      	uxtb	r3, r3
 80019fe:	817b      	strh	r3, [r7, #10]
		remainder = (remainder << 8) ^ crc15Table[addr];
 8001a00:	89fb      	ldrh	r3, [r7, #14]
 8001a02:	021b      	lsls	r3, r3, #8
 8001a04:	b29a      	uxth	r2, r3
 8001a06:	897b      	ldrh	r3, [r7, #10]
 8001a08:	490a      	ldr	r1, [pc, #40]	@ (8001a34 <LTC_Pec15_Calc+0x60>)
 8001a0a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001a0e:	b29b      	uxth	r3, r3
 8001a10:	4053      	eors	r3, r2
 8001a12:	81fb      	strh	r3, [r7, #14]
	for (uint8_t i = 0; i < len; i++) // loops for each byte in data array
 8001a14:	7b7b      	ldrb	r3, [r7, #13]
 8001a16:	3301      	adds	r3, #1
 8001a18:	737b      	strb	r3, [r7, #13]
 8001a1a:	7b7a      	ldrb	r2, [r7, #13]
 8001a1c:	79fb      	ldrb	r3, [r7, #7]
 8001a1e:	429a      	cmp	r2, r3
 8001a20:	d3e3      	bcc.n	80019ea <LTC_Pec15_Calc+0x16>
	}

	return (remainder * 2); // The CRC15 has a 0 in the LSB so the remainder must be multiplied by 2
 8001a22:	89fb      	ldrh	r3, [r7, #14]
 8001a24:	005b      	lsls	r3, r3, #1
 8001a26:	b29b      	uxth	r3, r3
}
 8001a28:	4618      	mov	r0, r3
 8001a2a:	3714      	adds	r7, #20
 8001a2c:	46bd      	mov	sp, r7
 8001a2e:	bc80      	pop	{r7}
 8001a30:	4770      	bx	lr
 8001a32:	bf00      	nop
 8001a34:	08006838 	.word	0x08006838

08001a38 <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
ADC_HandleTypeDef hadc2;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8001a38:	b580      	push	{r7, lr}
 8001a3a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 1 */ /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8001a3c:	4b0f      	ldr	r3, [pc, #60]	@ (8001a7c <MX_ADC1_Init+0x44>)
 8001a3e:	4a10      	ldr	r2, [pc, #64]	@ (8001a80 <MX_ADC1_Init+0x48>)
 8001a40:	601a      	str	r2, [r3, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8001a42:	4b0e      	ldr	r3, [pc, #56]	@ (8001a7c <MX_ADC1_Init+0x44>)
 8001a44:	2200      	movs	r2, #0
 8001a46:	609a      	str	r2, [r3, #8]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001a48:	4b0c      	ldr	r3, [pc, #48]	@ (8001a7c <MX_ADC1_Init+0x44>)
 8001a4a:	2200      	movs	r2, #0
 8001a4c:	731a      	strb	r2, [r3, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001a4e:	4b0b      	ldr	r3, [pc, #44]	@ (8001a7c <MX_ADC1_Init+0x44>)
 8001a50:	2200      	movs	r2, #0
 8001a52:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001a54:	4b09      	ldr	r3, [pc, #36]	@ (8001a7c <MX_ADC1_Init+0x44>)
 8001a56:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 8001a5a:	61da      	str	r2, [r3, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001a5c:	4b07      	ldr	r3, [pc, #28]	@ (8001a7c <MX_ADC1_Init+0x44>)
 8001a5e:	2200      	movs	r2, #0
 8001a60:	605a      	str	r2, [r3, #4]
  hadc1.Init.NbrOfConversion = 1;
 8001a62:	4b06      	ldr	r3, [pc, #24]	@ (8001a7c <MX_ADC1_Init+0x44>)
 8001a64:	2201      	movs	r2, #1
 8001a66:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001a68:	4804      	ldr	r0, [pc, #16]	@ (8001a7c <MX_ADC1_Init+0x44>)
 8001a6a:	f001 fc3d 	bl	80032e8 <HAL_ADC_Init>
 8001a6e:	4603      	mov	r3, r0
 8001a70:	2b00      	cmp	r3, #0
 8001a72:	d001      	beq.n	8001a78 <MX_ADC1_Init+0x40>
  {
    Error_Handler();
 8001a74:	f000 ff14 	bl	80028a0 <Error_Handler>
  }

  /* USER CODE BEGIN ADC2_Init 2 */ /* USER CODE END ADC2_Init 2 */
}
 8001a78:	bf00      	nop
 8001a7a:	bd80      	pop	{r7, pc}
 8001a7c:	20000128 	.word	0x20000128
 8001a80:	40012400 	.word	0x40012400

08001a84 <MX_ADC2_Init>:


/* ADC2 init function */
void MX_ADC2_Init(void)
{
 8001a84:	b580      	push	{r7, lr}
 8001a86:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 1 */ /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 8001a88:	4b0f      	ldr	r3, [pc, #60]	@ (8001ac8 <MX_ADC2_Init+0x44>)
 8001a8a:	4a10      	ldr	r2, [pc, #64]	@ (8001acc <MX_ADC2_Init+0x48>)
 8001a8c:	601a      	str	r2, [r3, #0]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8001a8e:	4b0e      	ldr	r3, [pc, #56]	@ (8001ac8 <MX_ADC2_Init+0x44>)
 8001a90:	2200      	movs	r2, #0
 8001a92:	609a      	str	r2, [r3, #8]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8001a94:	4b0c      	ldr	r3, [pc, #48]	@ (8001ac8 <MX_ADC2_Init+0x44>)
 8001a96:	2200      	movs	r2, #0
 8001a98:	731a      	strb	r2, [r3, #12]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001a9a:	4b0b      	ldr	r3, [pc, #44]	@ (8001ac8 <MX_ADC2_Init+0x44>)
 8001a9c:	2200      	movs	r2, #0
 8001a9e:	751a      	strb	r2, [r3, #20]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001aa0:	4b09      	ldr	r3, [pc, #36]	@ (8001ac8 <MX_ADC2_Init+0x44>)
 8001aa2:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 8001aa6:	61da      	str	r2, [r3, #28]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001aa8:	4b07      	ldr	r3, [pc, #28]	@ (8001ac8 <MX_ADC2_Init+0x44>)
 8001aaa:	2200      	movs	r2, #0
 8001aac:	605a      	str	r2, [r3, #4]
  hadc2.Init.NbrOfConversion = 1;
 8001aae:	4b06      	ldr	r3, [pc, #24]	@ (8001ac8 <MX_ADC2_Init+0x44>)
 8001ab0:	2201      	movs	r2, #1
 8001ab2:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001ab4:	4804      	ldr	r0, [pc, #16]	@ (8001ac8 <MX_ADC2_Init+0x44>)
 8001ab6:	f001 fc17 	bl	80032e8 <HAL_ADC_Init>
 8001aba:	4603      	mov	r3, r0
 8001abc:	2b00      	cmp	r3, #0
 8001abe:	d001      	beq.n	8001ac4 <MX_ADC2_Init+0x40>
  {
    Error_Handler();
 8001ac0:	f000 feee 	bl	80028a0 <Error_Handler>
  }

  /* USER CODE BEGIN ADC2_Init 2 */ /* USER CODE END ADC2_Init 2 */

}
 8001ac4:	bf00      	nop
 8001ac6:	bd80      	pop	{r7, pc}
 8001ac8:	20000158 	.word	0x20000158
 8001acc:	40012800 	.word	0x40012800

08001ad0 <MX_ADC_GetValue>:

uint32_t MX_ADC_GetValue(ADC_HandleTypeDef *hadc, uint32_t channel, uint32_t hal_delay) {
 8001ad0:	b580      	push	{r7, lr}
 8001ad2:	b088      	sub	sp, #32
 8001ad4:	af00      	add	r7, sp, #0
 8001ad6:	60f8      	str	r0, [r7, #12]
 8001ad8:	60b9      	str	r1, [r7, #8]
 8001ada:	607a      	str	r2, [r7, #4]
    uint32_t adcValue = 0;
 8001adc:	2300      	movs	r3, #0
 8001ade:	61fb      	str	r3, [r7, #28]

    ADC_ChannelConfTypeDef sConfig = {0};
 8001ae0:	f107 0310 	add.w	r3, r7, #16
 8001ae4:	2200      	movs	r2, #0
 8001ae6:	601a      	str	r2, [r3, #0]
 8001ae8:	605a      	str	r2, [r3, #4]
 8001aea:	609a      	str	r2, [r3, #8]
    sConfig.Channel = channel;
 8001aec:	68bb      	ldr	r3, [r7, #8]
 8001aee:	613b      	str	r3, [r7, #16]
    sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8001af0:	2300      	movs	r3, #0
 8001af2:	61bb      	str	r3, [r7, #24]
    if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK) {
 8001af4:	f107 0210 	add.w	r2, r7, #16
 8001af8:	f107 030c 	add.w	r3, r7, #12
 8001afc:	4611      	mov	r1, r2
 8001afe:	4618      	mov	r0, r3
 8001b00:	f001 feb6 	bl	8003870 <HAL_ADC_ConfigChannel>
 8001b04:	4603      	mov	r3, r0
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d002      	beq.n	8001b10 <MX_ADC_GetValue+0x40>
        Error_Handler();
 8001b0a:	f000 fec9 	bl	80028a0 <Error_Handler>
 8001b0e:	e019      	b.n	8001b44 <MX_ADC_GetValue+0x74>
    } else {
        HAL_ADC_Start(&hadc);
 8001b10:	f107 030c 	add.w	r3, r7, #12
 8001b14:	4618      	mov	r0, r3
 8001b16:	f001 fcbf 	bl	8003498 <HAL_ADC_Start>
        if (HAL_ADC_PollForConversion(&hadc, HAL_MAX_DELAY) == HAL_OK) {
 8001b1a:	f107 030c 	add.w	r3, r7, #12
 8001b1e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8001b22:	4618      	mov	r0, r3
 8001b24:	f001 fd92 	bl	800364c <HAL_ADC_PollForConversion>
 8001b28:	4603      	mov	r3, r0
 8001b2a:	2b00      	cmp	r3, #0
 8001b2c:	d105      	bne.n	8001b3a <MX_ADC_GetValue+0x6a>
            adcValue = HAL_ADC_GetValue(&hadc);
 8001b2e:	f107 030c 	add.w	r3, r7, #12
 8001b32:	4618      	mov	r0, r3
 8001b34:	f001 fe90 	bl	8003858 <HAL_ADC_GetValue>
 8001b38:	61f8      	str	r0, [r7, #28]
        }
        HAL_ADC_Stop(&hadc);
 8001b3a:	f107 030c 	add.w	r3, r7, #12
 8001b3e:	4618      	mov	r0, r3
 8001b40:	f001 fd58 	bl	80035f4 <HAL_ADC_Stop>
    }
    return adcValue;
 8001b44:	69fb      	ldr	r3, [r7, #28]
}
 8001b46:	4618      	mov	r0, r3
 8001b48:	3720      	adds	r7, #32
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	bd80      	pop	{r7, pc}
	...

08001b50 <HAL_ADC_MspInit>:


void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8001b50:	b580      	push	{r7, lr}
 8001b52:	b08a      	sub	sp, #40	@ 0x28
 8001b54:	af00      	add	r7, sp, #0
 8001b56:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b58:	f107 0318 	add.w	r3, r7, #24
 8001b5c:	2200      	movs	r2, #0
 8001b5e:	601a      	str	r2, [r3, #0]
 8001b60:	605a      	str	r2, [r3, #4]
 8001b62:	609a      	str	r2, [r3, #8]
 8001b64:	60da      	str	r2, [r3, #12]
  if(adcHandle->Instance==ADC1)
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	4a28      	ldr	r2, [pc, #160]	@ (8001c0c <HAL_ADC_MspInit+0xbc>)
 8001b6c:	4293      	cmp	r3, r2
 8001b6e:	d122      	bne.n	8001bb6 <HAL_ADC_MspInit+0x66>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001b70:	4b27      	ldr	r3, [pc, #156]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001b72:	699b      	ldr	r3, [r3, #24]
 8001b74:	4a26      	ldr	r2, [pc, #152]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001b76:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001b7a:	6193      	str	r3, [r2, #24]
 8001b7c:	4b24      	ldr	r3, [pc, #144]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001b7e:	699b      	ldr	r3, [r3, #24]
 8001b80:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001b84:	617b      	str	r3, [r7, #20]
 8001b86:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b88:	4b21      	ldr	r3, [pc, #132]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001b8a:	699b      	ldr	r3, [r3, #24]
 8001b8c:	4a20      	ldr	r2, [pc, #128]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001b8e:	f043 0310 	orr.w	r3, r3, #16
 8001b92:	6193      	str	r3, [r2, #24]
 8001b94:	4b1e      	ldr	r3, [pc, #120]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001b96:	699b      	ldr	r3, [r3, #24]
 8001b98:	f003 0310 	and.w	r3, r3, #16
 8001b9c:	613b      	str	r3, [r7, #16]
 8001b9e:	693b      	ldr	r3, [r7, #16]
    /**ADC1 GPIO Configuration
    PC5     ------> ADC1_IN15
    */
    GPIO_InitStruct.Pin = MCU_ADC_VSENSE_Pin;
 8001ba0:	2320      	movs	r3, #32
 8001ba2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001ba4:	2303      	movs	r3, #3
 8001ba6:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(MCU_ADC_VSENSE_GPIO_Port, &GPIO_InitStruct);
 8001ba8:	f107 0318 	add.w	r3, r7, #24
 8001bac:	4619      	mov	r1, r3
 8001bae:	4819      	ldr	r0, [pc, #100]	@ (8001c14 <HAL_ADC_MspInit+0xc4>)
 8001bb0:	f002 fb08 	bl	80041c4 <HAL_GPIO_Init>

  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }
}
 8001bb4:	e026      	b.n	8001c04 <HAL_ADC_MspInit+0xb4>
  else if(adcHandle->Instance==ADC2)
 8001bb6:	687b      	ldr	r3, [r7, #4]
 8001bb8:	681b      	ldr	r3, [r3, #0]
 8001bba:	4a17      	ldr	r2, [pc, #92]	@ (8001c18 <HAL_ADC_MspInit+0xc8>)
 8001bbc:	4293      	cmp	r3, r2
 8001bbe:	d121      	bne.n	8001c04 <HAL_ADC_MspInit+0xb4>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001bc0:	4b13      	ldr	r3, [pc, #76]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001bc2:	699b      	ldr	r3, [r3, #24]
 8001bc4:	4a12      	ldr	r2, [pc, #72]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001bc6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001bca:	6193      	str	r3, [r2, #24]
 8001bcc:	4b10      	ldr	r3, [pc, #64]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001bce:	699b      	ldr	r3, [r3, #24]
 8001bd0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001bd4:	60fb      	str	r3, [r7, #12]
 8001bd6:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001bd8:	4b0d      	ldr	r3, [pc, #52]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001bda:	699b      	ldr	r3, [r3, #24]
 8001bdc:	4a0c      	ldr	r2, [pc, #48]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001bde:	f043 0310 	orr.w	r3, r3, #16
 8001be2:	6193      	str	r3, [r2, #24]
 8001be4:	4b0a      	ldr	r3, [pc, #40]	@ (8001c10 <HAL_ADC_MspInit+0xc0>)
 8001be6:	699b      	ldr	r3, [r3, #24]
 8001be8:	f003 0310 	and.w	r3, r3, #16
 8001bec:	60bb      	str	r3, [r7, #8]
 8001bee:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8001bf0:	230f      	movs	r3, #15
 8001bf2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001bf4:	2303      	movs	r3, #3
 8001bf6:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bf8:	f107 0318 	add.w	r3, r7, #24
 8001bfc:	4619      	mov	r1, r3
 8001bfe:	4805      	ldr	r0, [pc, #20]	@ (8001c14 <HAL_ADC_MspInit+0xc4>)
 8001c00:	f002 fae0 	bl	80041c4 <HAL_GPIO_Init>
}
 8001c04:	bf00      	nop
 8001c06:	3728      	adds	r7, #40	@ 0x28
 8001c08:	46bd      	mov	sp, r7
 8001c0a:	bd80      	pop	{r7, pc}
 8001c0c:	40012400 	.word	0x40012400
 8001c10:	40021000 	.word	0x40021000
 8001c14:	40011000 	.word	0x40011000
 8001c18:	40012800 	.word	0x40012800

08001c1c <MX_CAN1_Init>:

CAN_HandleTypeDef hcan1;

/* CAN1 init function */
void MX_CAN1_Init(void)
{
 8001c1c:	b580      	push	{r7, lr}
 8001c1e:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 8001c20:	4b17      	ldr	r3, [pc, #92]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c22:	4a18      	ldr	r2, [pc, #96]	@ (8001c84 <MX_CAN1_Init+0x68>)
 8001c24:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 9;
 8001c26:	4b16      	ldr	r3, [pc, #88]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c28:	2209      	movs	r2, #9
 8001c2a:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 8001c2c:	4b14      	ldr	r3, [pc, #80]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c2e:	2200      	movs	r2, #0
 8001c30:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8001c32:	4b13      	ldr	r3, [pc, #76]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c34:	2200      	movs	r2, #0
 8001c36:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 8001c38:	4b11      	ldr	r3, [pc, #68]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c3a:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001c3e:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 8001c40:	4b0f      	ldr	r3, [pc, #60]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c42:	f44f 1240 	mov.w	r2, #3145728	@ 0x300000
 8001c46:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 8001c48:	4b0d      	ldr	r3, [pc, #52]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 8001c4e:	4b0c      	ldr	r3, [pc, #48]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c50:	2200      	movs	r2, #0
 8001c52:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 8001c54:	4b0a      	ldr	r3, [pc, #40]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c56:	2200      	movs	r2, #0
 8001c58:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 8001c5a:	4b09      	ldr	r3, [pc, #36]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c5c:	2200      	movs	r2, #0
 8001c5e:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 8001c60:	4b07      	ldr	r3, [pc, #28]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c62:	2200      	movs	r2, #0
 8001c64:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 8001c66:	4b06      	ldr	r3, [pc, #24]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c68:	2200      	movs	r2, #0
 8001c6a:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 8001c6c:	4804      	ldr	r0, [pc, #16]	@ (8001c80 <MX_CAN1_Init+0x64>)
 8001c6e:	f001 ff92 	bl	8003b96 <HAL_CAN_Init>
 8001c72:	4603      	mov	r3, r0
 8001c74:	2b00      	cmp	r3, #0
 8001c76:	d001      	beq.n	8001c7c <MX_CAN1_Init+0x60>
  {
    Error_Handler();
 8001c78:	f000 fe12 	bl	80028a0 <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */

  /* USER CODE END CAN1_Init 2 */

}
 8001c7c:	bf00      	nop
 8001c7e:	bd80      	pop	{r7, pc}
 8001c80:	20000188 	.word	0x20000188
 8001c84:	40006400 	.word	0x40006400

08001c88 <HAL_CAN_MspInit>:

void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
{
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	b08a      	sub	sp, #40	@ 0x28
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c90:	f107 0314 	add.w	r3, r7, #20
 8001c94:	2200      	movs	r2, #0
 8001c96:	601a      	str	r2, [r3, #0]
 8001c98:	605a      	str	r2, [r3, #4]
 8001c9a:	609a      	str	r2, [r3, #8]
 8001c9c:	60da      	str	r2, [r3, #12]
  if(canHandle->Instance==CAN1)
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	681b      	ldr	r3, [r3, #0]
 8001ca2:	4a25      	ldr	r2, [pc, #148]	@ (8001d38 <HAL_CAN_MspInit+0xb0>)
 8001ca4:	4293      	cmp	r3, r2
 8001ca6:	d143      	bne.n	8001d30 <HAL_CAN_MspInit+0xa8>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* CAN1 clock enable */
    __HAL_RCC_CAN1_CLK_ENABLE();
 8001ca8:	4b24      	ldr	r3, [pc, #144]	@ (8001d3c <HAL_CAN_MspInit+0xb4>)
 8001caa:	69db      	ldr	r3, [r3, #28]
 8001cac:	4a23      	ldr	r2, [pc, #140]	@ (8001d3c <HAL_CAN_MspInit+0xb4>)
 8001cae:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001cb2:	61d3      	str	r3, [r2, #28]
 8001cb4:	4b21      	ldr	r3, [pc, #132]	@ (8001d3c <HAL_CAN_MspInit+0xb4>)
 8001cb6:	69db      	ldr	r3, [r3, #28]
 8001cb8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001cbc:	613b      	str	r3, [r7, #16]
 8001cbe:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001cc0:	4b1e      	ldr	r3, [pc, #120]	@ (8001d3c <HAL_CAN_MspInit+0xb4>)
 8001cc2:	699b      	ldr	r3, [r3, #24]
 8001cc4:	4a1d      	ldr	r2, [pc, #116]	@ (8001d3c <HAL_CAN_MspInit+0xb4>)
 8001cc6:	f043 0308 	orr.w	r3, r3, #8
 8001cca:	6193      	str	r3, [r2, #24]
 8001ccc:	4b1b      	ldr	r3, [pc, #108]	@ (8001d3c <HAL_CAN_MspInit+0xb4>)
 8001cce:	699b      	ldr	r3, [r3, #24]
 8001cd0:	f003 0308 	and.w	r3, r3, #8
 8001cd4:	60fb      	str	r3, [r7, #12]
 8001cd6:	68fb      	ldr	r3, [r7, #12]
    /**CAN1 GPIO Configuration
    PB8     ------> CAN1_RX
    PB9     ------> CAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001cd8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001cdc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001cde:	2300      	movs	r3, #0
 8001ce0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ce6:	f107 0314 	add.w	r3, r7, #20
 8001cea:	4619      	mov	r1, r3
 8001cec:	4814      	ldr	r0, [pc, #80]	@ (8001d40 <HAL_CAN_MspInit+0xb8>)
 8001cee:	f002 fa69 	bl	80041c4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001cf2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001cf6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cf8:	2302      	movs	r3, #2
 8001cfa:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cfc:	2303      	movs	r3, #3
 8001cfe:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d00:	f107 0314 	add.w	r3, r7, #20
 8001d04:	4619      	mov	r1, r3
 8001d06:	480e      	ldr	r0, [pc, #56]	@ (8001d40 <HAL_CAN_MspInit+0xb8>)
 8001d08:	f002 fa5c 	bl	80041c4 <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_CAN1_2();
 8001d0c:	4b0d      	ldr	r3, [pc, #52]	@ (8001d44 <HAL_CAN_MspInit+0xbc>)
 8001d0e:	685b      	ldr	r3, [r3, #4]
 8001d10:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d14:	f423 43c0 	bic.w	r3, r3, #24576	@ 0x6000
 8001d18:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d1a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d1c:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 8001d20:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d24:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001d28:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d2a:	4a06      	ldr	r2, [pc, #24]	@ (8001d44 <HAL_CAN_MspInit+0xbc>)
 8001d2c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d2e:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN CAN1_MspInit 1 */

  /* USER CODE END CAN1_MspInit 1 */
  }
}
 8001d30:	bf00      	nop
 8001d32:	3728      	adds	r7, #40	@ 0x28
 8001d34:	46bd      	mov	sp, r7
 8001d36:	bd80      	pop	{r7, pc}
 8001d38:	40006400 	.word	0x40006400
 8001d3c:	40021000 	.word	0x40021000
 8001d40:	40010c00 	.word	0x40010c00
 8001d44:	40010000 	.word	0x40010000

08001d48 <CAN_Start>:
  }
}

/* USER CODE BEGIN 1 */

HAL_StatusTypeDef CAN_Start() {
 8001d48:	b580      	push	{r7, lr}
 8001d4a:	af00      	add	r7, sp, #0
	return HAL_CAN_Start(&hcan1);
 8001d4c:	4802      	ldr	r0, [pc, #8]	@ (8001d58 <CAN_Start+0x10>)
 8001d4e:	f002 f81d 	bl	8003d8c <HAL_CAN_Start>
 8001d52:	4603      	mov	r3, r0
}
 8001d54:	4618      	mov	r0, r3
 8001d56:	bd80      	pop	{r7, pc}
 8001d58:	20000188 	.word	0x20000188

08001d5c <CAN_Activate>:

HAL_StatusTypeDef CAN_Activate() {
 8001d5c:	b580      	push	{r7, lr}
 8001d5e:	af00      	add	r7, sp, #0
	return HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 8001d60:	2102      	movs	r1, #2
 8001d62:	4803      	ldr	r0, [pc, #12]	@ (8001d70 <CAN_Activate+0x14>)
 8001d64:	f002 f925 	bl	8003fb2 <HAL_CAN_ActivateNotification>
 8001d68:	4603      	mov	r3, r0
}
 8001d6a:	4618      	mov	r0, r3
 8001d6c:	bd80      	pop	{r7, pc}
 8001d6e:	bf00      	nop
 8001d70:	20000188 	.word	0x20000188

08001d74 <CAN_Send>:

HAL_StatusTypeDef CAN_Send(struct CANMessage *ptr) {
 8001d74:	b580      	push	{r7, lr}
 8001d76:	b082      	sub	sp, #8
 8001d78:	af00      	add	r7, sp, #0
 8001d7a:	6078      	str	r0, [r7, #4]
	return HAL_CAN_AddTxMessage(&hcan1, &ptr->TxHeader, (uint8_t*) ptr->data,
 8001d7c:	6879      	ldr	r1, [r7, #4]
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	f103 021c 	add.w	r2, r3, #28
 8001d84:	687b      	ldr	r3, [r7, #4]
 8001d86:	3318      	adds	r3, #24
 8001d88:	4803      	ldr	r0, [pc, #12]	@ (8001d98 <CAN_Send+0x24>)
 8001d8a:	f002 f843 	bl	8003e14 <HAL_CAN_AddTxMessage>
 8001d8e:	4603      	mov	r3, r0
			&ptr->TxMailbox);
}
 8001d90:	4618      	mov	r0, r3
 8001d92:	3708      	adds	r7, #8
 8001d94:	46bd      	mov	sp, r7
 8001d96:	bd80      	pop	{r7, pc}
 8001d98:	20000188 	.word	0x20000188

08001d9c <CAN_SettingsInit>:

void CAN_SettingsInit(struct CANMessage *ptr) {
 8001d9c:	b580      	push	{r7, lr}
 8001d9e:	b082      	sub	sp, #8
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	6078      	str	r0, [r7, #4]
	CAN_Start();
 8001da4:	f7ff ffd0 	bl	8001d48 <CAN_Start>
	CAN_Activate();
 8001da8:	f7ff ffd8 	bl	8001d5c <CAN_Activate>
	ptr->TxHeader.IDE = CAN_ID_STD;
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	2200      	movs	r2, #0
 8001db0:	609a      	str	r2, [r3, #8]
	ptr->TxHeader.StdId = 0x00;
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	2200      	movs	r2, #0
 8001db6:	601a      	str	r2, [r3, #0]
	ptr->TxHeader.RTR = CAN_RTR_DATA;
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	2200      	movs	r2, #0
 8001dbc:	60da      	str	r2, [r3, #12]
	ptr->TxHeader.DLC = 8;
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	2208      	movs	r2, #8
 8001dc2:	611a      	str	r2, [r3, #16]
}
 8001dc4:	bf00      	nop
 8001dc6:	3708      	adds	r7, #8
 8001dc8:	46bd      	mov	sp, r7
 8001dca:	bd80      	pop	{r7, pc}

08001dcc <Set_CAN_Id>:

void Set_CAN_Id(struct CANMessage *ptr, uint32_t id) {
 8001dcc:	b480      	push	{r7}
 8001dce:	b083      	sub	sp, #12
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	6078      	str	r0, [r7, #4]
 8001dd4:	6039      	str	r1, [r7, #0]
	ptr->TxHeader.StdId = id;
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	683a      	ldr	r2, [r7, #0]
 8001dda:	601a      	str	r2, [r3, #0]
}
 8001ddc:	bf00      	nop
 8001dde:	370c      	adds	r7, #12
 8001de0:	46bd      	mov	sp, r7
 8001de2:	bc80      	pop	{r7}
 8001de4:	4770      	bx	lr

08001de6 <CAN_Send_Voltage>:

void CAN_Send_Voltage(struct CANMessage *ptr, uint16_t *read_volt) {
 8001de6:	b580      	push	{r7, lr}
 8001de8:	b086      	sub	sp, #24
 8001dea:	af00      	add	r7, sp, #0
 8001dec:	6078      	str	r0, [r7, #4]
 8001dee:	6039      	str	r1, [r7, #0]
	uint16_t CAN_ID = 0x630;
 8001df0:	f44f 63c6 	mov.w	r3, #1584	@ 0x630
 8001df4:	82fb      	strh	r3, [r7, #22]
	Set_CAN_Id(ptr, CAN_ID);
 8001df6:	8afb      	ldrh	r3, [r7, #22]
 8001df8:	4619      	mov	r1, r3
 8001dfa:	6878      	ldr	r0, [r7, #4]
 8001dfc:	f7ff ffe6 	bl	8001dcc <Set_CAN_Id>
	for (int i = 0; i < NUM_CELLS; i++) {
 8001e00:	2300      	movs	r3, #0
 8001e02:	613b      	str	r3, [r7, #16]
 8001e04:	e074      	b.n	8001ef0 <CAN_Send_Voltage+0x10a>
		if (i % 4 == 0) {
 8001e06:	693b      	ldr	r3, [r7, #16]
 8001e08:	f003 0303 	and.w	r3, r3, #3
 8001e0c:	2b00      	cmp	r3, #0
 8001e0e:	d156      	bne.n	8001ebe <CAN_Send_Voltage+0xd8>
			uint8_t temp_volt = i;
 8001e10:	693b      	ldr	r3, [r7, #16]
 8001e12:	73fb      	strb	r3, [r7, #15]
			ptr->data[0] = read_volt[temp_volt];
 8001e14:	7bfb      	ldrb	r3, [r7, #15]
 8001e16:	005b      	lsls	r3, r3, #1
 8001e18:	683a      	ldr	r2, [r7, #0]
 8001e1a:	4413      	add	r3, r2
 8001e1c:	881b      	ldrh	r3, [r3, #0]
 8001e1e:	b2da      	uxtb	r2, r3
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	771a      	strb	r2, [r3, #28]
			ptr->data[1] = read_volt[temp_volt] >> 8;
 8001e24:	7bfb      	ldrb	r3, [r7, #15]
 8001e26:	005b      	lsls	r3, r3, #1
 8001e28:	683a      	ldr	r2, [r7, #0]
 8001e2a:	4413      	add	r3, r2
 8001e2c:	881b      	ldrh	r3, [r3, #0]
 8001e2e:	0a1b      	lsrs	r3, r3, #8
 8001e30:	b29b      	uxth	r3, r3
 8001e32:	b2da      	uxtb	r2, r3
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	775a      	strb	r2, [r3, #29]
			temp_volt += 1;
 8001e38:	7bfb      	ldrb	r3, [r7, #15]
 8001e3a:	3301      	adds	r3, #1
 8001e3c:	73fb      	strb	r3, [r7, #15]
			ptr->data[2] = read_volt[temp_volt];
 8001e3e:	7bfb      	ldrb	r3, [r7, #15]
 8001e40:	005b      	lsls	r3, r3, #1
 8001e42:	683a      	ldr	r2, [r7, #0]
 8001e44:	4413      	add	r3, r2
 8001e46:	881b      	ldrh	r3, [r3, #0]
 8001e48:	b2da      	uxtb	r2, r3
 8001e4a:	687b      	ldr	r3, [r7, #4]
 8001e4c:	779a      	strb	r2, [r3, #30]
			ptr->data[3] = read_volt[temp_volt] >> 8;
 8001e4e:	7bfb      	ldrb	r3, [r7, #15]
 8001e50:	005b      	lsls	r3, r3, #1
 8001e52:	683a      	ldr	r2, [r7, #0]
 8001e54:	4413      	add	r3, r2
 8001e56:	881b      	ldrh	r3, [r3, #0]
 8001e58:	0a1b      	lsrs	r3, r3, #8
 8001e5a:	b29b      	uxth	r3, r3
 8001e5c:	b2da      	uxtb	r2, r3
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	77da      	strb	r2, [r3, #31]
			temp_volt += 1;
 8001e62:	7bfb      	ldrb	r3, [r7, #15]
 8001e64:	3301      	adds	r3, #1
 8001e66:	73fb      	strb	r3, [r7, #15]
			ptr->data[4] = read_volt[temp_volt];
 8001e68:	7bfb      	ldrb	r3, [r7, #15]
 8001e6a:	005b      	lsls	r3, r3, #1
 8001e6c:	683a      	ldr	r2, [r7, #0]
 8001e6e:	4413      	add	r3, r2
 8001e70:	881b      	ldrh	r3, [r3, #0]
 8001e72:	b2da      	uxtb	r2, r3
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	f883 2020 	strb.w	r2, [r3, #32]
			ptr->data[5] = read_volt[temp_volt] >> 8;
 8001e7a:	7bfb      	ldrb	r3, [r7, #15]
 8001e7c:	005b      	lsls	r3, r3, #1
 8001e7e:	683a      	ldr	r2, [r7, #0]
 8001e80:	4413      	add	r3, r2
 8001e82:	881b      	ldrh	r3, [r3, #0]
 8001e84:	0a1b      	lsrs	r3, r3, #8
 8001e86:	b29b      	uxth	r3, r3
 8001e88:	b2da      	uxtb	r2, r3
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
			temp_volt += 1;
 8001e90:	7bfb      	ldrb	r3, [r7, #15]
 8001e92:	3301      	adds	r3, #1
 8001e94:	73fb      	strb	r3, [r7, #15]
			ptr->data[6] = read_volt[temp_volt];
 8001e96:	7bfb      	ldrb	r3, [r7, #15]
 8001e98:	005b      	lsls	r3, r3, #1
 8001e9a:	683a      	ldr	r2, [r7, #0]
 8001e9c:	4413      	add	r3, r2
 8001e9e:	881b      	ldrh	r3, [r3, #0]
 8001ea0:	b2da      	uxtb	r2, r3
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22
			ptr->data[7] = read_volt[temp_volt] >> 8;
 8001ea8:	7bfb      	ldrb	r3, [r7, #15]
 8001eaa:	005b      	lsls	r3, r3, #1
 8001eac:	683a      	ldr	r2, [r7, #0]
 8001eae:	4413      	add	r3, r2
 8001eb0:	881b      	ldrh	r3, [r3, #0]
 8001eb2:	0a1b      	lsrs	r3, r3, #8
 8001eb4:	b29b      	uxth	r3, r3
 8001eb6:	b2da      	uxtb	r2, r3
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
		}
		if (i > 0 && i % 4 == 0) {
 8001ebe:	693b      	ldr	r3, [r7, #16]
 8001ec0:	2b00      	cmp	r3, #0
 8001ec2:	dd0c      	ble.n	8001ede <CAN_Send_Voltage+0xf8>
 8001ec4:	693b      	ldr	r3, [r7, #16]
 8001ec6:	f003 0303 	and.w	r3, r3, #3
 8001eca:	2b00      	cmp	r3, #0
 8001ecc:	d107      	bne.n	8001ede <CAN_Send_Voltage+0xf8>
			CAN_ID = CAN_ID + 0x01;
 8001ece:	8afb      	ldrh	r3, [r7, #22]
 8001ed0:	3301      	adds	r3, #1
 8001ed2:	82fb      	strh	r3, [r7, #22]
			Set_CAN_Id(ptr, CAN_ID);
 8001ed4:	8afb      	ldrh	r3, [r7, #22]
 8001ed6:	4619      	mov	r1, r3
 8001ed8:	6878      	ldr	r0, [r7, #4]
 8001eda:	f7ff ff77 	bl	8001dcc <Set_CAN_Id>
		}
		HAL_Delay(1);
 8001ede:	2001      	movs	r0, #1
 8001ee0:	f001 f9de 	bl	80032a0 <HAL_Delay>
		CAN_Send(ptr);
 8001ee4:	6878      	ldr	r0, [r7, #4]
 8001ee6:	f7ff ff45 	bl	8001d74 <CAN_Send>
	for (int i = 0; i < NUM_CELLS; i++) {
 8001eea:	693b      	ldr	r3, [r7, #16]
 8001eec:	3301      	adds	r3, #1
 8001eee:	613b      	str	r3, [r7, #16]
 8001ef0:	693b      	ldr	r3, [r7, #16]
 8001ef2:	2b5f      	cmp	r3, #95	@ 0x5f
 8001ef4:	dd87      	ble.n	8001e06 <CAN_Send_Voltage+0x20>
	}

}
 8001ef6:	bf00      	nop
 8001ef8:	bf00      	nop
 8001efa:	3718      	adds	r7, #24
 8001efc:	46bd      	mov	sp, r7
 8001efe:	bd80      	pop	{r7, pc}

08001f00 <CAN_Send_Temperature>:

void CAN_Send_Temperature(struct CANMessage *ptr, uint16_t *read_temp) {
 8001f00:	b580      	push	{r7, lr}
 8001f02:	b084      	sub	sp, #16
 8001f04:	af00      	add	r7, sp, #0
 8001f06:	6078      	str	r0, [r7, #4]
 8001f08:	6039      	str	r1, [r7, #0]
	uint16_t CAN_ID = 0x680;
 8001f0a:	f44f 63d0 	mov.w	r3, #1664	@ 0x680
 8001f0e:	81fb      	strh	r3, [r7, #14]
	Set_CAN_Id(ptr, CAN_ID);
 8001f10:	89fb      	ldrh	r3, [r7, #14]
 8001f12:	4619      	mov	r1, r3
 8001f14:	6878      	ldr	r0, [r7, #4]
 8001f16:	f7ff ff59 	bl	8001dcc <Set_CAN_Id>
	for (uint8_t i = 0; i < NUM_THERM_TOTAL; i++) {
 8001f1a:	2300      	movs	r3, #0
 8001f1c:	737b      	strb	r3, [r7, #13]
 8001f1e:	e076      	b.n	800200e <CAN_Send_Temperature+0x10e>
		if (i % 4 == 0) {
 8001f20:	7b7b      	ldrb	r3, [r7, #13]
 8001f22:	f003 0303 	and.w	r3, r3, #3
 8001f26:	b2db      	uxtb	r3, r3
 8001f28:	2b00      	cmp	r3, #0
 8001f2a:	d156      	bne.n	8001fda <CAN_Send_Temperature+0xda>
			uint8_t temp_volt = i;
 8001f2c:	7b7b      	ldrb	r3, [r7, #13]
 8001f2e:	733b      	strb	r3, [r7, #12]
			ptr->data[0] = read_temp[temp_volt];
 8001f30:	7b3b      	ldrb	r3, [r7, #12]
 8001f32:	005b      	lsls	r3, r3, #1
 8001f34:	683a      	ldr	r2, [r7, #0]
 8001f36:	4413      	add	r3, r2
 8001f38:	881b      	ldrh	r3, [r3, #0]
 8001f3a:	b2da      	uxtb	r2, r3
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	771a      	strb	r2, [r3, #28]
			ptr->data[1] = read_temp[temp_volt] >> 8;
 8001f40:	7b3b      	ldrb	r3, [r7, #12]
 8001f42:	005b      	lsls	r3, r3, #1
 8001f44:	683a      	ldr	r2, [r7, #0]
 8001f46:	4413      	add	r3, r2
 8001f48:	881b      	ldrh	r3, [r3, #0]
 8001f4a:	0a1b      	lsrs	r3, r3, #8
 8001f4c:	b29b      	uxth	r3, r3
 8001f4e:	b2da      	uxtb	r2, r3
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	775a      	strb	r2, [r3, #29]
			temp_volt += 1;
 8001f54:	7b3b      	ldrb	r3, [r7, #12]
 8001f56:	3301      	adds	r3, #1
 8001f58:	733b      	strb	r3, [r7, #12]
			ptr->data[2] = read_temp[temp_volt];
 8001f5a:	7b3b      	ldrb	r3, [r7, #12]
 8001f5c:	005b      	lsls	r3, r3, #1
 8001f5e:	683a      	ldr	r2, [r7, #0]
 8001f60:	4413      	add	r3, r2
 8001f62:	881b      	ldrh	r3, [r3, #0]
 8001f64:	b2da      	uxtb	r2, r3
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	779a      	strb	r2, [r3, #30]
			ptr->data[3] = read_temp[temp_volt] >> 8;
 8001f6a:	7b3b      	ldrb	r3, [r7, #12]
 8001f6c:	005b      	lsls	r3, r3, #1
 8001f6e:	683a      	ldr	r2, [r7, #0]
 8001f70:	4413      	add	r3, r2
 8001f72:	881b      	ldrh	r3, [r3, #0]
 8001f74:	0a1b      	lsrs	r3, r3, #8
 8001f76:	b29b      	uxth	r3, r3
 8001f78:	b2da      	uxtb	r2, r3
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	77da      	strb	r2, [r3, #31]
			temp_volt += 1;
 8001f7e:	7b3b      	ldrb	r3, [r7, #12]
 8001f80:	3301      	adds	r3, #1
 8001f82:	733b      	strb	r3, [r7, #12]
			ptr->data[4] = read_temp[temp_volt];
 8001f84:	7b3b      	ldrb	r3, [r7, #12]
 8001f86:	005b      	lsls	r3, r3, #1
 8001f88:	683a      	ldr	r2, [r7, #0]
 8001f8a:	4413      	add	r3, r2
 8001f8c:	881b      	ldrh	r3, [r3, #0]
 8001f8e:	b2da      	uxtb	r2, r3
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	f883 2020 	strb.w	r2, [r3, #32]
			ptr->data[5] = read_temp[temp_volt] >> 8;
 8001f96:	7b3b      	ldrb	r3, [r7, #12]
 8001f98:	005b      	lsls	r3, r3, #1
 8001f9a:	683a      	ldr	r2, [r7, #0]
 8001f9c:	4413      	add	r3, r2
 8001f9e:	881b      	ldrh	r3, [r3, #0]
 8001fa0:	0a1b      	lsrs	r3, r3, #8
 8001fa2:	b29b      	uxth	r3, r3
 8001fa4:	b2da      	uxtb	r2, r3
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
			temp_volt += 1;
 8001fac:	7b3b      	ldrb	r3, [r7, #12]
 8001fae:	3301      	adds	r3, #1
 8001fb0:	733b      	strb	r3, [r7, #12]
			ptr->data[6] = read_temp[temp_volt];
 8001fb2:	7b3b      	ldrb	r3, [r7, #12]
 8001fb4:	005b      	lsls	r3, r3, #1
 8001fb6:	683a      	ldr	r2, [r7, #0]
 8001fb8:	4413      	add	r3, r2
 8001fba:	881b      	ldrh	r3, [r3, #0]
 8001fbc:	b2da      	uxtb	r2, r3
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22
			ptr->data[7] = read_temp[temp_volt] >> 8;
 8001fc4:	7b3b      	ldrb	r3, [r7, #12]
 8001fc6:	005b      	lsls	r3, r3, #1
 8001fc8:	683a      	ldr	r2, [r7, #0]
 8001fca:	4413      	add	r3, r2
 8001fcc:	881b      	ldrh	r3, [r3, #0]
 8001fce:	0a1b      	lsrs	r3, r3, #8
 8001fd0:	b29b      	uxth	r3, r3
 8001fd2:	b2da      	uxtb	r2, r3
 8001fd4:	687b      	ldr	r3, [r7, #4]
 8001fd6:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23
		}
		if (i > 0 && i % 4 == 0) {
 8001fda:	7b7b      	ldrb	r3, [r7, #13]
 8001fdc:	2b00      	cmp	r3, #0
 8001fde:	d00d      	beq.n	8001ffc <CAN_Send_Temperature+0xfc>
 8001fe0:	7b7b      	ldrb	r3, [r7, #13]
 8001fe2:	f003 0303 	and.w	r3, r3, #3
 8001fe6:	b2db      	uxtb	r3, r3
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	d107      	bne.n	8001ffc <CAN_Send_Temperature+0xfc>
			CAN_ID = CAN_ID + 0x01;
 8001fec:	89fb      	ldrh	r3, [r7, #14]
 8001fee:	3301      	adds	r3, #1
 8001ff0:	81fb      	strh	r3, [r7, #14]
			Set_CAN_Id(ptr, CAN_ID);
 8001ff2:	89fb      	ldrh	r3, [r7, #14]
 8001ff4:	4619      	mov	r1, r3
 8001ff6:	6878      	ldr	r0, [r7, #4]
 8001ff8:	f7ff fee8 	bl	8001dcc <Set_CAN_Id>
		}
		HAL_Delay(1);
 8001ffc:	2001      	movs	r0, #1
 8001ffe:	f001 f94f 	bl	80032a0 <HAL_Delay>
		CAN_Send(ptr);
 8002002:	6878      	ldr	r0, [r7, #4]
 8002004:	f7ff feb6 	bl	8001d74 <CAN_Send>
	for (uint8_t i = 0; i < NUM_THERM_TOTAL; i++) {
 8002008:	7b7b      	ldrb	r3, [r7, #13]
 800200a:	3301      	adds	r3, #1
 800200c:	737b      	strb	r3, [r7, #13]
 800200e:	7b7b      	ldrb	r3, [r7, #13]
 8002010:	2b5f      	cmp	r3, #95	@ 0x5f
 8002012:	d985      	bls.n	8001f20 <CAN_Send_Temperature+0x20>
	}

}
 8002014:	bf00      	nop
 8002016:	bf00      	nop
 8002018:	3710      	adds	r7, #16
 800201a:	46bd      	mov	sp, r7
 800201c:	bd80      	pop	{r7, pc}

0800201e <CAN_Send_Cell_Summary>:

void CAN_Send_Cell_Summary(struct CANMessage *ptr, struct batteryModule *batt) {
 800201e:	b580      	push	{r7, lr}
 8002020:	b084      	sub	sp, #16
 8002022:	af00      	add	r7, sp, #0
 8002024:	6078      	str	r0, [r7, #4]
 8002026:	6039      	str	r1, [r7, #0]
	uint16_t CAN_ID = 0x622;
 8002028:	f240 6322 	movw	r3, #1570	@ 0x622
 800202c:	81fb      	strh	r3, [r7, #14]
	Set_CAN_Id(ptr, CAN_ID);
 800202e:	89fb      	ldrh	r3, [r7, #14]
 8002030:	4619      	mov	r1, r3
 8002032:	6878      	ldr	r0, [r7, #4]
 8002034:	f7ff feca 	bl	8001dcc <Set_CAN_Id>

	ptr->data[0] = batt->cell_volt_highest;
 8002038:	683b      	ldr	r3, [r7, #0]
 800203a:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 800203e:	b2da      	uxtb	r2, r3
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	771a      	strb	r2, [r3, #28]
	ptr->data[1] = (batt->cell_volt_highest) >> 8;
 8002044:	683b      	ldr	r3, [r7, #0]
 8002046:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 800204a:	0a1b      	lsrs	r3, r3, #8
 800204c:	b29b      	uxth	r3, r3
 800204e:	b2da      	uxtb	r2, r3
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	775a      	strb	r2, [r3, #29]
	ptr->data[2] = batt->cell_volt_lowest;
 8002054:	683b      	ldr	r3, [r7, #0]
 8002056:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 800205a:	b2da      	uxtb	r2, r3
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	779a      	strb	r2, [r3, #30]
	ptr->data[3] = (batt->cell_volt_lowest) >> 8;
 8002060:	683b      	ldr	r3, [r7, #0]
 8002062:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 8002066:	0a1b      	lsrs	r3, r3, #8
 8002068:	b29b      	uxth	r3, r3
 800206a:	b2da      	uxtb	r2, r3
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	77da      	strb	r2, [r3, #31]
	ptr->data[4] = batt->cell_temp_highest;
 8002070:	683b      	ldr	r3, [r7, #0]
 8002072:	f8b3 3196 	ldrh.w	r3, [r3, #406]	@ 0x196
 8002076:	b2da      	uxtb	r2, r3
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	f883 2020 	strb.w	r2, [r3, #32]
	ptr->data[5] = (batt->cell_temp_highest) >> 8;
 800207e:	683b      	ldr	r3, [r7, #0]
 8002080:	f8b3 3196 	ldrh.w	r3, [r3, #406]	@ 0x196
 8002084:	0a1b      	lsrs	r3, r3, #8
 8002086:	b29b      	uxth	r3, r3
 8002088:	b2da      	uxtb	r2, r3
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
	ptr->data[6] = batt->cell_temp_lowest;
 8002090:	683b      	ldr	r3, [r7, #0]
 8002092:	f8b3 3194 	ldrh.w	r3, [r3, #404]	@ 0x194
 8002096:	b2da      	uxtb	r2, r3
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22
	ptr->data[7] = (batt->cell_temp_lowest) >> 8;
 800209e:	683b      	ldr	r3, [r7, #0]
 80020a0:	f8b3 3194 	ldrh.w	r3, [r3, #404]	@ 0x194
 80020a4:	0a1b      	lsrs	r3, r3, #8
 80020a6:	b29b      	uxth	r3, r3
 80020a8:	b2da      	uxtb	r2, r3
 80020aa:	687b      	ldr	r3, [r7, #4]
 80020ac:	f883 2023 	strb.w	r2, [r3, #35]	@ 0x23

	HAL_Delay(1);
 80020b0:	2001      	movs	r0, #1
 80020b2:	f001 f8f5 	bl	80032a0 <HAL_Delay>
	CAN_Send(ptr);
 80020b6:	6878      	ldr	r0, [r7, #4]
 80020b8:	f7ff fe5c 	bl	8001d74 <CAN_Send>
}
 80020bc:	bf00      	nop
 80020be:	3710      	adds	r7, #16
 80020c0:	46bd      	mov	sp, r7
 80020c2:	bd80      	pop	{r7, pc}

080020c4 <CAN_Send_Safety_Checker>:

void CAN_Send_Safety_Checker(struct CANMessage *ptr, struct batteryModule *batt, uint8_t *faults,
		uint8_t *warnings, uint8_t *states) {
 80020c4:	b580      	push	{r7, lr}
 80020c6:	b086      	sub	sp, #24
 80020c8:	af00      	add	r7, sp, #0
 80020ca:	60f8      	str	r0, [r7, #12]
 80020cc:	60b9      	str	r1, [r7, #8]
 80020ce:	607a      	str	r2, [r7, #4]
 80020d0:	603b      	str	r3, [r7, #0]
	uint16_t CAN_ID = 0x600;
 80020d2:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80020d6:	82fb      	strh	r3, [r7, #22]
	Set_CAN_Id(ptr, CAN_ID);
 80020d8:	8afb      	ldrh	r3, [r7, #22]
 80020da:	4619      	mov	r1, r3
 80020dc:	68f8      	ldr	r0, [r7, #12]
 80020de:	f7ff fe75 	bl	8001dcc <Set_CAN_Id>

	ptr->data[0] = *faults;
 80020e2:	687b      	ldr	r3, [r7, #4]
 80020e4:	781a      	ldrb	r2, [r3, #0]
 80020e6:	68fb      	ldr	r3, [r7, #12]
 80020e8:	771a      	strb	r2, [r3, #28]
	ptr->data[1] = *warnings;
 80020ea:	683b      	ldr	r3, [r7, #0]
 80020ec:	781a      	ldrb	r2, [r3, #0]
 80020ee:	68fb      	ldr	r3, [r7, #12]
 80020f0:	775a      	strb	r2, [r3, #29]
	ptr->data[2] = *states;
 80020f2:	6a3b      	ldr	r3, [r7, #32]
 80020f4:	781a      	ldrb	r2, [r3, #0]
 80020f6:	68fb      	ldr	r3, [r7, #12]
 80020f8:	779a      	strb	r2, [r3, #30]
	ptr->data[3] = batt->pack_voltage;
 80020fa:	68bb      	ldr	r3, [r7, #8]
 80020fc:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 8002100:	b2da      	uxtb	r2, r3
 8002102:	68fb      	ldr	r3, [r7, #12]
 8002104:	77da      	strb	r2, [r3, #31]
	ptr->data[4] = (batt->pack_voltage) >> 8;
 8002106:	68bb      	ldr	r3, [r7, #8]
 8002108:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 800210c:	0a1b      	lsrs	r3, r3, #8
 800210e:	b2da      	uxtb	r2, r3
 8002110:	68fb      	ldr	r3, [r7, #12]
 8002112:	f883 2020 	strb.w	r2, [r3, #32]
	ptr->data[5] = (batt->pack_voltage) >> 16;
 8002116:	68bb      	ldr	r3, [r7, #8]
 8002118:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 800211c:	0c1b      	lsrs	r3, r3, #16
 800211e:	b2da      	uxtb	r2, r3
 8002120:	68fb      	ldr	r3, [r7, #12]
 8002122:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
	ptr->data[6] = (batt->pack_voltage) >> 24;
 8002126:	68bb      	ldr	r3, [r7, #8]
 8002128:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 800212c:	0e1b      	lsrs	r3, r3, #24
 800212e:	b2da      	uxtb	r2, r3
 8002130:	68fb      	ldr	r3, [r7, #12]
 8002132:	f883 2022 	strb.w	r2, [r3, #34]	@ 0x22

	HAL_Delay(1);
 8002136:	2001      	movs	r0, #1
 8002138:	f001 f8b2 	bl	80032a0 <HAL_Delay>
	CAN_Send(ptr);
 800213c:	68f8      	ldr	r0, [r7, #12]
 800213e:	f7ff fe19 	bl	8001d74 <CAN_Send>
}
 8002142:	bf00      	nop
 8002144:	3718      	adds	r7, #24
 8002146:	46bd      	mov	sp, r7
 8002148:	bd80      	pop	{r7, pc}
	...

0800214c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800214c:	b580      	push	{r7, lr}
 800214e:	b088      	sub	sp, #32
 8002150:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002152:	f107 0310 	add.w	r3, r7, #16
 8002156:	2200      	movs	r2, #0
 8002158:	601a      	str	r2, [r3, #0]
 800215a:	605a      	str	r2, [r3, #4]
 800215c:	609a      	str	r2, [r3, #8]
 800215e:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002160:	4b42      	ldr	r3, [pc, #264]	@ (800226c <MX_GPIO_Init+0x120>)
 8002162:	699b      	ldr	r3, [r3, #24]
 8002164:	4a41      	ldr	r2, [pc, #260]	@ (800226c <MX_GPIO_Init+0x120>)
 8002166:	f043 0320 	orr.w	r3, r3, #32
 800216a:	6193      	str	r3, [r2, #24]
 800216c:	4b3f      	ldr	r3, [pc, #252]	@ (800226c <MX_GPIO_Init+0x120>)
 800216e:	699b      	ldr	r3, [r3, #24]
 8002170:	f003 0320 	and.w	r3, r3, #32
 8002174:	60fb      	str	r3, [r7, #12]
 8002176:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002178:	4b3c      	ldr	r3, [pc, #240]	@ (800226c <MX_GPIO_Init+0x120>)
 800217a:	699b      	ldr	r3, [r3, #24]
 800217c:	4a3b      	ldr	r2, [pc, #236]	@ (800226c <MX_GPIO_Init+0x120>)
 800217e:	f043 0310 	orr.w	r3, r3, #16
 8002182:	6193      	str	r3, [r2, #24]
 8002184:	4b39      	ldr	r3, [pc, #228]	@ (800226c <MX_GPIO_Init+0x120>)
 8002186:	699b      	ldr	r3, [r3, #24]
 8002188:	f003 0310 	and.w	r3, r3, #16
 800218c:	60bb      	str	r3, [r7, #8]
 800218e:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002190:	4b36      	ldr	r3, [pc, #216]	@ (800226c <MX_GPIO_Init+0x120>)
 8002192:	699b      	ldr	r3, [r3, #24]
 8002194:	4a35      	ldr	r2, [pc, #212]	@ (800226c <MX_GPIO_Init+0x120>)
 8002196:	f043 0304 	orr.w	r3, r3, #4
 800219a:	6193      	str	r3, [r2, #24]
 800219c:	4b33      	ldr	r3, [pc, #204]	@ (800226c <MX_GPIO_Init+0x120>)
 800219e:	699b      	ldr	r3, [r3, #24]
 80021a0:	f003 0304 	and.w	r3, r3, #4
 80021a4:	607b      	str	r3, [r7, #4]
 80021a6:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80021a8:	4b30      	ldr	r3, [pc, #192]	@ (800226c <MX_GPIO_Init+0x120>)
 80021aa:	699b      	ldr	r3, [r3, #24]
 80021ac:	4a2f      	ldr	r2, [pc, #188]	@ (800226c <MX_GPIO_Init+0x120>)
 80021ae:	f043 0308 	orr.w	r3, r3, #8
 80021b2:	6193      	str	r3, [r2, #24]
 80021b4:	4b2d      	ldr	r3, [pc, #180]	@ (800226c <MX_GPIO_Init+0x120>)
 80021b6:	699b      	ldr	r3, [r3, #24]
 80021b8:	f003 0308 	and.w	r3, r3, #8
 80021bc:	603b      	str	r3, [r7, #0]
 80021be:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LTC_nCS_GPIO_Port, LTC_nCS_Pin, GPIO_PIN_RESET);
 80021c0:	2200      	movs	r2, #0
 80021c2:	2110      	movs	r1, #16
 80021c4:	482a      	ldr	r0, [pc, #168]	@ (8002270 <MX_GPIO_Init+0x124>)
 80021c6:	f002 f981 	bl	80044cc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(MCU_SHUTDOWN_SIGNAL_GPIO_Port, MCU_SHUTDOWN_SIGNAL_Pin, GPIO_PIN_RESET);
 80021ca:	2200      	movs	r2, #0
 80021cc:	2102      	movs	r1, #2
 80021ce:	4829      	ldr	r0, [pc, #164]	@ (8002274 <MX_GPIO_Init+0x128>)
 80021d0:	f002 f97c 	bl	80044cc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(MCU_HEARTBEAT_LED_GPIO_Port, MCU_HEARTBEAT_LED_Pin, GPIO_PIN_RESET);
 80021d4:	2200      	movs	r2, #0
 80021d6:	2140      	movs	r1, #64	@ 0x40
 80021d8:	4827      	ldr	r0, [pc, #156]	@ (8002278 <MX_GPIO_Init+0x12c>)
 80021da:	f002 f977 	bl	80044cc <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LTC_nCS_Pin */
  GPIO_InitStruct.Pin = LTC_nCS_Pin;
 80021de:	2310      	movs	r3, #16
 80021e0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80021e2:	2301      	movs	r3, #1
 80021e4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021e6:	2300      	movs	r3, #0
 80021e8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021ea:	2302      	movs	r3, #2
 80021ec:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LTC_nCS_GPIO_Port, &GPIO_InitStruct);
 80021ee:	f107 0310 	add.w	r3, r7, #16
 80021f2:	4619      	mov	r1, r3
 80021f4:	481e      	ldr	r0, [pc, #120]	@ (8002270 <MX_GPIO_Init+0x124>)
 80021f6:	f001 ffe5 	bl	80041c4 <HAL_GPIO_Init>

  /*Configure GPIO pin : MCU_SHUTDOWN_SIGNAL_Pin */
  GPIO_InitStruct.Pin = MCU_SHUTDOWN_SIGNAL_Pin;
 80021fa:	2302      	movs	r3, #2
 80021fc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80021fe:	2301      	movs	r3, #1
 8002200:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002202:	2300      	movs	r3, #0
 8002204:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002206:	2302      	movs	r3, #2
 8002208:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(MCU_SHUTDOWN_SIGNAL_GPIO_Port, &GPIO_InitStruct);
 800220a:	f107 0310 	add.w	r3, r7, #16
 800220e:	4619      	mov	r1, r3
 8002210:	4818      	ldr	r0, [pc, #96]	@ (8002274 <MX_GPIO_Init+0x128>)
 8002212:	f001 ffd7 	bl	80041c4 <HAL_GPIO_Init>

  /*Configure GPIO pin : MCU_HEARTBEAT_LED_Pin */
  GPIO_InitStruct.Pin = MCU_HEARTBEAT_LED_Pin;
 8002216:	2340      	movs	r3, #64	@ 0x40
 8002218:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800221a:	2301      	movs	r3, #1
 800221c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800221e:	2300      	movs	r3, #0
 8002220:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002222:	2302      	movs	r3, #2
 8002224:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(MCU_HEARTBEAT_LED_GPIO_Port, &GPIO_InitStruct);
 8002226:	f107 0310 	add.w	r3, r7, #16
 800222a:	4619      	mov	r1, r3
 800222c:	4812      	ldr	r0, [pc, #72]	@ (8002278 <MX_GPIO_Init+0x12c>)
 800222e:	f001 ffc9 	bl	80041c4 <HAL_GPIO_Init>

  /*Configure GPIO pin : MCU_HV_SENSE_ENABLE_Pin */
  GPIO_InitStruct.Pin = MCU_HV_SENSE_ENABLE_Pin;
 8002232:	2380      	movs	r3, #128	@ 0x80
 8002234:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002236:	2300      	movs	r3, #0
 8002238:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800223a:	2300      	movs	r3, #0
 800223c:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(MCU_HV_SENSE_ENABLE_GPIO_Port, &GPIO_InitStruct);
 800223e:	f107 0310 	add.w	r3, r7, #16
 8002242:	4619      	mov	r1, r3
 8002244:	480b      	ldr	r0, [pc, #44]	@ (8002274 <MX_GPIO_Init+0x128>)
 8002246:	f001 ffbd 	bl	80041c4 <HAL_GPIO_Init>

  /*Configure GPIO pin : MCU_SHUNT_Pin */
  GPIO_InitStruct.Pin = MCU_SHUNT_Pin;
 800224a:	2308      	movs	r3, #8
 800224c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800224e:	2303      	movs	r3, #3
 8002250:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002252:	2300      	movs	r3, #0
 8002254:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(MCU_SHUNT_GPIO_Port, &GPIO_InitStruct);
 8002256:	f107 0310 	add.w	r3, r7, #16
 800225a:	4619      	mov	r1, r3
 800225c:	4806      	ldr	r0, [pc, #24]	@ (8002278 <MX_GPIO_Init+0x12c>)
 800225e:	f001 ffb1 	bl	80041c4 <HAL_GPIO_Init>
}
 8002262:	bf00      	nop
 8002264:	3720      	adds	r7, #32
 8002266:	46bd      	mov	sp, r7
 8002268:	bd80      	pop	{r7, pc}
 800226a:	bf00      	nop
 800226c:	40021000 	.word	0x40021000
 8002270:	40010800 	.word	0x40010800
 8002274:	40010c00 	.word	0x40010c00
 8002278:	40011000 	.word	0x40011000

0800227c <ReadHVInput>:
#include "hv.h"

#include "adc.h"
#include "main.h"

void ReadHVInput(uint32_t *read_volt_HV) {
 800227c:	b580      	push	{r7, lr}
 800227e:	b086      	sub	sp, #24
 8002280:	af00      	add	r7, sp, #0
 8002282:	6078      	str	r0, [r7, #4]
    // ADC開始
    uint32_t adcValue =
        MX_ADC_GetValue(&hadc1, GPIO_VSENSE_ADC_CHANNEL, HAL_MAX_DELAY);
 8002284:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8002288:	210f      	movs	r1, #15
 800228a:	4817      	ldr	r0, [pc, #92]	@ (80022e8 <ReadHVInput+0x6c>)
 800228c:	f7ff fc20 	bl	8001ad0 <MX_ADC_GetValue>
 8002290:	6178      	str	r0, [r7, #20]

    // 電圧計算
    float adcVoltage = ((float)adcValue / ADC_RESOLUTION) * V_REF * 10000.0;
 8002292:	6978      	ldr	r0, [r7, #20]
 8002294:	f7fe fd3a 	bl	8000d0c <__aeabi_ui2f>
 8002298:	4603      	mov	r3, r0
 800229a:	f04f 418b 	mov.w	r1, #1166016512	@ 0x45800000
 800229e:	4618      	mov	r0, r3
 80022a0:	f7fe fe40 	bl	8000f24 <__aeabi_fdiv>
 80022a4:	4603      	mov	r3, r0
 80022a6:	4911      	ldr	r1, [pc, #68]	@ (80022ec <ReadHVInput+0x70>)
 80022a8:	4618      	mov	r0, r3
 80022aa:	f7fe fd87 	bl	8000dbc <__aeabi_fmul>
 80022ae:	4603      	mov	r3, r0
 80022b0:	490f      	ldr	r1, [pc, #60]	@ (80022f0 <ReadHVInput+0x74>)
 80022b2:	4618      	mov	r0, r3
 80022b4:	f7fe fd82 	bl	8000dbc <__aeabi_fmul>
 80022b8:	4603      	mov	r3, r0
 80022ba:	613b      	str	r3, [r7, #16]
    //    uint32_t amcOutput = adcVoltage / GAIN_TLV9001;
    float amcInput = adcVoltage / GAIN_AMC1300;
 80022bc:	490d      	ldr	r1, [pc, #52]	@ (80022f4 <ReadHVInput+0x78>)
 80022be:	6938      	ldr	r0, [r7, #16]
 80022c0:	f7fe fe30 	bl	8000f24 <__aeabi_fdiv>
 80022c4:	4603      	mov	r3, r0
 80022c6:	60fb      	str	r3, [r7, #12]
    float hvInput = amcInput * DIVIDER_RATIO;
 80022c8:	490b      	ldr	r1, [pc, #44]	@ (80022f8 <ReadHVInput+0x7c>)
 80022ca:	68f8      	ldr	r0, [r7, #12]
 80022cc:	f7fe fd76 	bl	8000dbc <__aeabi_fmul>
 80022d0:	4603      	mov	r3, r0
 80022d2:	60bb      	str	r3, [r7, #8]

    *read_volt_HV = (uint32_t)hvInput;
 80022d4:	68b8      	ldr	r0, [r7, #8]
 80022d6:	f7fe fec1 	bl	800105c <__aeabi_f2uiz>
 80022da:	4602      	mov	r2, r0
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	601a      	str	r2, [r3, #0]
}
 80022e0:	bf00      	nop
 80022e2:	3718      	adds	r7, #24
 80022e4:	46bd      	mov	sp, r7
 80022e6:	bd80      	pop	{r7, pc}
 80022e8:	20000128 	.word	0x20000128
 80022ec:	40533333 	.word	0x40533333
 80022f0:	461c4000 	.word	0x461c4000
 80022f4:	41033333 	.word	0x41033333
 80022f8:	44fee666 	.word	0x44fee666

080022fc <State_of_Charge>:

void State_of_Charge(batteryModule *batt, float elapsed_time, uint8_t *fault,
                     uint8_t *warnings) {
 80022fc:	b5b0      	push	{r4, r5, r7, lr}
 80022fe:	b088      	sub	sp, #32
 8002300:	af00      	add	r7, sp, #0
 8002302:	60f8      	str	r0, [r7, #12]
 8002304:	60b9      	str	r1, [r7, #8]
 8002306:	607a      	str	r2, [r7, #4]
 8002308:	603b      	str	r3, [r7, #0]
    uint32_t adcValue =
        MX_ADC_GetValue(&hadc2, GPIO_SHUNT_ADC_CHANNEL, HAL_MAX_DELAY);
 800230a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800230e:	210d      	movs	r1, #13
 8002310:	4823      	ldr	r0, [pc, #140]	@ (80023a0 <State_of_Charge+0xa4>)
 8002312:	f7ff fbdd 	bl	8001ad0 <MX_ADC_GetValue>
 8002316:	61f8      	str	r0, [r7, #28]
    float voltage = ((float)adcValue / ADC_RESOLUTION) * V_REF;
 8002318:	69f8      	ldr	r0, [r7, #28]
 800231a:	f7fe fcf7 	bl	8000d0c <__aeabi_ui2f>
 800231e:	4603      	mov	r3, r0
 8002320:	f04f 418b 	mov.w	r1, #1166016512	@ 0x45800000
 8002324:	4618      	mov	r0, r3
 8002326:	f7fe fdfd 	bl	8000f24 <__aeabi_fdiv>
 800232a:	4603      	mov	r3, r0
 800232c:	491d      	ldr	r1, [pc, #116]	@ (80023a4 <State_of_Charge+0xa8>)
 800232e:	4618      	mov	r0, r3
 8002330:	f7fe fd44 	bl	8000dbc <__aeabi_fmul>
 8002334:	4603      	mov	r3, r0
 8002336:	61bb      	str	r3, [r7, #24]
    float current = (voltage / MAX_SHUNT_VOLTAGE) * MAX_SHUNT_AMPAGE;
 8002338:	491a      	ldr	r1, [pc, #104]	@ (80023a4 <State_of_Charge+0xa8>)
 800233a:	69b8      	ldr	r0, [r7, #24]
 800233c:	f7fe fdf2 	bl	8000f24 <__aeabi_fdiv>
 8002340:	4603      	mov	r3, r0
 8002342:	4919      	ldr	r1, [pc, #100]	@ (80023a8 <State_of_Charge+0xac>)
 8002344:	4618      	mov	r0, r3
 8002346:	f7fe fd39 	bl	8000dbc <__aeabi_fmul>
 800234a:	4603      	mov	r3, r0
 800234c:	617b      	str	r3, [r7, #20]
    batt->soc = (uint32_t)((float)batt->soc -
 800234e:	68fb      	ldr	r3, [r7, #12]
 8002350:	f8d3 31fc 	ldr.w	r3, [r3, #508]	@ 0x1fc
 8002354:	4618      	mov	r0, r3
 8002356:	f7fe fcd9 	bl	8000d0c <__aeabi_ui2f>
 800235a:	4604      	mov	r4, r0
                           current * (1 / (NUM_DEVICES)) *
 800235c:	f04f 0100 	mov.w	r1, #0
 8002360:	6978      	ldr	r0, [r7, #20]
 8002362:	f7fe fd2b 	bl	8000dbc <__aeabi_fmul>
 8002366:	4603      	mov	r3, r0
 8002368:	461d      	mov	r5, r3
                               (elapsed_time / 3600));
 800236a:	4910      	ldr	r1, [pc, #64]	@ (80023ac <State_of_Charge+0xb0>)
 800236c:	68b8      	ldr	r0, [r7, #8]
 800236e:	f7fe fdd9 	bl	8000f24 <__aeabi_fdiv>
 8002372:	4603      	mov	r3, r0
                           current * (1 / (NUM_DEVICES)) *
 8002374:	4619      	mov	r1, r3
 8002376:	4628      	mov	r0, r5
 8002378:	f7fe fd20 	bl	8000dbc <__aeabi_fmul>
 800237c:	4603      	mov	r3, r0
    batt->soc = (uint32_t)((float)batt->soc -
 800237e:	4619      	mov	r1, r3
 8002380:	4620      	mov	r0, r4
 8002382:	f7fe fc11 	bl	8000ba8 <__aeabi_fsub>
 8002386:	4603      	mov	r3, r0
 8002388:	4618      	mov	r0, r3
 800238a:	f7fe fe67 	bl	800105c <__aeabi_f2uiz>
 800238e:	4602      	mov	r2, r0
 8002390:	68fb      	ldr	r3, [r7, #12]
 8002392:	f8c3 21fc 	str.w	r2, [r3, #508]	@ 0x1fc
}
 8002396:	bf00      	nop
 8002398:	3720      	adds	r7, #32
 800239a:	46bd      	mov	sp, r7
 800239c:	bdb0      	pop	{r4, r5, r7, pc}
 800239e:	bf00      	nop
 80023a0:	20000158 	.word	0x20000158
 80023a4:	40533333 	.word	0x40533333
 80023a8:	43fa0000 	.word	0x43fa0000
 80023ac:	45610000 	.word	0x45610000

080023b0 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 80023b0:	b590      	push	{r4, r7, lr}
 80023b2:	f5ad 7d1b 	sub.w	sp, sp, #620	@ 0x26c
 80023b6:	af04      	add	r7, sp, #16
    GpioTimePacket tp_led_heartbeat;
    TimerPacket timerpacket_ltc;

    batteryModule modPackInfo;
    struct CANMessage msg;
    uint8_t safetyFaults = 0;
 80023b8:	f507 7316 	add.w	r3, r7, #600	@ 0x258
 80023bc:	f2a3 234d 	subw	r3, r3, #589	@ 0x24d
 80023c0:	2200      	movs	r2, #0
 80023c2:	701a      	strb	r2, [r3, #0]
    uint8_t safetyWarnings = 0;
 80023c4:	f507 7316 	add.w	r3, r7, #600	@ 0x258
 80023c8:	f2a3 234e 	subw	r3, r3, #590	@ 0x24e
 80023cc:	2200      	movs	r2, #0
 80023ce:	701a      	strb	r2, [r3, #0]
    uint8_t safetyStates = 0;
 80023d0:	f507 7316 	add.w	r3, r7, #600	@ 0x258
 80023d4:	f2a3 234f 	subw	r3, r3, #591	@ 0x24f
 80023d8:	2200      	movs	r2, #0
 80023da:	701a      	strb	r2, [r3, #0]

    modPackInfo.soc = MAX_BATTERY_CAPACITY;
 80023dc:	f507 7316 	add.w	r3, r7, #600	@ 0x258
 80023e0:	f5a3 730a 	sub.w	r3, r3, #552	@ 0x228
 80023e4:	2218      	movs	r2, #24
 80023e6:	f8c3 21fc 	str.w	r2, [r3, #508]	@ 0x1fc
        /* MCU
           Configuration--------------------------------------------------------*/

        /* Reset of all peripherals, Initializes the Flash interface and the
           Systick. */
        HAL_Init();
 80023ea:	f000 fef7 	bl	80031dc <HAL_Init>
    /* USER CODE BEGIN Init */

    /* USER CODE END Init */

    /* Configure the system clock */
    SystemClock_Config();
 80023ee:	f000 f97d 	bl	80026ec <SystemClock_Config>
    /* USER CODE BEGIN SysInit */

    /* USER CODE END SysInit */

    /* Initialize all configured peripherals */
    MX_GPIO_Init();
 80023f2:	f7ff feab 	bl	800214c <MX_GPIO_Init>
    MX_ADC1_Init();
 80023f6:	f7ff fb1f 	bl	8001a38 <MX_ADC1_Init>
    MX_ADC2_Init();
 80023fa:	f7ff fb43 	bl	8001a84 <MX_ADC2_Init>
    MX_TIM7_Init();
 80023fe:	f000 fdfd 	bl	8002ffc <MX_TIM7_Init>
    MX_SPI1_Init();
 8002402:	f000 fcf3 	bl	8002dec <MX_SPI1_Init>
    MX_CAN1_Init();
 8002406:	f7ff fc09 	bl	8001c1c <MX_CAN1_Init>
    MX_USART1_UART_Init();
 800240a:	f000 fe4b 	bl	80030a4 <MX_USART1_UART_Init>
    /* USER CODE BEGIN 2 */
    CAN_SettingsInit(&msg);  // Start CAN at 0x00
 800240e:	f107 030c 	add.w	r3, r7, #12
 8002412:	4618      	mov	r0, r3
 8002414:	f7ff fcc2 	bl	8001d9c <CAN_SettingsInit>
    // Start timer
    GpioTimePacket_Init(&tp_led_heartbeat, MCU_HEARTBEAT_LED_GPIO_Port,
 8002418:	f507 730f 	add.w	r3, r7, #572	@ 0x23c
 800241c:	2240      	movs	r2, #64	@ 0x40
 800241e:	49ae      	ldr	r1, [pc, #696]	@ (80026d8 <main+0x328>)
 8002420:	4618      	mov	r0, r3
 8002422:	f000 f9cd 	bl	80027c0 <GpioTimePacket_Init>
                        MCU_HEARTBEAT_LED_Pin);
    TimerPacket_Init(&timerpacket_ltc, LTC_DELAY);
 8002426:	f507 730c 	add.w	r3, r7, #560	@ 0x230
 800242a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800242e:	4618      	mov	r0, r3
 8002430:	f000 fa06 	bl	8002840 <TimerPacket_Init>
    // Pull SPI1 nCS HIGH (deselect)
    LTC_nCS_High();
 8002434:	f000 fd5a 	bl	8002eec <LTC_nCS_High>

    //	//Sending a fault signal and reseting it
    HAL_GPIO_WritePin(MCU_SHUTDOWN_SIGNAL_GPIO_Port, MCU_SHUTDOWN_SIGNAL_Pin,
 8002438:	2201      	movs	r2, #1
 800243a:	2102      	movs	r1, #2
 800243c:	48a7      	ldr	r0, [pc, #668]	@ (80026dc <main+0x32c>)
 800243e:	f002 f845 	bl	80044cc <HAL_GPIO_WritePin>
                      GPIO_PIN_SET);
    HAL_Delay(500);
 8002442:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8002446:	f000 ff2b 	bl	80032a0 <HAL_Delay>
    HAL_GPIO_WritePin(MCU_SHUTDOWN_SIGNAL_GPIO_Port, MCU_SHUTDOWN_SIGNAL_Pin,
 800244a:	2200      	movs	r2, #0
 800244c:	2102      	movs	r1, #2
 800244e:	48a3      	ldr	r0, [pc, #652]	@ (80026dc <main+0x32c>)
 8002450:	f002 f83c 	bl	80044cc <HAL_GPIO_WritePin>
                      GPIO_PIN_RESET);

    // initializing variables
    uint8_t tempindex = 0;
 8002454:	2300      	movs	r3, #0
 8002456:	f887 3257 	strb.w	r3, [r7, #599]	@ 0x257
    uint8_t indexpause = 8;
 800245a:	2308      	movs	r3, #8
 800245c:	f887 3256 	strb.w	r3, [r7, #598]	@ 0x256
    uint8_t low_volt_hysteresis = 0;
 8002460:	f507 7316 	add.w	r3, r7, #600	@ 0x258
 8002464:	f5a3 7314 	sub.w	r3, r3, #592	@ 0x250
 8002468:	2200      	movs	r2, #0
 800246a:	701a      	strb	r2, [r3, #0]
    uint8_t high_volt_hysteresis = 0;
 800246c:	f507 7316 	add.w	r3, r7, #600	@ 0x258
 8002470:	f2a3 2351 	subw	r3, r3, #593	@ 0x251
 8002474:	2200      	movs	r2, #0
 8002476:	701a      	strb	r2, [r3, #0]
    uint8_t cell_imbalance_hysteresis = 0;
 8002478:	f507 7316 	add.w	r3, r7, #600	@ 0x258
 800247c:	f2a3 2352 	subw	r3, r3, #594	@ 0x252
 8002480:	2200      	movs	r2, #0
 8002482:	701a      	strb	r2, [r3, #0]

    // reading cell voltages
    Wakeup_Sleep();
 8002484:	f7fe ffa0 	bl	80013c8 <Wakeup_Sleep>
    Read_Volt(modPackInfo.cell_volt);
 8002488:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800248c:	4618      	mov	r0, r3
 800248e:	f000 faa1 	bl	80029d4 <Read_Volt>

    // reading cell temperatures
    Wakeup_Sleep();
 8002492:	f7fe ff99 	bl	80013c8 <Wakeup_Sleep>
    for (uint8_t i = tempindex; i < indexpause; i++) {
 8002496:	f897 3257 	ldrb.w	r3, [r7, #599]	@ 0x257
 800249a:	f887 3255 	strb.w	r3, [r7, #597]	@ 0x255
 800249e:	e016      	b.n	80024ce <main+0x11e>
        Wakeup_Idle();
 80024a0:	f7fe ff72 	bl	8001388 <Wakeup_Idle>
        Read_Temp(i, modPackInfo.cell_temp, modPackInfo.read_auxreg);
 80024a4:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80024a8:	f503 72ce 	add.w	r2, r3, #412	@ 0x19c
 80024ac:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80024b0:	f103 01c0 	add.w	r1, r3, #192	@ 0xc0
 80024b4:	f897 3255 	ldrb.w	r3, [r7, #597]	@ 0x255
 80024b8:	4618      	mov	r0, r3
 80024ba:	f000 fa9f 	bl	80029fc <Read_Temp>
        HAL_Delay(3);
 80024be:	2003      	movs	r0, #3
 80024c0:	f000 feee 	bl	80032a0 <HAL_Delay>
    for (uint8_t i = tempindex; i < indexpause; i++) {
 80024c4:	f897 3255 	ldrb.w	r3, [r7, #597]	@ 0x255
 80024c8:	3301      	adds	r3, #1
 80024ca:	f887 3255 	strb.w	r3, [r7, #597]	@ 0x255
 80024ce:	f897 2255 	ldrb.w	r2, [r7, #597]	@ 0x255
 80024d2:	f897 3256 	ldrb.w	r3, [r7, #598]	@ 0x256
 80024d6:	429a      	cmp	r2, r3
 80024d8:	d3e2      	bcc.n	80024a0 <main+0xf0>
    }
    Wakeup_Idle();
 80024da:	f7fe ff55 	bl	8001388 <Wakeup_Idle>
    LTC_WRCOMM(NUM_DEVICES, BMS_MUX_PAUSE[0]);
 80024de:	4980      	ldr	r1, [pc, #512]	@ (80026e0 <main+0x330>)
 80024e0:	2008      	movs	r0, #8
 80024e2:	f7ff f845 	bl	8001570 <LTC_WRCOMM>
    Wakeup_Idle();
 80024e6:	f7fe ff4f 	bl	8001388 <Wakeup_Idle>
    LTC_STCOMM(2);
 80024ea:	2002      	movs	r0, #2
 80024ec:	f7ff f8ae 	bl	800164c <LTC_STCOMM>

    Wakeup_Sleep();
 80024f0:	f7fe ff6a 	bl	80013c8 <Wakeup_Sleep>
    for (uint8_t i = indexpause; i < NUM_THERM_PER_MOD; i++) {
 80024f4:	f897 3256 	ldrb.w	r3, [r7, #598]	@ 0x256
 80024f8:	f887 3254 	strb.w	r3, [r7, #596]	@ 0x254
 80024fc:	e016      	b.n	800252c <main+0x17c>
        Wakeup_Idle();
 80024fe:	f7fe ff43 	bl	8001388 <Wakeup_Idle>
        Read_Temp(i, modPackInfo.cell_temp, modPackInfo.read_auxreg);
 8002502:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8002506:	f503 72ce 	add.w	r2, r3, #412	@ 0x19c
 800250a:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800250e:	f103 01c0 	add.w	r1, r3, #192	@ 0xc0
 8002512:	f897 3254 	ldrb.w	r3, [r7, #596]	@ 0x254
 8002516:	4618      	mov	r0, r3
 8002518:	f000 fa70 	bl	80029fc <Read_Temp>
        HAL_Delay(3);
 800251c:	2003      	movs	r0, #3
 800251e:	f000 febf 	bl	80032a0 <HAL_Delay>
    for (uint8_t i = indexpause; i < NUM_THERM_PER_MOD; i++) {
 8002522:	f897 3254 	ldrb.w	r3, [r7, #596]	@ 0x254
 8002526:	3301      	adds	r3, #1
 8002528:	f887 3254 	strb.w	r3, [r7, #596]	@ 0x254
 800252c:	f897 3254 	ldrb.w	r3, [r7, #596]	@ 0x254
 8002530:	2b0b      	cmp	r3, #11
 8002532:	d9e4      	bls.n	80024fe <main+0x14e>
    }
    Wakeup_Idle();
 8002534:	f7fe ff28 	bl	8001388 <Wakeup_Idle>
    LTC_WRCOMM(NUM_DEVICES, BMS_MUX_PAUSE[1]);
 8002538:	496a      	ldr	r1, [pc, #424]	@ (80026e4 <main+0x334>)
 800253a:	2008      	movs	r0, #8
 800253c:	f7ff f818 	bl	8001570 <LTC_WRCOMM>
    Wakeup_Idle();
 8002540:	f7fe ff22 	bl	8001388 <Wakeup_Idle>
    LTC_STCOMM(2);
 8002544:	2002      	movs	r0, #2
 8002546:	f7ff f881 	bl	800164c <LTC_STCOMM>

    clock_t prev_soc_time = clock();
 800254a:	f003 ff29 	bl	80063a0 <clock>
 800254e:	f8c7 0250 	str.w	r0, [r7, #592]	@ 0x250
    /* USER CODE BEGIN WHILE */
    while (1) {
        /* USER CODE END WHILE */

        /* USER CODE BEGIN 3 */
        GpioFixedToggle(&tp_led_heartbeat, LED_HEARTBEAT_DELAY_MS);
 8002552:	f507 730f 	add.w	r3, r7, #572	@ 0x23c
 8002556:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 800255a:	4618      	mov	r0, r3
 800255c:	f000 f94d 	bl	80027fa <GpioFixedToggle>
        if (TimerPacket_FixedPulse(&timerpacket_ltc)) {
 8002560:	f507 730c 	add.w	r3, r7, #560	@ 0x230
 8002564:	4618      	mov	r0, r3
 8002566:	f000 f97e 	bl	8002866 <TimerPacket_FixedPulse>
 800256a:	4603      	mov	r3, r0
 800256c:	2b00      	cmp	r3, #0
 800256e:	d0f0      	beq.n	8002552 <main+0x1a2>
            // calling all CAN realated methods
            CAN_Send_Safety_Checker(&msg, &modPackInfo, &safetyFaults,
 8002570:	f107 040a 	add.w	r4, r7, #10
 8002574:	f107 020b 	add.w	r2, r7, #11
 8002578:	f107 0130 	add.w	r1, r7, #48	@ 0x30
 800257c:	f107 000c 	add.w	r0, r7, #12
 8002580:	f107 0309 	add.w	r3, r7, #9
 8002584:	9300      	str	r3, [sp, #0]
 8002586:	4623      	mov	r3, r4
 8002588:	f7ff fd9c 	bl	80020c4 <CAN_Send_Safety_Checker>
                                    &safetyWarnings, &safetyStates);
            CAN_Send_Cell_Summary(&msg, &modPackInfo);
 800258c:	f107 0230 	add.w	r2, r7, #48	@ 0x30
 8002590:	f107 030c 	add.w	r3, r7, #12
 8002594:	4611      	mov	r1, r2
 8002596:	4618      	mov	r0, r3
 8002598:	f7ff fd41 	bl	800201e <CAN_Send_Cell_Summary>
            CAN_Send_Voltage(&msg, modPackInfo.cell_volt);
 800259c:	f107 0230 	add.w	r2, r7, #48	@ 0x30
 80025a0:	f107 030c 	add.w	r3, r7, #12
 80025a4:	4611      	mov	r1, r2
 80025a6:	4618      	mov	r0, r3
 80025a8:	f7ff fc1d 	bl	8001de6 <CAN_Send_Voltage>
            CAN_Send_Temperature(&msg, modPackInfo.cell_temp);
 80025ac:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80025b0:	f103 02c0 	add.w	r2, r3, #192	@ 0xc0
 80025b4:	f107 030c 	add.w	r3, r7, #12
 80025b8:	4611      	mov	r1, r2
 80025ba:	4618      	mov	r0, r3
 80025bc:	f7ff fca0 	bl	8001f00 <CAN_Send_Temperature>
            // reading cell voltages
            Wakeup_Sleep();
 80025c0:	f7fe ff02 	bl	80013c8 <Wakeup_Sleep>
            Read_Volt(modPackInfo.cell_volt);
 80025c4:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80025c8:	4618      	mov	r0, r3
 80025ca:	f000 fa03 	bl	80029d4 <Read_Volt>
            // print(NUM_CELLS, (uint16_t*) modPackInfo.cell_volt);

            // reading cell temperatures
            //			Wakeup_Sleep();
            for (uint8_t i = tempindex; i < indexpause; i++) {
 80025ce:	f897 3257 	ldrb.w	r3, [r7, #599]	@ 0x257
 80025d2:	f887 324f 	strb.w	r3, [r7, #591]	@ 0x24f
 80025d6:	e011      	b.n	80025fc <main+0x24c>
                //				Wakeup_Idle();
                Read_Temp(i, modPackInfo.cell_temp, modPackInfo.read_auxreg);
 80025d8:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80025dc:	f503 72ce 	add.w	r2, r3, #412	@ 0x19c
 80025e0:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80025e4:	f103 01c0 	add.w	r1, r3, #192	@ 0xc0
 80025e8:	f897 324f 	ldrb.w	r3, [r7, #591]	@ 0x24f
 80025ec:	4618      	mov	r0, r3
 80025ee:	f000 fa05 	bl	80029fc <Read_Temp>
            for (uint8_t i = tempindex; i < indexpause; i++) {
 80025f2:	f897 324f 	ldrb.w	r3, [r7, #591]	@ 0x24f
 80025f6:	3301      	adds	r3, #1
 80025f8:	f887 324f 	strb.w	r3, [r7, #591]	@ 0x24f
 80025fc:	f897 224f 	ldrb.w	r2, [r7, #591]	@ 0x24f
 8002600:	f897 3256 	ldrb.w	r3, [r7, #598]	@ 0x256
 8002604:	429a      	cmp	r2, r3
 8002606:	d3e7      	bcc.n	80025d8 <main+0x228>
                //				HAL_Delay(5);
            }
            if (indexpause == 8) {
 8002608:	f897 3256 	ldrb.w	r3, [r7, #598]	@ 0x256
 800260c:	2b08      	cmp	r3, #8
 800260e:	d10d      	bne.n	800262c <main+0x27c>
                //				Wakeup_Idle();
                LTC_WRCOMM(NUM_DEVICES, BMS_MUX_PAUSE[0]);
 8002610:	4933      	ldr	r1, [pc, #204]	@ (80026e0 <main+0x330>)
 8002612:	2008      	movs	r0, #8
 8002614:	f7fe ffac 	bl	8001570 <LTC_WRCOMM>
                //				Wakeup_Idle();
                LTC_STCOMM(2);
 8002618:	2002      	movs	r0, #2
 800261a:	f7ff f817 	bl	800164c <LTC_STCOMM>
                tempindex = 8;
 800261e:	2308      	movs	r3, #8
 8002620:	f887 3257 	strb.w	r3, [r7, #599]	@ 0x257
                indexpause = NUM_THERM_PER_MOD;
 8002624:	230c      	movs	r3, #12
 8002626:	f887 3256 	strb.w	r3, [r7, #598]	@ 0x256
 800262a:	e010      	b.n	800264e <main+0x29e>
            } else if (indexpause == NUM_THERM_PER_MOD) {
 800262c:	f897 3256 	ldrb.w	r3, [r7, #598]	@ 0x256
 8002630:	2b0c      	cmp	r3, #12
 8002632:	d10c      	bne.n	800264e <main+0x29e>
                //				Wakeup_Idle();
                LTC_WRCOMM(NUM_DEVICES, BMS_MUX_PAUSE[1]);
 8002634:	492b      	ldr	r1, [pc, #172]	@ (80026e4 <main+0x334>)
 8002636:	2008      	movs	r0, #8
 8002638:	f7fe ff9a 	bl	8001570 <LTC_WRCOMM>
                //				Wakeup_Idle();
                LTC_STCOMM(2);
 800263c:	2002      	movs	r0, #2
 800263e:	f7ff f805 	bl	800164c <LTC_STCOMM>
                indexpause = 8;
 8002642:	2308      	movs	r3, #8
 8002644:	f887 3256 	strb.w	r3, [r7, #598]	@ 0x256
                tempindex = 0;
 8002648:	2300      	movs	r3, #0
 800264a:	f887 3257 	strb.w	r3, [r7, #599]	@ 0x257
            }

            ReadHVInput(&modPackInfo.pack_voltage);
 800264e:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8002652:	f503 73cc 	add.w	r3, r3, #408	@ 0x198
 8002656:	4618      	mov	r0, r3
 8002658:	f7ff fe10 	bl	800227c <ReadHVInput>
            // print(NUM_THERM_TOTAL, (uint16_t*) modPackInfo.cell_temp);

            State_of_Charge(&modPackInfo,
                            (double)(clock() - prev_soc_time) / CLOCKS_PER_SEC,
 800265c:	f003 fea0 	bl	80063a0 <clock>
 8002660:	4602      	mov	r2, r0
 8002662:	f8d7 3250 	ldr.w	r3, [r7, #592]	@ 0x250
 8002666:	1ad3      	subs	r3, r2, r3
 8002668:	4618      	mov	r0, r3
 800266a:	f7fd ff1f 	bl	80004ac <__aeabi_ui2d>
 800266e:	f04f 0200 	mov.w	r2, #0
 8002672:	4b1d      	ldr	r3, [pc, #116]	@ (80026e8 <main+0x338>)
 8002674:	f7fe f8be 	bl	80007f4 <__aeabi_ddiv>
 8002678:	4602      	mov	r2, r0
 800267a:	460b      	mov	r3, r1
            State_of_Charge(&modPackInfo,
 800267c:	4610      	mov	r0, r2
 800267e:	4619      	mov	r1, r3
 8002680:	f7fe fa3e 	bl	8000b00 <__aeabi_d2f>
 8002684:	4601      	mov	r1, r0
 8002686:	f107 030a 	add.w	r3, r7, #10
 800268a:	f107 020b 	add.w	r2, r7, #11
 800268e:	f107 0030 	add.w	r0, r7, #48	@ 0x30
 8002692:	f7ff fe33 	bl	80022fc <State_of_Charge>
                            &safetyFaults, &safetyWarnings);
            prev_soc_time = clock();
 8002696:	f003 fe83 	bl	80063a0 <clock>
 800269a:	f8c7 0250 	str.w	r0, [r7, #592]	@ 0x250

            // getting the summary of all cells in the pack
            Cell_Summary_Voltage(&modPackInfo, &safetyFaults, &safetyWarnings,
 800269e:	f107 0409 	add.w	r4, r7, #9
 80026a2:	f107 020a 	add.w	r2, r7, #10
 80026a6:	f107 010b 	add.w	r1, r7, #11
 80026aa:	f107 0030 	add.w	r0, r7, #48	@ 0x30
 80026ae:	1dbb      	adds	r3, r7, #6
 80026b0:	9302      	str	r3, [sp, #8]
 80026b2:	1dfb      	adds	r3, r7, #7
 80026b4:	9301      	str	r3, [sp, #4]
 80026b6:	f107 0308 	add.w	r3, r7, #8
 80026ba:	9300      	str	r3, [sp, #0]
 80026bc:	4623      	mov	r3, r4
 80026be:	f000 f9e3 	bl	8002a88 <Cell_Summary_Voltage>
                                 &safetyStates, &low_volt_hysteresis,
                                 &high_volt_hysteresis,
                                 &cell_imbalance_hysteresis);

            Cell_Summary_Temperature(&modPackInfo, &safetyFaults,
 80026c2:	f107 020a 	add.w	r2, r7, #10
 80026c6:	f107 010b 	add.w	r1, r7, #11
 80026ca:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80026ce:	4618      	mov	r0, r3
 80026d0:	f000 fb1c 	bl	8002d0c <Cell_Summary_Temperature>
        GpioFixedToggle(&tp_led_heartbeat, LED_HEARTBEAT_DELAY_MS);
 80026d4:	e73d      	b.n	8002552 <main+0x1a2>
 80026d6:	bf00      	nop
 80026d8:	40011000 	.word	0x40011000
 80026dc:	40010c00 	.word	0x40010c00
 80026e0:	20000000 	.word	0x20000000
 80026e4:	20000006 	.word	0x20000006
 80026e8:	40590000 	.word	0x40590000

080026ec <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 80026ec:	b580      	push	{r7, lr}
 80026ee:	b09c      	sub	sp, #112	@ 0x70
 80026f0:	af00      	add	r7, sp, #0
    RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80026f2:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80026f6:	2238      	movs	r2, #56	@ 0x38
 80026f8:	2100      	movs	r1, #0
 80026fa:	4618      	mov	r0, r3
 80026fc:	f003 fe48 	bl	8006390 <memset>
    RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002700:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002704:	2200      	movs	r2, #0
 8002706:	601a      	str	r2, [r3, #0]
 8002708:	605a      	str	r2, [r3, #4]
 800270a:	609a      	str	r2, [r3, #8]
 800270c:	60da      	str	r2, [r3, #12]
 800270e:	611a      	str	r2, [r3, #16]
    RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002710:	1d3b      	adds	r3, r7, #4
 8002712:	2220      	movs	r2, #32
 8002714:	2100      	movs	r1, #0
 8002716:	4618      	mov	r0, r3
 8002718:	f003 fe3a 	bl	8006390 <memset>

    /** Initializes the RCC Oscillators according to the specified parameters
     * in the RCC_OscInitTypeDef structure.
     */
    RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800271c:	2301      	movs	r3, #1
 800271e:	63bb      	str	r3, [r7, #56]	@ 0x38
    RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002720:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002724:	643b      	str	r3, [r7, #64]	@ 0x40
    RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;
 8002726:	2304      	movs	r3, #4
 8002728:	647b      	str	r3, [r7, #68]	@ 0x44
    RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800272a:	2301      	movs	r3, #1
 800272c:	64fb      	str	r3, [r7, #76]	@ 0x4c
    RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;
 800272e:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002732:	63fb      	str	r3, [r7, #60]	@ 0x3c
    RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002734:	2302      	movs	r3, #2
 8002736:	65bb      	str	r3, [r7, #88]	@ 0x58
    RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002738:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800273c:	65fb      	str	r3, [r7, #92]	@ 0x5c
    RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 800273e:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 8002742:	663b      	str	r3, [r7, #96]	@ 0x60
    RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;
 8002744:	2302      	movs	r3, #2
 8002746:	667b      	str	r3, [r7, #100]	@ 0x64
    RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL8;
 8002748:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 800274c:	66bb      	str	r3, [r7, #104]	@ 0x68
    RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
 800274e:	2340      	movs	r3, #64	@ 0x40
 8002750:	66fb      	str	r3, [r7, #108]	@ 0x6c
    if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8002752:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8002756:	4618      	mov	r0, r3
 8002758:	f001 feea 	bl	8004530 <HAL_RCC_OscConfig>
 800275c:	4603      	mov	r3, r0
 800275e:	2b00      	cmp	r3, #0
 8002760:	d001      	beq.n	8002766 <SystemClock_Config+0x7a>
        Error_Handler();
 8002762:	f000 f89d 	bl	80028a0 <Error_Handler>
    }

    /** Initializes the CPU, AHB and APB buses clocks
     */
    RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 8002766:	230f      	movs	r3, #15
 8002768:	627b      	str	r3, [r7, #36]	@ 0x24
                                  RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
    RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800276a:	2302      	movs	r3, #2
 800276c:	62bb      	str	r3, [r7, #40]	@ 0x28
    RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800276e:	2300      	movs	r3, #0
 8002770:	62fb      	str	r3, [r7, #44]	@ 0x2c
    RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002772:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002776:	633b      	str	r3, [r7, #48]	@ 0x30
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002778:	2300      	movs	r3, #0
 800277a:	637b      	str	r3, [r7, #52]	@ 0x34

    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 800277c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002780:	2102      	movs	r1, #2
 8002782:	4618      	mov	r0, r3
 8002784:	f002 f9ea 	bl	8004b5c <HAL_RCC_ClockConfig>
 8002788:	4603      	mov	r3, r0
 800278a:	2b00      	cmp	r3, #0
 800278c:	d001      	beq.n	8002792 <SystemClock_Config+0xa6>
        Error_Handler();
 800278e:	f000 f887 	bl	80028a0 <Error_Handler>
    }
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8002792:	2302      	movs	r3, #2
 8002794:	607b      	str	r3, [r7, #4]
    PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 8002796:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800279a:	60fb      	str	r3, [r7, #12]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 800279c:	1d3b      	adds	r3, r7, #4
 800279e:	4618      	mov	r0, r3
 80027a0:	f002 fbd2 	bl	8004f48 <HAL_RCCEx_PeriphCLKConfig>
 80027a4:	4603      	mov	r3, r0
 80027a6:	2b00      	cmp	r3, #0
 80027a8:	d001      	beq.n	80027ae <SystemClock_Config+0xc2>
        Error_Handler();
 80027aa:	f000 f879 	bl	80028a0 <Error_Handler>
    }

    /** Configure the Systick interrupt time
     */
    __HAL_RCC_PLLI2S_ENABLE();
 80027ae:	4b03      	ldr	r3, [pc, #12]	@ (80027bc <SystemClock_Config+0xd0>)
 80027b0:	2201      	movs	r2, #1
 80027b2:	601a      	str	r2, [r3, #0]
}
 80027b4:	bf00      	nop
 80027b6:	3770      	adds	r7, #112	@ 0x70
 80027b8:	46bd      	mov	sp, r7
 80027ba:	bd80      	pop	{r7, pc}
 80027bc:	42420070 	.word	0x42420070

080027c0 <GpioTimePacket_Init>:

/* USER CODE BEGIN 4 */
// Initialize struct values
// Will initialize GPIO to LOW!
void GpioTimePacket_Init(GpioTimePacket *gtp, GPIO_TypeDef *port,
                         uint16_t pin) {
 80027c0:	b580      	push	{r7, lr}
 80027c2:	b084      	sub	sp, #16
 80027c4:	af00      	add	r7, sp, #0
 80027c6:	60f8      	str	r0, [r7, #12]
 80027c8:	60b9      	str	r1, [r7, #8]
 80027ca:	4613      	mov	r3, r2
 80027cc:	80fb      	strh	r3, [r7, #6]
    HAL_GPIO_WritePin(port, pin, GPIO_PIN_RESET);  // Set GPIO LOW
 80027ce:	88fb      	ldrh	r3, [r7, #6]
 80027d0:	2200      	movs	r2, #0
 80027d2:	4619      	mov	r1, r3
 80027d4:	68b8      	ldr	r0, [r7, #8]
 80027d6:	f001 fe79 	bl	80044cc <HAL_GPIO_WritePin>
    gtp->gpio_port = port;
 80027da:	68fb      	ldr	r3, [r7, #12]
 80027dc:	68ba      	ldr	r2, [r7, #8]
 80027de:	601a      	str	r2, [r3, #0]
    gtp->gpio_pin = pin;
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	88fa      	ldrh	r2, [r7, #6]
 80027e4:	809a      	strh	r2, [r3, #4]
    gtp->ts_prev = 0;  // Init to 0
 80027e6:	68fb      	ldr	r3, [r7, #12]
 80027e8:	2200      	movs	r2, #0
 80027ea:	609a      	str	r2, [r3, #8]
    gtp->ts_curr = 0;  // Init to 0
 80027ec:	68fb      	ldr	r3, [r7, #12]
 80027ee:	2200      	movs	r2, #0
 80027f0:	60da      	str	r2, [r3, #12]
}
 80027f2:	bf00      	nop
 80027f4:	3710      	adds	r7, #16
 80027f6:	46bd      	mov	sp, r7
 80027f8:	bd80      	pop	{r7, pc}

080027fa <GpioFixedToggle>:
// update_ms = update after X ms
void GpioFixedToggle(GpioTimePacket *gtp, uint16_t update_ms) {
 80027fa:	b580      	push	{r7, lr}
 80027fc:	b082      	sub	sp, #8
 80027fe:	af00      	add	r7, sp, #0
 8002800:	6078      	str	r0, [r7, #4]
 8002802:	460b      	mov	r3, r1
 8002804:	807b      	strh	r3, [r7, #2]
    gtp->ts_curr = HAL_GetTick();  // Record current timestamp
 8002806:	f000 fd41 	bl	800328c <HAL_GetTick>
 800280a:	4602      	mov	r2, r0
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	60da      	str	r2, [r3, #12]
    if (gtp->ts_curr - gtp->ts_prev > update_ms) {
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	68da      	ldr	r2, [r3, #12]
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	689b      	ldr	r3, [r3, #8]
 8002818:	1ad2      	subs	r2, r2, r3
 800281a:	887b      	ldrh	r3, [r7, #2]
 800281c:	429a      	cmp	r2, r3
 800281e:	d90b      	bls.n	8002838 <GpioFixedToggle+0x3e>
        HAL_GPIO_TogglePin(gtp->gpio_port, gtp->gpio_pin);  // Toggle GPIO
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	681a      	ldr	r2, [r3, #0]
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	889b      	ldrh	r3, [r3, #4]
 8002828:	4619      	mov	r1, r3
 800282a:	4610      	mov	r0, r2
 800282c:	f001 fe66 	bl	80044fc <HAL_GPIO_TogglePin>
        gtp->ts_prev = gtp->ts_curr;
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	68da      	ldr	r2, [r3, #12]
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	609a      	str	r2, [r3, #8]
    }
}
 8002838:	bf00      	nop
 800283a:	3708      	adds	r7, #8
 800283c:	46bd      	mov	sp, r7
 800283e:	bd80      	pop	{r7, pc}

08002840 <TimerPacket_Init>:
// Initialize struct values
// Will initialize GPIO to LOW!
void TimerPacket_Init(TimerPacket *tp, uint32_t delay) {
 8002840:	b480      	push	{r7}
 8002842:	b083      	sub	sp, #12
 8002844:	af00      	add	r7, sp, #0
 8002846:	6078      	str	r0, [r7, #4]
 8002848:	6039      	str	r1, [r7, #0]
    tp->ts_prev = 0;    // Init to 0
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	2200      	movs	r2, #0
 800284e:	601a      	str	r2, [r3, #0]
    tp->ts_curr = 0;    // Init to 0
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	2200      	movs	r2, #0
 8002854:	605a      	str	r2, [r3, #4]
    tp->delay = delay;  // Init to user value
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	683a      	ldr	r2, [r7, #0]
 800285a:	609a      	str	r2, [r3, #8]
}
 800285c:	bf00      	nop
 800285e:	370c      	adds	r7, #12
 8002860:	46bd      	mov	sp, r7
 8002862:	bc80      	pop	{r7}
 8002864:	4770      	bx	lr

08002866 <TimerPacket_FixedPulse>:
// update_ms = update after X ms
uint8_t TimerPacket_FixedPulse(TimerPacket *tp) {
 8002866:	b580      	push	{r7, lr}
 8002868:	b082      	sub	sp, #8
 800286a:	af00      	add	r7, sp, #0
 800286c:	6078      	str	r0, [r7, #4]
    tp->ts_curr = HAL_GetTick();  // Record current timestamp
 800286e:	f000 fd0d 	bl	800328c <HAL_GetTick>
 8002872:	4602      	mov	r2, r0
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	605a      	str	r2, [r3, #4]
    if (tp->ts_curr - tp->ts_prev > tp->delay) {
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	685a      	ldr	r2, [r3, #4]
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	1ad2      	subs	r2, r2, r3
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	689b      	ldr	r3, [r3, #8]
 8002886:	429a      	cmp	r2, r3
 8002888:	d905      	bls.n	8002896 <TimerPacket_FixedPulse+0x30>
        tp->ts_prev = tp->ts_curr;  // Update prev timestamp to current
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	685a      	ldr	r2, [r3, #4]
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	601a      	str	r2, [r3, #0]
        return 1;                   // Enact event (time interval is a go)
 8002892:	2301      	movs	r3, #1
 8002894:	e000      	b.n	8002898 <TimerPacket_FixedPulse+0x32>
    }
    return 0;  // Do not enact event
 8002896:	2300      	movs	r3, #0
}
 8002898:	4618      	mov	r0, r3
 800289a:	3708      	adds	r7, #8
 800289c:	46bd      	mov	sp, r7
 800289e:	bd80      	pop	{r7, pc}

080028a0 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 80028a0:	b480      	push	{r7}
 80028a2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80028a4:	b672      	cpsid	i
}
 80028a6:	bf00      	nop
    /* USER CODE BEGIN Error_Handler_Debug */
    /* User can add his own implementation to report the HAL error return state
     */
    __disable_irq();
    while (1) {
 80028a8:	bf00      	nop
 80028aa:	e7fd      	b.n	80028a8 <Error_Handler+0x8>

080028ac <Get_Actual_Temps>:
		{ 0x69, 0x08, 0x0F, 0xB9, 0x7F, 0xF9 }, { 0x69, 0x08, 0x0F, 0xA9, 0x7F,
				0xF9 }, { 0x69, 0x08, 0x0F, 0x99, 0x7F, 0xF9 }, { 0x69, 0x08,
				0x0F, 0x89, 0x7F, 0xF9 } };

void Get_Actual_Temps(uint8_t dev_idx, uint8_t tempindex, uint16_t *actual_temp,
		uint16_t data) {
 80028ac:	b590      	push	{r4, r7, lr}
 80028ae:	b083      	sub	sp, #12
 80028b0:	af00      	add	r7, sp, #0
 80028b2:	603a      	str	r2, [r7, #0]
 80028b4:	461a      	mov	r2, r3
 80028b6:	4603      	mov	r3, r0
 80028b8:	71fb      	strb	r3, [r7, #7]
 80028ba:	460b      	mov	r3, r1
 80028bc:	71bb      	strb	r3, [r7, #6]
 80028be:	4613      	mov	r3, r2
 80028c0:	80bb      	strh	r3, [r7, #4]
	static float scalar;
	static float steinhart;
	scalar = 30000.0f / (float) (data) - 1.0f;
 80028c2:	88bb      	ldrh	r3, [r7, #4]
 80028c4:	4618      	mov	r0, r3
 80028c6:	f7fe fa21 	bl	8000d0c <__aeabi_ui2f>
 80028ca:	4603      	mov	r3, r0
 80028cc:	4619      	mov	r1, r3
 80028ce:	483a      	ldr	r0, [pc, #232]	@ (80029b8 <Get_Actual_Temps+0x10c>)
 80028d0:	f7fe fb28 	bl	8000f24 <__aeabi_fdiv>
 80028d4:	4603      	mov	r3, r0
 80028d6:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 80028da:	4618      	mov	r0, r3
 80028dc:	f7fe f964 	bl	8000ba8 <__aeabi_fsub>
 80028e0:	4603      	mov	r3, r0
 80028e2:	461a      	mov	r2, r3
 80028e4:	4b35      	ldr	r3, [pc, #212]	@ (80029bc <Get_Actual_Temps+0x110>)
 80028e6:	601a      	str	r2, [r3, #0]
	scalar = (float) ntcSeriesResistance / scalar;
 80028e8:	4b34      	ldr	r3, [pc, #208]	@ (80029bc <Get_Actual_Temps+0x110>)
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	4619      	mov	r1, r3
 80028ee:	4834      	ldr	r0, [pc, #208]	@ (80029c0 <Get_Actual_Temps+0x114>)
 80028f0:	f7fe fb18 	bl	8000f24 <__aeabi_fdiv>
 80028f4:	4603      	mov	r3, r0
 80028f6:	461a      	mov	r2, r3
 80028f8:	4b30      	ldr	r3, [pc, #192]	@ (80029bc <Get_Actual_Temps+0x110>)
 80028fa:	601a      	str	r2, [r3, #0]
	steinhart = scalar / (float) ntcNominal;               // (R/Ro)
 80028fc:	4b2f      	ldr	r3, [pc, #188]	@ (80029bc <Get_Actual_Temps+0x110>)
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	492f      	ldr	r1, [pc, #188]	@ (80029c0 <Get_Actual_Temps+0x114>)
 8002902:	4618      	mov	r0, r3
 8002904:	f7fe fb0e 	bl	8000f24 <__aeabi_fdiv>
 8002908:	4603      	mov	r3, r0
 800290a:	461a      	mov	r2, r3
 800290c:	4b2d      	ldr	r3, [pc, #180]	@ (80029c4 <Get_Actual_Temps+0x118>)
 800290e:	601a      	str	r2, [r3, #0]
	steinhart = log(steinhart);                           // ln(R/Ro)
 8002910:	4b2c      	ldr	r3, [pc, #176]	@ (80029c4 <Get_Actual_Temps+0x118>)
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	4618      	mov	r0, r3
 8002916:	f7fd fdeb 	bl	80004f0 <__aeabi_f2d>
 800291a:	4602      	mov	r2, r0
 800291c:	460b      	mov	r3, r1
 800291e:	4610      	mov	r0, r2
 8002920:	4619      	mov	r1, r3
 8002922:	f003 fd8d 	bl	8006440 <log>
 8002926:	4602      	mov	r2, r0
 8002928:	460b      	mov	r3, r1
 800292a:	4610      	mov	r0, r2
 800292c:	4619      	mov	r1, r3
 800292e:	f7fe f8e7 	bl	8000b00 <__aeabi_d2f>
 8002932:	4603      	mov	r3, r0
 8002934:	4a23      	ldr	r2, [pc, #140]	@ (80029c4 <Get_Actual_Temps+0x118>)
 8002936:	6013      	str	r3, [r2, #0]
	steinhart /= (float) ntcBetaFactor;                    // 1/B * ln(R/Ro)
 8002938:	4b22      	ldr	r3, [pc, #136]	@ (80029c4 <Get_Actual_Temps+0x118>)
 800293a:	681b      	ldr	r3, [r3, #0]
 800293c:	4922      	ldr	r1, [pc, #136]	@ (80029c8 <Get_Actual_Temps+0x11c>)
 800293e:	4618      	mov	r0, r3
 8002940:	f7fe faf0 	bl	8000f24 <__aeabi_fdiv>
 8002944:	4603      	mov	r3, r0
 8002946:	461a      	mov	r2, r3
 8002948:	4b1e      	ldr	r3, [pc, #120]	@ (80029c4 <Get_Actual_Temps+0x118>)
 800294a:	601a      	str	r2, [r3, #0]
	steinhart += 1.0f / ((float) ntcNominalTemp + 273.15f);      // + (1/To)
 800294c:	4b1d      	ldr	r3, [pc, #116]	@ (80029c4 <Get_Actual_Temps+0x118>)
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	491e      	ldr	r1, [pc, #120]	@ (80029cc <Get_Actual_Temps+0x120>)
 8002952:	4618      	mov	r0, r3
 8002954:	f7fe f92a 	bl	8000bac <__addsf3>
 8002958:	4603      	mov	r3, r0
 800295a:	461a      	mov	r2, r3
 800295c:	4b19      	ldr	r3, [pc, #100]	@ (80029c4 <Get_Actual_Temps+0x118>)
 800295e:	601a      	str	r2, [r3, #0]
	steinhart = 1.0f / steinhart;                         // Invert
 8002960:	4b18      	ldr	r3, [pc, #96]	@ (80029c4 <Get_Actual_Temps+0x118>)
 8002962:	681b      	ldr	r3, [r3, #0]
 8002964:	4619      	mov	r1, r3
 8002966:	f04f 507e 	mov.w	r0, #1065353216	@ 0x3f800000
 800296a:	f7fe fadb 	bl	8000f24 <__aeabi_fdiv>
 800296e:	4603      	mov	r3, r0
 8002970:	461a      	mov	r2, r3
 8002972:	4b14      	ldr	r3, [pc, #80]	@ (80029c4 <Get_Actual_Temps+0x118>)
 8002974:	601a      	str	r2, [r3, #0]
	steinhart -= 273.15f;    // convert to degree
 8002976:	4b13      	ldr	r3, [pc, #76]	@ (80029c4 <Get_Actual_Temps+0x118>)
 8002978:	681b      	ldr	r3, [r3, #0]
 800297a:	4915      	ldr	r1, [pc, #84]	@ (80029d0 <Get_Actual_Temps+0x124>)
 800297c:	4618      	mov	r0, r3
 800297e:	f7fe f913 	bl	8000ba8 <__aeabi_fsub>
 8002982:	4603      	mov	r3, r0
 8002984:	461a      	mov	r2, r3
 8002986:	4b0f      	ldr	r3, [pc, #60]	@ (80029c4 <Get_Actual_Temps+0x118>)
 8002988:	601a      	str	r2, [r3, #0]

	actual_temp[dev_idx * NUM_THERM_PER_MOD + tempindex] = steinhart;
 800298a:	4b0e      	ldr	r3, [pc, #56]	@ (80029c4 <Get_Actual_Temps+0x118>)
 800298c:	6819      	ldr	r1, [r3, #0]
 800298e:	79fa      	ldrb	r2, [r7, #7]
 8002990:	4613      	mov	r3, r2
 8002992:	005b      	lsls	r3, r3, #1
 8002994:	4413      	add	r3, r2
 8002996:	009b      	lsls	r3, r3, #2
 8002998:	461a      	mov	r2, r3
 800299a:	79bb      	ldrb	r3, [r7, #6]
 800299c:	4413      	add	r3, r2
 800299e:	005b      	lsls	r3, r3, #1
 80029a0:	683a      	ldr	r2, [r7, #0]
 80029a2:	18d4      	adds	r4, r2, r3
 80029a4:	4608      	mov	r0, r1
 80029a6:	f7fe fb59 	bl	800105c <__aeabi_f2uiz>
 80029aa:	4603      	mov	r3, r0
 80029ac:	b29b      	uxth	r3, r3
 80029ae:	8023      	strh	r3, [r4, #0]

}
 80029b0:	bf00      	nop
 80029b2:	370c      	adds	r7, #12
 80029b4:	46bd      	mov	sp, r7
 80029b6:	bd90      	pop	{r4, r7, pc}
 80029b8:	46ea6000 	.word	0x46ea6000
 80029bc:	200001b0 	.word	0x200001b0
 80029c0:	461c4000 	.word	0x461c4000
 80029c4:	200001b4 	.word	0x200001b4
 80029c8:	4556b000 	.word	0x4556b000
 80029cc:	3b5bcf0f 	.word	0x3b5bcf0f
 80029d0:	43889333 	.word	0x43889333

080029d4 <Read_Volt>:

void Read_Volt(uint16_t *read_volt) {
 80029d4:	b580      	push	{r7, lr}
 80029d6:	b082      	sub	sp, #8
 80029d8:	af00      	add	r7, sp, #0
 80029da:	6078      	str	r0, [r7, #4]
	LTC_ADCV(MD_FILTERED, DCP_DISABLED, CELL_CH_ALL);
 80029dc:	2200      	movs	r2, #0
 80029de:	2100      	movs	r1, #0
 80029e0:	2003      	movs	r0, #3
 80029e2:	f7fe ff2b 	bl	800183c <LTC_ADCV>
	LTC_POLLADC();
 80029e6:	f7fe ffaf 	bl	8001948 <LTC_POLLADC>
	Wakeup_Idle();
 80029ea:	f7fe fccd 	bl	8001388 <Wakeup_Idle>
	Read_Cell_Volt((uint16_t*) read_volt);
 80029ee:	6878      	ldr	r0, [r7, #4]
 80029f0:	f7fe fd06 	bl	8001400 <Read_Cell_Volt>
}
 80029f4:	bf00      	nop
 80029f6:	3708      	adds	r7, #8
 80029f8:	46bd      	mov	sp, r7
 80029fa:	bd80      	pop	{r7, pc}

080029fc <Read_Temp>:

void Read_Temp(uint8_t tempindex, uint16_t *read_temp, uint16_t *read_auxreg) {
 80029fc:	b580      	push	{r7, lr}
 80029fe:	b086      	sub	sp, #24
 8002a00:	af00      	add	r7, sp, #0
 8002a02:	4603      	mov	r3, r0
 8002a04:	60b9      	str	r1, [r7, #8]
 8002a06:	607a      	str	r2, [r7, #4]
 8002a08:	73fb      	strb	r3, [r7, #15]
	LTC_WRCOMM(NUM_DEVICES, BMS_THERM[tempindex]);
 8002a0a:	7bfa      	ldrb	r2, [r7, #15]
 8002a0c:	4613      	mov	r3, r2
 8002a0e:	005b      	lsls	r3, r3, #1
 8002a10:	4413      	add	r3, r2
 8002a12:	005b      	lsls	r3, r3, #1
 8002a14:	4a1b      	ldr	r2, [pc, #108]	@ (8002a84 <Read_Temp+0x88>)
 8002a16:	4413      	add	r3, r2
 8002a18:	4619      	mov	r1, r3
 8002a1a:	2008      	movs	r0, #8
 8002a1c:	f7fe fda8 	bl	8001570 <LTC_WRCOMM>
	Wakeup_Idle();
 8002a20:	f7fe fcb2 	bl	8001388 <Wakeup_Idle>
	LTC_STCOMM(2);
 8002a24:	2002      	movs	r0, #2
 8002a26:	f7fe fe11 	bl	800164c <LTC_STCOMM>
	//end sending to mux to read temperatures

	Wakeup_Idle();
 8002a2a:	f7fe fcad 	bl	8001388 <Wakeup_Idle>
	LTC_ADAX(MD_FAST, 1); //doing GPIO all conversion
 8002a2e:	2101      	movs	r1, #1
 8002a30:	2001      	movs	r0, #1
 8002a32:	f7fe ff49 	bl	80018c8 <LTC_ADAX>
	LTC_POLLADC();
 8002a36:	f7fe ff87 	bl	8001948 <LTC_POLLADC>
	Wakeup_Idle();
 8002a3a:	f7fe fca5 	bl	8001388 <Wakeup_Idle>
	if (!Read_Cell_Temps((uint16_t*) read_auxreg)) // Set to read back all aux registers
 8002a3e:	6878      	ldr	r0, [r7, #4]
 8002a40:	f7fe fe44 	bl	80016cc <Read_Cell_Temps>
 8002a44:	4603      	mov	r3, r0
 8002a46:	2b00      	cmp	r3, #0
 8002a48:	d118      	bne.n	8002a7c <Read_Temp+0x80>
			{
		for (uint8_t dev_idx = 0; dev_idx < NUM_DEVICES; dev_idx++) {
 8002a4a:	2300      	movs	r3, #0
 8002a4c:	75fb      	strb	r3, [r7, #23]
 8002a4e:	e012      	b.n	8002a76 <Read_Temp+0x7a>
			//Wakeup_Idle();
			// Assuming data format is [cell voltage, cell voltage, ..., PEC, PEC]
			// PEC for each device is the last two bytes of its data segment
			uint16_t data = read_auxreg[dev_idx * NUM_AUX_GROUP];
 8002a50:	7dfa      	ldrb	r2, [r7, #23]
 8002a52:	4613      	mov	r3, r2
 8002a54:	005b      	lsls	r3, r3, #1
 8002a56:	4413      	add	r3, r2
 8002a58:	009b      	lsls	r3, r3, #2
 8002a5a:	461a      	mov	r2, r3
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	4413      	add	r3, r2
 8002a60:	881b      	ldrh	r3, [r3, #0]
 8002a62:	82bb      	strh	r3, [r7, #20]
			//read_temp[dev_idx * NUM_THERM_PER_MOD + tempindex] = data;
			Get_Actual_Temps(dev_idx, tempindex, (uint16_t*) read_temp, data); //+5 because vref is the last reg
 8002a64:	8abb      	ldrh	r3, [r7, #20]
 8002a66:	7bf9      	ldrb	r1, [r7, #15]
 8002a68:	7df8      	ldrb	r0, [r7, #23]
 8002a6a:	68ba      	ldr	r2, [r7, #8]
 8002a6c:	f7ff ff1e 	bl	80028ac <Get_Actual_Temps>
		for (uint8_t dev_idx = 0; dev_idx < NUM_DEVICES; dev_idx++) {
 8002a70:	7dfb      	ldrb	r3, [r7, #23]
 8002a72:	3301      	adds	r3, #1
 8002a74:	75fb      	strb	r3, [r7, #23]
 8002a76:	7dfb      	ldrb	r3, [r7, #23]
 8002a78:	2b07      	cmp	r3, #7
 8002a7a:	d9e9      	bls.n	8002a50 <Read_Temp+0x54>

		}
	}
}
 8002a7c:	bf00      	nop
 8002a7e:	3718      	adds	r7, #24
 8002a80:	46bd      	mov	sp, r7
 8002a82:	bd80      	pop	{r7, pc}
 8002a84:	2000000c 	.word	0x2000000c

08002a88 <Cell_Summary_Voltage>:
#define CELL_VOLT_IMBALANCE_FAULT   2000 //0.1 V
#define CELL_VOLT_IMBALANCE_WARNING	1000 //0.05 V

void Cell_Summary_Voltage(struct batteryModule *batt, uint8_t *fault,
		uint8_t *warnings, uint8_t *states, uint8_t *low_volt_hysteresis,
		uint8_t *high_volt_hysteresis, uint8_t *cell_imbalance_hysteresis) {
 8002a88:	b580      	push	{r7, lr}
 8002a8a:	b086      	sub	sp, #24
 8002a8c:	af00      	add	r7, sp, #0
 8002a8e:	60f8      	str	r0, [r7, #12]
 8002a90:	60b9      	str	r1, [r7, #8]
 8002a92:	607a      	str	r2, [r7, #4]
 8002a94:	603b      	str	r3, [r7, #0]
	batt->cell_volt_highest = batt->cell_volt[0];
 8002a96:	68fb      	ldr	r3, [r7, #12]
 8002a98:	881a      	ldrh	r2, [r3, #0]
 8002a9a:	68fb      	ldr	r3, [r7, #12]
 8002a9c:	f8a3 2192 	strh.w	r2, [r3, #402]	@ 0x192
	batt->cell_volt_lowest = batt->cell_volt[0];
 8002aa0:	68fb      	ldr	r3, [r7, #12]
 8002aa2:	881a      	ldrh	r2, [r3, #0]
 8002aa4:	68fb      	ldr	r3, [r7, #12]
 8002aa6:	f8a3 2190 	strh.w	r2, [r3, #400]	@ 0x190

	for (int i = 1; i < NUM_CELLS; i++) {
 8002aaa:	2301      	movs	r3, #1
 8002aac:	617b      	str	r3, [r7, #20]
 8002aae:	e11a      	b.n	8002ce6 <Cell_Summary_Voltage+0x25e>

		if (batt->cell_volt[i] > batt->cell_volt_highest) {
 8002ab0:	68fb      	ldr	r3, [r7, #12]
 8002ab2:	697a      	ldr	r2, [r7, #20]
 8002ab4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8002ab8:	68fb      	ldr	r3, [r7, #12]
 8002aba:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 8002abe:	429a      	cmp	r2, r3
 8002ac0:	d93a      	bls.n	8002b38 <Cell_Summary_Voltage+0xb0>
			batt->cell_volt_highest = batt->cell_volt[i];
 8002ac2:	68fb      	ldr	r3, [r7, #12]
 8002ac4:	697a      	ldr	r2, [r7, #20]
 8002ac6:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8002aca:	68fb      	ldr	r3, [r7, #12]
 8002acc:	f8a3 2192 	strh.w	r2, [r3, #402]	@ 0x192

			if (batt->cell_volt_highest >= CELL_HIGH_VOLT_WARNING) {
 8002ad0:	68fb      	ldr	r3, [r7, #12]
 8002ad2:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 8002ad6:	f649 423f 	movw	r2, #39999	@ 0x9c3f
 8002ada:	4293      	cmp	r3, r2
 8002adc:	d906      	bls.n	8002aec <Cell_Summary_Voltage+0x64>
					*warnings |= 0b00010000;
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	781b      	ldrb	r3, [r3, #0]
 8002ae2:	f043 0310 	orr.w	r3, r3, #16
 8002ae6:	b2da      	uxtb	r2, r3
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	701a      	strb	r2, [r3, #0]
				}

			//high cell volt fault
				if ((batt->cell_volt_highest >= CELL_HIGH_VOLT_FAULT)
 8002aec:	68fb      	ldr	r3, [r7, #12]
 8002aee:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 8002af2:	f24a 420f 	movw	r2, #41999	@ 0xa40f
 8002af6:	4293      	cmp	r3, r2
 8002af8:	d910      	bls.n	8002b1c <Cell_Summary_Voltage+0x94>
						&& ((*high_volt_hysteresis) > 0)) {
 8002afa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002afc:	781b      	ldrb	r3, [r3, #0]
 8002afe:	2b00      	cmp	r3, #0
 8002b00:	d00c      	beq.n	8002b1c <Cell_Summary_Voltage+0x94>
					*fault |= 0b00010000;
 8002b02:	68bb      	ldr	r3, [r7, #8]
 8002b04:	781b      	ldrb	r3, [r3, #0]
 8002b06:	f043 0310 	orr.w	r3, r3, #16
 8002b0a:	b2da      	uxtb	r2, r3
 8002b0c:	68bb      	ldr	r3, [r7, #8]
 8002b0e:	701a      	strb	r2, [r3, #0]
					HAL_GPIO_WritePin(MCU_SHUTDOWN_SIGNAL_GPIO_Port, MCU_SHUTDOWN_SIGNAL_Pin, GPIO_PIN_SET);
 8002b10:	2201      	movs	r2, #1
 8002b12:	2102      	movs	r1, #2
 8002b14:	4878      	ldr	r0, [pc, #480]	@ (8002cf8 <Cell_Summary_Voltage+0x270>)
 8002b16:	f001 fcd9 	bl	80044cc <HAL_GPIO_WritePin>
 8002b1a:	e00d      	b.n	8002b38 <Cell_Summary_Voltage+0xb0>
				} else if (batt->cell_volt_highest >= CELL_HIGH_VOLT_FAULT) {
 8002b1c:	68fb      	ldr	r3, [r7, #12]
 8002b1e:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 8002b22:	f24a 420f 	movw	r2, #41999	@ 0xa40f
 8002b26:	4293      	cmp	r3, r2
 8002b28:	d903      	bls.n	8002b32 <Cell_Summary_Voltage+0xaa>
					*high_volt_hysteresis = 1;
 8002b2a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002b2c:	2201      	movs	r2, #1
 8002b2e:	701a      	strb	r2, [r3, #0]
 8002b30:	e002      	b.n	8002b38 <Cell_Summary_Voltage+0xb0>
				} else {
					*high_volt_hysteresis = 0;
 8002b32:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002b34:	2200      	movs	r2, #0
 8002b36:	701a      	strb	r2, [r3, #0]
				}
				//end of high cell volt fault
		}

		if (batt->cell_volt[i] < batt->cell_volt_lowest) {
 8002b38:	68fb      	ldr	r3, [r7, #12]
 8002b3a:	697a      	ldr	r2, [r7, #20]
 8002b3c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8002b40:	68fb      	ldr	r3, [r7, #12]
 8002b42:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 8002b46:	429a      	cmp	r2, r3
 8002b48:	d23a      	bcs.n	8002bc0 <Cell_Summary_Voltage+0x138>
			batt->cell_volt_lowest = batt->cell_volt[i];
 8002b4a:	68fb      	ldr	r3, [r7, #12]
 8002b4c:	697a      	ldr	r2, [r7, #20]
 8002b4e:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	f8a3 2190 	strh.w	r2, [r3, #400]	@ 0x190

			if (batt->cell_volt_lowest <= CELL_LOW_VOLT_WARNING) {
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 8002b5e:	f646 1278 	movw	r2, #27000	@ 0x6978
 8002b62:	4293      	cmp	r3, r2
 8002b64:	d806      	bhi.n	8002b74 <Cell_Summary_Voltage+0xec>
								*warnings |= 0b00100000;
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	781b      	ldrb	r3, [r3, #0]
 8002b6a:	f043 0320 	orr.w	r3, r3, #32
 8002b6e:	b2da      	uxtb	r2, r3
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	701a      	strb	r2, [r3, #0]
							}

			//low cell volt fault
			if ((batt->cell_volt_lowest <= CELL_LOW_VOLT_FAULT)
 8002b74:	68fb      	ldr	r3, [r7, #12]
 8002b76:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 8002b7a:	f246 12a8 	movw	r2, #25000	@ 0x61a8
 8002b7e:	4293      	cmp	r3, r2
 8002b80:	d810      	bhi.n	8002ba4 <Cell_Summary_Voltage+0x11c>
					&& ((*low_volt_hysteresis) > 0)) {
 8002b82:	6a3b      	ldr	r3, [r7, #32]
 8002b84:	781b      	ldrb	r3, [r3, #0]
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d00c      	beq.n	8002ba4 <Cell_Summary_Voltage+0x11c>
				*fault |= 0b00100000;
 8002b8a:	68bb      	ldr	r3, [r7, #8]
 8002b8c:	781b      	ldrb	r3, [r3, #0]
 8002b8e:	f043 0320 	orr.w	r3, r3, #32
 8002b92:	b2da      	uxtb	r2, r3
 8002b94:	68bb      	ldr	r3, [r7, #8]
 8002b96:	701a      	strb	r2, [r3, #0]
				HAL_GPIO_WritePin(MCU_SHUTDOWN_SIGNAL_GPIO_Port, MCU_SHUTDOWN_SIGNAL_Pin, GPIO_PIN_SET);
 8002b98:	2201      	movs	r2, #1
 8002b9a:	2102      	movs	r1, #2
 8002b9c:	4856      	ldr	r0, [pc, #344]	@ (8002cf8 <Cell_Summary_Voltage+0x270>)
 8002b9e:	f001 fc95 	bl	80044cc <HAL_GPIO_WritePin>
 8002ba2:	e00d      	b.n	8002bc0 <Cell_Summary_Voltage+0x138>
			} else if (batt->cell_volt_lowest <= CELL_LOW_VOLT_FAULT) {
 8002ba4:	68fb      	ldr	r3, [r7, #12]
 8002ba6:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 8002baa:	f246 12a8 	movw	r2, #25000	@ 0x61a8
 8002bae:	4293      	cmp	r3, r2
 8002bb0:	d803      	bhi.n	8002bba <Cell_Summary_Voltage+0x132>
				*low_volt_hysteresis = 1;
 8002bb2:	6a3b      	ldr	r3, [r7, #32]
 8002bb4:	2201      	movs	r2, #1
 8002bb6:	701a      	strb	r2, [r3, #0]
 8002bb8:	e002      	b.n	8002bc0 <Cell_Summary_Voltage+0x138>
			} else {
				*low_volt_hysteresis = 0;
 8002bba:	6a3b      	ldr	r3, [r7, #32]
 8002bbc:	2200      	movs	r2, #0
 8002bbe:	701a      	strb	r2, [r3, #0]
			//end of low cell volt fault

		}

		//cell volt imbalance fault
		if (((batt->cell_volt_highest - batt->cell_volt_lowest)
 8002bc0:	68fb      	ldr	r3, [r7, #12]
 8002bc2:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 8002bc6:	461a      	mov	r2, r3
 8002bc8:	68fb      	ldr	r3, [r7, #12]
 8002bca:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 8002bce:	1ad3      	subs	r3, r2, r3
 8002bd0:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8002bd4:	db10      	blt.n	8002bf8 <Cell_Summary_Voltage+0x170>
				>= CELL_VOLT_IMBALANCE_FAULT) && ((*cell_imbalance_hysteresis) > 0)) {
 8002bd6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002bd8:	781b      	ldrb	r3, [r3, #0]
 8002bda:	2b00      	cmp	r3, #0
 8002bdc:	d00c      	beq.n	8002bf8 <Cell_Summary_Voltage+0x170>
				*fault |= 0b00000100;
 8002bde:	68bb      	ldr	r3, [r7, #8]
 8002be0:	781b      	ldrb	r3, [r3, #0]
 8002be2:	f043 0304 	orr.w	r3, r3, #4
 8002be6:	b2da      	uxtb	r2, r3
 8002be8:	68bb      	ldr	r3, [r7, #8]
 8002bea:	701a      	strb	r2, [r3, #0]
				HAL_GPIO_WritePin(MCU_SHUTDOWN_SIGNAL_GPIO_Port, MCU_SHUTDOWN_SIGNAL_Pin, GPIO_PIN_SET);
 8002bec:	2201      	movs	r2, #1
 8002bee:	2102      	movs	r1, #2
 8002bf0:	4841      	ldr	r0, [pc, #260]	@ (8002cf8 <Cell_Summary_Voltage+0x270>)
 8002bf2:	f001 fc6b 	bl	80044cc <HAL_GPIO_WritePin>
 8002bf6:	e011      	b.n	8002c1c <Cell_Summary_Voltage+0x194>
			} else if ((batt->cell_volt_highest - batt->cell_volt_lowest)
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 8002bfe:	461a      	mov	r2, r3
 8002c00:	68fb      	ldr	r3, [r7, #12]
 8002c02:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 8002c06:	1ad3      	subs	r3, r2, r3
 8002c08:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8002c0c:	db03      	blt.n	8002c16 <Cell_Summary_Voltage+0x18e>
					>= CELL_VOLT_IMBALANCE_FAULT) {
				*cell_imbalance_hysteresis = 1;
 8002c0e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002c10:	2201      	movs	r2, #1
 8002c12:	701a      	strb	r2, [r3, #0]
 8002c14:	e002      	b.n	8002c1c <Cell_Summary_Voltage+0x194>
			} else {
				*cell_imbalance_hysteresis = 0;
 8002c16:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002c18:	2200      	movs	r2, #0
 8002c1a:	701a      	strb	r2, [r3, #0]
			}
			//end of cell volt imbalance fault

			if ((batt->cell_volt_highest - batt->cell_volt_lowest)
 8002c1c:	68fb      	ldr	r3, [r7, #12]
 8002c1e:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 8002c22:	461a      	mov	r2, r3
 8002c24:	68fb      	ldr	r3, [r7, #12]
 8002c26:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 8002c2a:	1ad3      	subs	r3, r2, r3
 8002c2c:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002c30:	db06      	blt.n	8002c40 <Cell_Summary_Voltage+0x1b8>
					>= CELL_VOLT_IMBALANCE_WARNING) {
				*warnings |= 0b00000010;
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	781b      	ldrb	r3, [r3, #0]
 8002c36:	f043 0302 	orr.w	r3, r3, #2
 8002c3a:	b2da      	uxtb	r2, r3
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	701a      	strb	r2, [r3, #0]
//		}
//
//		if (sum_voltage - batt->pack_voltage ){

//		}
		if (batt->pack_voltage >= PACK_HIGH_VOLT_WARNING) {
 8002c40:	68fb      	ldr	r3, [r7, #12]
 8002c42:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 8002c46:	4a2d      	ldr	r2, [pc, #180]	@ (8002cfc <Cell_Summary_Voltage+0x274>)
 8002c48:	4293      	cmp	r3, r2
 8002c4a:	d906      	bls.n	8002c5a <Cell_Summary_Voltage+0x1d2>
			*warnings |= 0b10000000;
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	781b      	ldrb	r3, [r3, #0]
 8002c50:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8002c54:	b2da      	uxtb	r2, r3
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	701a      	strb	r2, [r3, #0]
		}
		if (batt->pack_voltage <= PACK_LOW_VOLT_WARNING) {
 8002c5a:	68fb      	ldr	r3, [r7, #12]
 8002c5c:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 8002c60:	4a27      	ldr	r2, [pc, #156]	@ (8002d00 <Cell_Summary_Voltage+0x278>)
 8002c62:	4293      	cmp	r3, r2
 8002c64:	d806      	bhi.n	8002c74 <Cell_Summary_Voltage+0x1ec>
			*warnings |= 0b01000000;
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	781b      	ldrb	r3, [r3, #0]
 8002c6a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002c6e:	b2da      	uxtb	r2, r3
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	701a      	strb	r2, [r3, #0]
		}
		if (batt->pack_voltage >= PACK_HIGH_VOLT_FAULT) {
 8002c74:	68fb      	ldr	r3, [r7, #12]
 8002c76:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 8002c7a:	4a22      	ldr	r2, [pc, #136]	@ (8002d04 <Cell_Summary_Voltage+0x27c>)
 8002c7c:	4293      	cmp	r3, r2
 8002c7e:	d90b      	bls.n	8002c98 <Cell_Summary_Voltage+0x210>
			*fault |= 0b10000000;
 8002c80:	68bb      	ldr	r3, [r7, #8]
 8002c82:	781b      	ldrb	r3, [r3, #0]
 8002c84:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8002c88:	b2da      	uxtb	r2, r3
 8002c8a:	68bb      	ldr	r3, [r7, #8]
 8002c8c:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(MCU_SHUTDOWN_SIGNAL_GPIO_Port, MCU_SHUTDOWN_SIGNAL_Pin, GPIO_PIN_SET);
 8002c8e:	2201      	movs	r2, #1
 8002c90:	2102      	movs	r1, #2
 8002c92:	4819      	ldr	r0, [pc, #100]	@ (8002cf8 <Cell_Summary_Voltage+0x270>)
 8002c94:	f001 fc1a 	bl	80044cc <HAL_GPIO_WritePin>
		}
		if (batt->pack_voltage <= PACK_LOW_VOLT_FAULT) {
 8002c98:	68fb      	ldr	r3, [r7, #12]
 8002c9a:	f8d3 3198 	ldr.w	r3, [r3, #408]	@ 0x198
 8002c9e:	4a1a      	ldr	r2, [pc, #104]	@ (8002d08 <Cell_Summary_Voltage+0x280>)
 8002ca0:	4293      	cmp	r3, r2
 8002ca2:	d80b      	bhi.n	8002cbc <Cell_Summary_Voltage+0x234>
			*fault |= 0b01000000;
 8002ca4:	68bb      	ldr	r3, [r7, #8]
 8002ca6:	781b      	ldrb	r3, [r3, #0]
 8002ca8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002cac:	b2da      	uxtb	r2, r3
 8002cae:	68bb      	ldr	r3, [r7, #8]
 8002cb0:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(MCU_SHUTDOWN_SIGNAL_GPIO_Port, MCU_SHUTDOWN_SIGNAL_Pin, GPIO_PIN_SET);
 8002cb2:	2201      	movs	r2, #1
 8002cb4:	2102      	movs	r1, #2
 8002cb6:	4810      	ldr	r0, [pc, #64]	@ (8002cf8 <Cell_Summary_Voltage+0x270>)
 8002cb8:	f001 fc08 	bl	80044cc <HAL_GPIO_WritePin>
		}


		if ((batt->cell_volt_highest - batt->cell_volt_lowest)
 8002cbc:	68fb      	ldr	r3, [r7, #12]
 8002cbe:	f8b3 3192 	ldrh.w	r3, [r3, #402]	@ 0x192
 8002cc2:	461a      	mov	r2, r3
 8002cc4:	68fb      	ldr	r3, [r7, #12]
 8002cc6:	f8b3 3190 	ldrh.w	r3, [r3, #400]	@ 0x190
 8002cca:	1ad3      	subs	r3, r2, r3
 8002ccc:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002cd0:	db06      	blt.n	8002ce0 <Cell_Summary_Voltage+0x258>
				>= CELL_VOLT_IMBALANCE_WARNING) {
			*warnings |= 0b00000010;
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	781b      	ldrb	r3, [r3, #0]
 8002cd6:	f043 0302 	orr.w	r3, r3, #2
 8002cda:	b2da      	uxtb	r2, r3
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	701a      	strb	r2, [r3, #0]
	for (int i = 1; i < NUM_CELLS; i++) {
 8002ce0:	697b      	ldr	r3, [r7, #20]
 8002ce2:	3301      	adds	r3, #1
 8002ce4:	617b      	str	r3, [r7, #20]
 8002ce6:	697b      	ldr	r3, [r7, #20]
 8002ce8:	2b5f      	cmp	r3, #95	@ 0x5f
 8002cea:	f77f aee1 	ble.w	8002ab0 <Cell_Summary_Voltage+0x28>
		}
		if (BALANCE) {
			*states |= 0b10000000;
		}
	}
}
 8002cee:	bf00      	nop
 8002cf0:	bf00      	nop
 8002cf2:	3718      	adds	r7, #24
 8002cf4:	46bd      	mov	sp, r7
 8002cf6:	bd80      	pop	{r7, pc}
 8002cf8:	40010c00 	.word	0x40010c00
 8002cfc:	003e5507 	.word	0x003e5507
 8002d00:	002dc6c0 	.word	0x002dc6c0
 8002d04:	003e8f9f 	.word	0x003e8f9f
 8002d08:	002bf200 	.word	0x002bf200

08002d0c <Cell_Summary_Temperature>:

void Cell_Summary_Temperature(struct batteryModule *batt, uint8_t *fault,
		uint8_t *warnings) {
 8002d0c:	b580      	push	{r7, lr}
 8002d0e:	b086      	sub	sp, #24
 8002d10:	af00      	add	r7, sp, #0
 8002d12:	60f8      	str	r0, [r7, #12]
 8002d14:	60b9      	str	r1, [r7, #8]
 8002d16:	607a      	str	r2, [r7, #4]
	batt->cell_temp_highest = batt->cell_temp[0];
 8002d18:	68fb      	ldr	r3, [r7, #12]
 8002d1a:	f8b3 20c0 	ldrh.w	r2, [r3, #192]	@ 0xc0
 8002d1e:	68fb      	ldr	r3, [r7, #12]
 8002d20:	f8a3 2196 	strh.w	r2, [r3, #406]	@ 0x196
	batt->cell_temp_lowest = batt->cell_temp[0];
 8002d24:	68fb      	ldr	r3, [r7, #12]
 8002d26:	f8b3 20c0 	ldrh.w	r2, [r3, #192]	@ 0xc0
 8002d2a:	68fb      	ldr	r3, [r7, #12]
 8002d2c:	f8a3 2194 	strh.w	r2, [r3, #404]	@ 0x194

	for (int i = 0; i < NUM_THERM_TOTAL; i++) {
 8002d30:	2300      	movs	r3, #0
 8002d32:	617b      	str	r3, [r7, #20]
 8002d34:	e04f      	b.n	8002dd6 <Cell_Summary_Temperature+0xca>

		if (batt->cell_temp_highest < batt->cell_temp[i]) {
 8002d36:	68fb      	ldr	r3, [r7, #12]
 8002d38:	f8b3 2196 	ldrh.w	r2, [r3, #406]	@ 0x196
 8002d3c:	68fb      	ldr	r3, [r7, #12]
 8002d3e:	6979      	ldr	r1, [r7, #20]
 8002d40:	3160      	adds	r1, #96	@ 0x60
 8002d42:	f833 3011 	ldrh.w	r3, [r3, r1, lsl #1]
 8002d46:	429a      	cmp	r2, r3
 8002d48:	d224      	bcs.n	8002d94 <Cell_Summary_Temperature+0x88>
			batt->cell_temp_highest = batt->cell_temp[i];
 8002d4a:	68fb      	ldr	r3, [r7, #12]
 8002d4c:	697a      	ldr	r2, [r7, #20]
 8002d4e:	3260      	adds	r2, #96	@ 0x60
 8002d50:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	f8a3 2196 	strh.w	r2, [r3, #406]	@ 0x196
			//highest cell temp warning
			if (batt->cell_temp_highest >= CELL_HIGH_TEMP_WARNING) {
 8002d5a:	68fb      	ldr	r3, [r7, #12]
 8002d5c:	f8b3 3196 	ldrh.w	r3, [r3, #406]	@ 0x196
 8002d60:	2b36      	cmp	r3, #54	@ 0x36
 8002d62:	d906      	bls.n	8002d72 <Cell_Summary_Temperature+0x66>
					*warnings |= 0b00001000;
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	781b      	ldrb	r3, [r3, #0]
 8002d68:	f043 0308 	orr.w	r3, r3, #8
 8002d6c:	b2da      	uxtb	r2, r3
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	701a      	strb	r2, [r3, #0]
				}
			//highest cell temp fault
			if (batt->cell_temp_highest >= CELL_HIGH_TEMP_FAULT) {
 8002d72:	68fb      	ldr	r3, [r7, #12]
 8002d74:	f8b3 3196 	ldrh.w	r3, [r3, #406]	@ 0x196
 8002d78:	2b3b      	cmp	r3, #59	@ 0x3b
 8002d7a:	d90b      	bls.n	8002d94 <Cell_Summary_Temperature+0x88>
					*fault |= 0b00001000;
 8002d7c:	68bb      	ldr	r3, [r7, #8]
 8002d7e:	781b      	ldrb	r3, [r3, #0]
 8002d80:	f043 0308 	orr.w	r3, r3, #8
 8002d84:	b2da      	uxtb	r2, r3
 8002d86:	68bb      	ldr	r3, [r7, #8]
 8002d88:	701a      	strb	r2, [r3, #0]
					HAL_GPIO_WritePin(MCU_SHUTDOWN_SIGNAL_GPIO_Port, MCU_SHUTDOWN_SIGNAL_Pin, GPIO_PIN_SET);
 8002d8a:	2201      	movs	r2, #1
 8002d8c:	2102      	movs	r1, #2
 8002d8e:	4816      	ldr	r0, [pc, #88]	@ (8002de8 <Cell_Summary_Temperature+0xdc>)
 8002d90:	f001 fb9c 	bl	80044cc <HAL_GPIO_WritePin>
				}
		}

		if (batt->cell_temp_lowest > batt->cell_temp[i]) {
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	f8b3 2194 	ldrh.w	r2, [r3, #404]	@ 0x194
 8002d9a:	68fb      	ldr	r3, [r7, #12]
 8002d9c:	6979      	ldr	r1, [r7, #20]
 8002d9e:	3160      	adds	r1, #96	@ 0x60
 8002da0:	f833 3011 	ldrh.w	r3, [r3, r1, lsl #1]
 8002da4:	429a      	cmp	r2, r3
 8002da6:	d913      	bls.n	8002dd0 <Cell_Summary_Temperature+0xc4>
			batt->cell_temp_lowest = batt->cell_temp[i];
 8002da8:	68fb      	ldr	r3, [r7, #12]
 8002daa:	697a      	ldr	r2, [r7, #20]
 8002dac:	3260      	adds	r2, #96	@ 0x60
 8002dae:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8002db2:	68fb      	ldr	r3, [r7, #12]
 8002db4:	f8a3 2194 	strh.w	r2, [r3, #404]	@ 0x194

			if (batt->cell_temp_lowest <= CELL_LOW_TEMP_WARNING) {
 8002db8:	68fb      	ldr	r3, [r7, #12]
 8002dba:	f8b3 3194 	ldrh.w	r3, [r3, #404]	@ 0x194
 8002dbe:	2b00      	cmp	r3, #0
 8002dc0:	d106      	bne.n	8002dd0 <Cell_Summary_Temperature+0xc4>
					*warnings |= 0b00000100;
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	781b      	ldrb	r3, [r3, #0]
 8002dc6:	f043 0304 	orr.w	r3, r3, #4
 8002dca:	b2da      	uxtb	r2, r3
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < NUM_THERM_TOTAL; i++) {
 8002dd0:	697b      	ldr	r3, [r7, #20]
 8002dd2:	3301      	adds	r3, #1
 8002dd4:	617b      	str	r3, [r7, #20]
 8002dd6:	697b      	ldr	r3, [r7, #20]
 8002dd8:	2b5f      	cmp	r3, #95	@ 0x5f
 8002dda:	ddac      	ble.n	8002d36 <Cell_Summary_Temperature+0x2a>
				}
		}
	}
}
 8002ddc:	bf00      	nop
 8002dde:	bf00      	nop
 8002de0:	3718      	adds	r7, #24
 8002de2:	46bd      	mov	sp, r7
 8002de4:	bd80      	pop	{r7, pc}
 8002de6:	bf00      	nop
 8002de8:	40010c00 	.word	0x40010c00

08002dec <MX_SPI1_Init>:

SPI_HandleTypeDef hspi1;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8002dec:	b580      	push	{r7, lr}
 8002dee:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 8002df0:	4b17      	ldr	r3, [pc, #92]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002df2:	4a18      	ldr	r2, [pc, #96]	@ (8002e54 <MX_SPI1_Init+0x68>)
 8002df4:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002df6:	4b16      	ldr	r3, [pc, #88]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002df8:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002dfc:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8002dfe:	4b14      	ldr	r3, [pc, #80]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e00:	2200      	movs	r2, #0
 8002e02:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8002e04:	4b12      	ldr	r3, [pc, #72]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e06:	2200      	movs	r2, #0
 8002e08:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002e0a:	4b11      	ldr	r3, [pc, #68]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e0c:	2200      	movs	r2, #0
 8002e0e:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002e10:	4b0f      	ldr	r3, [pc, #60]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e12:	2200      	movs	r2, #0
 8002e14:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002e16:	4b0e      	ldr	r3, [pc, #56]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e18:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002e1c:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
 8002e1e:	4b0c      	ldr	r3, [pc, #48]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e20:	2228      	movs	r2, #40	@ 0x28
 8002e22:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002e24:	4b0a      	ldr	r3, [pc, #40]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e26:	2200      	movs	r2, #0
 8002e28:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8002e2a:	4b09      	ldr	r3, [pc, #36]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e2c:	2200      	movs	r2, #0
 8002e2e:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002e30:	4b07      	ldr	r3, [pc, #28]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e32:	2200      	movs	r2, #0
 8002e34:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 8002e36:	4b06      	ldr	r3, [pc, #24]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e38:	220a      	movs	r2, #10
 8002e3a:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002e3c:	4804      	ldr	r0, [pc, #16]	@ (8002e50 <MX_SPI1_Init+0x64>)
 8002e3e:	f002 fb07 	bl	8005450 <HAL_SPI_Init>
 8002e42:	4603      	mov	r3, r0
 8002e44:	2b00      	cmp	r3, #0
 8002e46:	d001      	beq.n	8002e4c <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8002e48:	f7ff fd2a 	bl	80028a0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002e4c:	bf00      	nop
 8002e4e:	bd80      	pop	{r7, pc}
 8002e50:	200001b8 	.word	0x200001b8
 8002e54:	40013000 	.word	0x40013000

08002e58 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8002e58:	b580      	push	{r7, lr}
 8002e5a:	b088      	sub	sp, #32
 8002e5c:	af00      	add	r7, sp, #0
 8002e5e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002e60:	f107 0310 	add.w	r3, r7, #16
 8002e64:	2200      	movs	r2, #0
 8002e66:	601a      	str	r2, [r3, #0]
 8002e68:	605a      	str	r2, [r3, #4]
 8002e6a:	609a      	str	r2, [r3, #8]
 8002e6c:	60da      	str	r2, [r3, #12]
  if(spiHandle->Instance==SPI1)
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	4a1b      	ldr	r2, [pc, #108]	@ (8002ee0 <HAL_SPI_MspInit+0x88>)
 8002e74:	4293      	cmp	r3, r2
 8002e76:	d12f      	bne.n	8002ed8 <HAL_SPI_MspInit+0x80>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002e78:	4b1a      	ldr	r3, [pc, #104]	@ (8002ee4 <HAL_SPI_MspInit+0x8c>)
 8002e7a:	699b      	ldr	r3, [r3, #24]
 8002e7c:	4a19      	ldr	r2, [pc, #100]	@ (8002ee4 <HAL_SPI_MspInit+0x8c>)
 8002e7e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002e82:	6193      	str	r3, [r2, #24]
 8002e84:	4b17      	ldr	r3, [pc, #92]	@ (8002ee4 <HAL_SPI_MspInit+0x8c>)
 8002e86:	699b      	ldr	r3, [r3, #24]
 8002e88:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002e8c:	60fb      	str	r3, [r7, #12]
 8002e8e:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002e90:	4b14      	ldr	r3, [pc, #80]	@ (8002ee4 <HAL_SPI_MspInit+0x8c>)
 8002e92:	699b      	ldr	r3, [r3, #24]
 8002e94:	4a13      	ldr	r2, [pc, #76]	@ (8002ee4 <HAL_SPI_MspInit+0x8c>)
 8002e96:	f043 0304 	orr.w	r3, r3, #4
 8002e9a:	6193      	str	r3, [r2, #24]
 8002e9c:	4b11      	ldr	r3, [pc, #68]	@ (8002ee4 <HAL_SPI_MspInit+0x8c>)
 8002e9e:	699b      	ldr	r3, [r3, #24]
 8002ea0:	f003 0304 	and.w	r3, r3, #4
 8002ea4:	60bb      	str	r3, [r7, #8]
 8002ea6:	68bb      	ldr	r3, [r7, #8]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 8002ea8:	23a0      	movs	r3, #160	@ 0xa0
 8002eaa:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002eac:	2302      	movs	r3, #2
 8002eae:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002eb0:	2303      	movs	r3, #3
 8002eb2:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002eb4:	f107 0310 	add.w	r3, r7, #16
 8002eb8:	4619      	mov	r1, r3
 8002eba:	480b      	ldr	r0, [pc, #44]	@ (8002ee8 <HAL_SPI_MspInit+0x90>)
 8002ebc:	f001 f982 	bl	80041c4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8002ec0:	2340      	movs	r3, #64	@ 0x40
 8002ec2:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002ec4:	2300      	movs	r3, #0
 8002ec6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ec8:	2300      	movs	r3, #0
 8002eca:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002ecc:	f107 0310 	add.w	r3, r7, #16
 8002ed0:	4619      	mov	r1, r3
 8002ed2:	4805      	ldr	r0, [pc, #20]	@ (8002ee8 <HAL_SPI_MspInit+0x90>)
 8002ed4:	f001 f976 	bl	80041c4 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 8002ed8:	bf00      	nop
 8002eda:	3720      	adds	r7, #32
 8002edc:	46bd      	mov	sp, r7
 8002ede:	bd80      	pop	{r7, pc}
 8002ee0:	40013000 	.word	0x40013000
 8002ee4:	40021000 	.word	0x40021000
 8002ee8:	40010800 	.word	0x40010800

08002eec <LTC_nCS_High>:
  /* USER CODE END SPI1_MspDeInit 1 */
  }
}

/* USER CODE BEGIN 1 */
void LTC_nCS_High(void) {
 8002eec:	b580      	push	{r7, lr}
 8002eee:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LTC_nCS_GPIO_Port, LTC_nCS_Pin, GPIO_PIN_SET); //Pull CS high
 8002ef0:	2201      	movs	r2, #1
 8002ef2:	2110      	movs	r1, #16
 8002ef4:	4802      	ldr	r0, [pc, #8]	@ (8002f00 <LTC_nCS_High+0x14>)
 8002ef6:	f001 fae9 	bl	80044cc <HAL_GPIO_WritePin>
}
 8002efa:	bf00      	nop
 8002efc:	bd80      	pop	{r7, pc}
 8002efe:	bf00      	nop
 8002f00:	40010800 	.word	0x40010800

08002f04 <LTC_nCS_Low>:
/* Pull nCS line to SPI1 LOW */
void LTC_nCS_Low(void) {
 8002f04:	b580      	push	{r7, lr}
 8002f06:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LTC_nCS_GPIO_Port, LTC_nCS_Pin, GPIO_PIN_RESET); //Pull CS high
 8002f08:	2200      	movs	r2, #0
 8002f0a:	2110      	movs	r1, #16
 8002f0c:	4802      	ldr	r0, [pc, #8]	@ (8002f18 <LTC_nCS_Low+0x14>)
 8002f0e:	f001 fadd 	bl	80044cc <HAL_GPIO_WritePin>
}
 8002f12:	bf00      	nop
 8002f14:	bd80      	pop	{r7, pc}
 8002f16:	bf00      	nop
 8002f18:	40010800 	.word	0x40010800

08002f1c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002f1c:	b480      	push	{r7}
 8002f1e:	b085      	sub	sp, #20
 8002f20:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8002f22:	4b15      	ldr	r3, [pc, #84]	@ (8002f78 <HAL_MspInit+0x5c>)
 8002f24:	699b      	ldr	r3, [r3, #24]
 8002f26:	4a14      	ldr	r2, [pc, #80]	@ (8002f78 <HAL_MspInit+0x5c>)
 8002f28:	f043 0301 	orr.w	r3, r3, #1
 8002f2c:	6193      	str	r3, [r2, #24]
 8002f2e:	4b12      	ldr	r3, [pc, #72]	@ (8002f78 <HAL_MspInit+0x5c>)
 8002f30:	699b      	ldr	r3, [r3, #24]
 8002f32:	f003 0301 	and.w	r3, r3, #1
 8002f36:	60bb      	str	r3, [r7, #8]
 8002f38:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002f3a:	4b0f      	ldr	r3, [pc, #60]	@ (8002f78 <HAL_MspInit+0x5c>)
 8002f3c:	69db      	ldr	r3, [r3, #28]
 8002f3e:	4a0e      	ldr	r2, [pc, #56]	@ (8002f78 <HAL_MspInit+0x5c>)
 8002f40:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002f44:	61d3      	str	r3, [r2, #28]
 8002f46:	4b0c      	ldr	r3, [pc, #48]	@ (8002f78 <HAL_MspInit+0x5c>)
 8002f48:	69db      	ldr	r3, [r3, #28]
 8002f4a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002f4e:	607b      	str	r3, [r7, #4]
 8002f50:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8002f52:	4b0a      	ldr	r3, [pc, #40]	@ (8002f7c <HAL_MspInit+0x60>)
 8002f54:	685b      	ldr	r3, [r3, #4]
 8002f56:	60fb      	str	r3, [r7, #12]
 8002f58:	68fb      	ldr	r3, [r7, #12]
 8002f5a:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8002f5e:	60fb      	str	r3, [r7, #12]
 8002f60:	68fb      	ldr	r3, [r7, #12]
 8002f62:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002f66:	60fb      	str	r3, [r7, #12]
 8002f68:	4a04      	ldr	r2, [pc, #16]	@ (8002f7c <HAL_MspInit+0x60>)
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002f6e:	bf00      	nop
 8002f70:	3714      	adds	r7, #20
 8002f72:	46bd      	mov	sp, r7
 8002f74:	bc80      	pop	{r7}
 8002f76:	4770      	bx	lr
 8002f78:	40021000 	.word	0x40021000
 8002f7c:	40010000 	.word	0x40010000

08002f80 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002f80:	b480      	push	{r7}
 8002f82:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002f84:	bf00      	nop
 8002f86:	e7fd      	b.n	8002f84 <NMI_Handler+0x4>

08002f88 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002f88:	b480      	push	{r7}
 8002f8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002f8c:	bf00      	nop
 8002f8e:	e7fd      	b.n	8002f8c <HardFault_Handler+0x4>

08002f90 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002f90:	b480      	push	{r7}
 8002f92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002f94:	bf00      	nop
 8002f96:	e7fd      	b.n	8002f94 <MemManage_Handler+0x4>

08002f98 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002f98:	b480      	push	{r7}
 8002f9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002f9c:	bf00      	nop
 8002f9e:	e7fd      	b.n	8002f9c <BusFault_Handler+0x4>

08002fa0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002fa0:	b480      	push	{r7}
 8002fa2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002fa4:	bf00      	nop
 8002fa6:	e7fd      	b.n	8002fa4 <UsageFault_Handler+0x4>

08002fa8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002fa8:	b480      	push	{r7}
 8002faa:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002fac:	bf00      	nop
 8002fae:	46bd      	mov	sp, r7
 8002fb0:	bc80      	pop	{r7}
 8002fb2:	4770      	bx	lr

08002fb4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002fb4:	b480      	push	{r7}
 8002fb6:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002fb8:	bf00      	nop
 8002fba:	46bd      	mov	sp, r7
 8002fbc:	bc80      	pop	{r7}
 8002fbe:	4770      	bx	lr

08002fc0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002fc0:	b480      	push	{r7}
 8002fc2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002fc4:	bf00      	nop
 8002fc6:	46bd      	mov	sp, r7
 8002fc8:	bc80      	pop	{r7}
 8002fca:	4770      	bx	lr

08002fcc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002fcc:	b580      	push	{r7, lr}
 8002fce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002fd0:	f000 f94a 	bl	8003268 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002fd4:	bf00      	nop
 8002fd6:	bd80      	pop	{r7, pc}

08002fd8 <_times>:
 8002fd8:	b480      	push	{r7}
 8002fda:	b083      	sub	sp, #12
 8002fdc:	af00      	add	r7, sp, #0
 8002fde:	6078      	str	r0, [r7, #4]
 8002fe0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002fe4:	4618      	mov	r0, r3
 8002fe6:	370c      	adds	r7, #12
 8002fe8:	46bd      	mov	sp, r7
 8002fea:	bc80      	pop	{r7}
 8002fec:	4770      	bx	lr

08002fee <SystemInit>:
 8002fee:	b480      	push	{r7}
 8002ff0:	af00      	add	r7, sp, #0
 8002ff2:	bf00      	nop
 8002ff4:	46bd      	mov	sp, r7
 8002ff6:	bc80      	pop	{r7}
 8002ff8:	4770      	bx	lr
	...

08002ffc <MX_TIM7_Init>:

TIM_HandleTypeDef htim7;

/* TIM7 init function */
void MX_TIM7_Init(void)
{
 8002ffc:	b580      	push	{r7, lr}
 8002ffe:	b082      	sub	sp, #8
 8003000:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003002:	463b      	mov	r3, r7
 8003004:	2200      	movs	r2, #0
 8003006:	601a      	str	r2, [r3, #0]
 8003008:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 800300a:	4b15      	ldr	r3, [pc, #84]	@ (8003060 <MX_TIM7_Init+0x64>)
 800300c:	4a15      	ldr	r2, [pc, #84]	@ (8003064 <MX_TIM7_Init+0x68>)
 800300e:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 0;
 8003010:	4b13      	ldr	r3, [pc, #76]	@ (8003060 <MX_TIM7_Init+0x64>)
 8003012:	2200      	movs	r2, #0
 8003014:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003016:	4b12      	ldr	r3, [pc, #72]	@ (8003060 <MX_TIM7_Init+0x64>)
 8003018:	2200      	movs	r2, #0
 800301a:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 65535;
 800301c:	4b10      	ldr	r3, [pc, #64]	@ (8003060 <MX_TIM7_Init+0x64>)
 800301e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003022:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8003024:	4b0e      	ldr	r3, [pc, #56]	@ (8003060 <MX_TIM7_Init+0x64>)
 8003026:	2280      	movs	r2, #128	@ 0x80
 8003028:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800302a:	480d      	ldr	r0, [pc, #52]	@ (8003060 <MX_TIM7_Init+0x64>)
 800302c:	f002 ffa5 	bl	8005f7a <HAL_TIM_Base_Init>
 8003030:	4603      	mov	r3, r0
 8003032:	2b00      	cmp	r3, #0
 8003034:	d001      	beq.n	800303a <MX_TIM7_Init+0x3e>
  {
    Error_Handler();
 8003036:	f7ff fc33 	bl	80028a0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800303a:	2300      	movs	r3, #0
 800303c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800303e:	2300      	movs	r3, #0
 8003040:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8003042:	463b      	mov	r3, r7
 8003044:	4619      	mov	r1, r3
 8003046:	4806      	ldr	r0, [pc, #24]	@ (8003060 <MX_TIM7_Init+0x64>)
 8003048:	f003 f85e 	bl	8006108 <HAL_TIMEx_MasterConfigSynchronization>
 800304c:	4603      	mov	r3, r0
 800304e:	2b00      	cmp	r3, #0
 8003050:	d001      	beq.n	8003056 <MX_TIM7_Init+0x5a>
  {
    Error_Handler();
 8003052:	f7ff fc25 	bl	80028a0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 8003056:	bf00      	nop
 8003058:	3708      	adds	r7, #8
 800305a:	46bd      	mov	sp, r7
 800305c:	bd80      	pop	{r7, pc}
 800305e:	bf00      	nop
 8003060:	20000210 	.word	0x20000210
 8003064:	40001400 	.word	0x40001400

08003068 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8003068:	b480      	push	{r7}
 800306a:	b085      	sub	sp, #20
 800306c:	af00      	add	r7, sp, #0
 800306e:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM7)
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	4a09      	ldr	r2, [pc, #36]	@ (800309c <HAL_TIM_Base_MspInit+0x34>)
 8003076:	4293      	cmp	r3, r2
 8003078:	d10b      	bne.n	8003092 <HAL_TIM_Base_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* TIM7 clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 800307a:	4b09      	ldr	r3, [pc, #36]	@ (80030a0 <HAL_TIM_Base_MspInit+0x38>)
 800307c:	69db      	ldr	r3, [r3, #28]
 800307e:	4a08      	ldr	r2, [pc, #32]	@ (80030a0 <HAL_TIM_Base_MspInit+0x38>)
 8003080:	f043 0320 	orr.w	r3, r3, #32
 8003084:	61d3      	str	r3, [r2, #28]
 8003086:	4b06      	ldr	r3, [pc, #24]	@ (80030a0 <HAL_TIM_Base_MspInit+0x38>)
 8003088:	69db      	ldr	r3, [r3, #28]
 800308a:	f003 0320 	and.w	r3, r3, #32
 800308e:	60fb      	str	r3, [r7, #12]
 8003090:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }
}
 8003092:	bf00      	nop
 8003094:	3714      	adds	r7, #20
 8003096:	46bd      	mov	sp, r7
 8003098:	bc80      	pop	{r7}
 800309a:	4770      	bx	lr
 800309c:	40001400 	.word	0x40001400
 80030a0:	40021000 	.word	0x40021000

080030a4 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 80030a4:	b580      	push	{r7, lr}
 80030a6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80030a8:	4b11      	ldr	r3, [pc, #68]	@ (80030f0 <MX_USART1_UART_Init+0x4c>)
 80030aa:	4a12      	ldr	r2, [pc, #72]	@ (80030f4 <MX_USART1_UART_Init+0x50>)
 80030ac:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80030ae:	4b10      	ldr	r3, [pc, #64]	@ (80030f0 <MX_USART1_UART_Init+0x4c>)
 80030b0:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80030b4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80030b6:	4b0e      	ldr	r3, [pc, #56]	@ (80030f0 <MX_USART1_UART_Init+0x4c>)
 80030b8:	2200      	movs	r2, #0
 80030ba:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80030bc:	4b0c      	ldr	r3, [pc, #48]	@ (80030f0 <MX_USART1_UART_Init+0x4c>)
 80030be:	2200      	movs	r2, #0
 80030c0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80030c2:	4b0b      	ldr	r3, [pc, #44]	@ (80030f0 <MX_USART1_UART_Init+0x4c>)
 80030c4:	2200      	movs	r2, #0
 80030c6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80030c8:	4b09      	ldr	r3, [pc, #36]	@ (80030f0 <MX_USART1_UART_Init+0x4c>)
 80030ca:	220c      	movs	r2, #12
 80030cc:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_RTS_CTS;
 80030ce:	4b08      	ldr	r3, [pc, #32]	@ (80030f0 <MX_USART1_UART_Init+0x4c>)
 80030d0:	f44f 7240 	mov.w	r2, #768	@ 0x300
 80030d4:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80030d6:	4b06      	ldr	r3, [pc, #24]	@ (80030f0 <MX_USART1_UART_Init+0x4c>)
 80030d8:	2200      	movs	r2, #0
 80030da:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80030dc:	4804      	ldr	r0, [pc, #16]	@ (80030f0 <MX_USART1_UART_Init+0x4c>)
 80030de:	f003 f879 	bl	80061d4 <HAL_UART_Init>
 80030e2:	4603      	mov	r3, r0
 80030e4:	2b00      	cmp	r3, #0
 80030e6:	d001      	beq.n	80030ec <MX_USART1_UART_Init+0x48>
  {
    Error_Handler();
 80030e8:	f7ff fbda 	bl	80028a0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80030ec:	bf00      	nop
 80030ee:	bd80      	pop	{r7, pc}
 80030f0:	20000258 	.word	0x20000258
 80030f4:	40013800 	.word	0x40013800

080030f8 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80030f8:	b580      	push	{r7, lr}
 80030fa:	b088      	sub	sp, #32
 80030fc:	af00      	add	r7, sp, #0
 80030fe:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003100:	f107 0310 	add.w	r3, r7, #16
 8003104:	2200      	movs	r2, #0
 8003106:	601a      	str	r2, [r3, #0]
 8003108:	605a      	str	r2, [r3, #4]
 800310a:	609a      	str	r2, [r3, #8]
 800310c:	60da      	str	r2, [r3, #12]
  if(uartHandle->Instance==USART1)
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	4a1c      	ldr	r2, [pc, #112]	@ (8003184 <HAL_UART_MspInit+0x8c>)
 8003114:	4293      	cmp	r3, r2
 8003116:	d131      	bne.n	800317c <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8003118:	4b1b      	ldr	r3, [pc, #108]	@ (8003188 <HAL_UART_MspInit+0x90>)
 800311a:	699b      	ldr	r3, [r3, #24]
 800311c:	4a1a      	ldr	r2, [pc, #104]	@ (8003188 <HAL_UART_MspInit+0x90>)
 800311e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003122:	6193      	str	r3, [r2, #24]
 8003124:	4b18      	ldr	r3, [pc, #96]	@ (8003188 <HAL_UART_MspInit+0x90>)
 8003126:	699b      	ldr	r3, [r3, #24]
 8003128:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800312c:	60fb      	str	r3, [r7, #12]
 800312e:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003130:	4b15      	ldr	r3, [pc, #84]	@ (8003188 <HAL_UART_MspInit+0x90>)
 8003132:	699b      	ldr	r3, [r3, #24]
 8003134:	4a14      	ldr	r2, [pc, #80]	@ (8003188 <HAL_UART_MspInit+0x90>)
 8003136:	f043 0304 	orr.w	r3, r3, #4
 800313a:	6193      	str	r3, [r2, #24]
 800313c:	4b12      	ldr	r3, [pc, #72]	@ (8003188 <HAL_UART_MspInit+0x90>)
 800313e:	699b      	ldr	r3, [r3, #24]
 8003140:	f003 0304 	and.w	r3, r3, #4
 8003144:	60bb      	str	r3, [r7, #8]
 8003146:	68bb      	ldr	r3, [r7, #8]
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    PA11     ------> USART1_CTS
    PA12     ------> USART1_RTS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_12;
 8003148:	f44f 5390 	mov.w	r3, #4608	@ 0x1200
 800314c:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800314e:	2302      	movs	r3, #2
 8003150:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003152:	2303      	movs	r3, #3
 8003154:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003156:	f107 0310 	add.w	r3, r7, #16
 800315a:	4619      	mov	r1, r3
 800315c:	480b      	ldr	r0, [pc, #44]	@ (800318c <HAL_UART_MspInit+0x94>)
 800315e:	f001 f831 	bl	80041c4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8003162:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8003166:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003168:	2300      	movs	r3, #0
 800316a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800316c:	2300      	movs	r3, #0
 800316e:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003170:	f107 0310 	add.w	r3, r7, #16
 8003174:	4619      	mov	r1, r3
 8003176:	4805      	ldr	r0, [pc, #20]	@ (800318c <HAL_UART_MspInit+0x94>)
 8003178:	f001 f824 	bl	80041c4 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 800317c:	bf00      	nop
 800317e:	3720      	adds	r7, #32
 8003180:	46bd      	mov	sp, r7
 8003182:	bd80      	pop	{r7, pc}
 8003184:	40013800 	.word	0x40013800
 8003188:	40021000 	.word	0x40021000
 800318c:	40010800 	.word	0x40010800

08003190 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8003190:	f7ff ff2d 	bl	8002fee <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003194:	480b      	ldr	r0, [pc, #44]	@ (80031c4 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8003196:	490c      	ldr	r1, [pc, #48]	@ (80031c8 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8003198:	4a0c      	ldr	r2, [pc, #48]	@ (80031cc <LoopFillZerobss+0x16>)
  movs r3, #0
 800319a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800319c:	e002      	b.n	80031a4 <LoopCopyDataInit>

0800319e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800319e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80031a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80031a2:	3304      	adds	r3, #4

080031a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80031a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80031a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80031a8:	d3f9      	bcc.n	800319e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80031aa:	4a09      	ldr	r2, [pc, #36]	@ (80031d0 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 80031ac:	4c09      	ldr	r4, [pc, #36]	@ (80031d4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80031ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80031b0:	e001      	b.n	80031b6 <LoopFillZerobss>

080031b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80031b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80031b4:	3204      	adds	r2, #4

080031b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80031b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80031b8:	d3fb      	bcc.n	80031b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80031ba:	f003 f90f 	bl	80063dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80031be:	f7ff f8f7 	bl	80023b0 <main>
  bx lr
 80031c2:	4770      	bx	lr
  ldr r0, =_sdata
 80031c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80031c8:	200000c8 	.word	0x200000c8
  ldr r2, =_sidata
 80031cc:	08006ca4 	.word	0x08006ca4
  ldr r2, =_sbss
 80031d0:	200000c8 	.word	0x200000c8
  ldr r4, =_ebss
 80031d4:	200003dc 	.word	0x200003dc

080031d8 <ADC1_2_IRQHandler>:
 * @retval None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80031d8:	e7fe      	b.n	80031d8 <ADC1_2_IRQHandler>
	...

080031dc <HAL_Init>:
 80031dc:	b580      	push	{r7, lr}
 80031de:	af00      	add	r7, sp, #0
 80031e0:	4b08      	ldr	r3, [pc, #32]	@ (8003204 <HAL_Init+0x28>)
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	4a07      	ldr	r2, [pc, #28]	@ (8003204 <HAL_Init+0x28>)
 80031e6:	f043 0310 	orr.w	r3, r3, #16
 80031ea:	6013      	str	r3, [r2, #0]
 80031ec:	2003      	movs	r0, #3
 80031ee:	f000 ffb5 	bl	800415c <HAL_NVIC_SetPriorityGrouping>
 80031f2:	200f      	movs	r0, #15
 80031f4:	f000 f808 	bl	8003208 <HAL_InitTick>
 80031f8:	f7ff fe90 	bl	8002f1c <HAL_MspInit>
 80031fc:	2300      	movs	r3, #0
 80031fe:	4618      	mov	r0, r3
 8003200:	bd80      	pop	{r7, pc}
 8003202:	bf00      	nop
 8003204:	40022000 	.word	0x40022000

08003208 <HAL_InitTick>:
 8003208:	b580      	push	{r7, lr}
 800320a:	b082      	sub	sp, #8
 800320c:	af00      	add	r7, sp, #0
 800320e:	6078      	str	r0, [r7, #4]
 8003210:	4b12      	ldr	r3, [pc, #72]	@ (800325c <HAL_InitTick+0x54>)
 8003212:	681a      	ldr	r2, [r3, #0]
 8003214:	4b12      	ldr	r3, [pc, #72]	@ (8003260 <HAL_InitTick+0x58>)
 8003216:	781b      	ldrb	r3, [r3, #0]
 8003218:	4619      	mov	r1, r3
 800321a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800321e:	fbb3 f3f1 	udiv	r3, r3, r1
 8003222:	fbb2 f3f3 	udiv	r3, r2, r3
 8003226:	4618      	mov	r0, r3
 8003228:	f000 ffbf 	bl	80041aa <HAL_SYSTICK_Config>
 800322c:	4603      	mov	r3, r0
 800322e:	2b00      	cmp	r3, #0
 8003230:	d001      	beq.n	8003236 <HAL_InitTick+0x2e>
 8003232:	2301      	movs	r3, #1
 8003234:	e00e      	b.n	8003254 <HAL_InitTick+0x4c>
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	2b0f      	cmp	r3, #15
 800323a:	d80a      	bhi.n	8003252 <HAL_InitTick+0x4a>
 800323c:	2200      	movs	r2, #0
 800323e:	6879      	ldr	r1, [r7, #4]
 8003240:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003244:	f000 ff95 	bl	8004172 <HAL_NVIC_SetPriority>
 8003248:	4a06      	ldr	r2, [pc, #24]	@ (8003264 <HAL_InitTick+0x5c>)
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	6013      	str	r3, [r2, #0]
 800324e:	2300      	movs	r3, #0
 8003250:	e000      	b.n	8003254 <HAL_InitTick+0x4c>
 8003252:	2301      	movs	r3, #1
 8003254:	4618      	mov	r0, r3
 8003256:	3708      	adds	r7, #8
 8003258:	46bd      	mov	sp, r7
 800325a:	bd80      	pop	{r7, pc}
 800325c:	2000006c 	.word	0x2000006c
 8003260:	20000074 	.word	0x20000074
 8003264:	20000070 	.word	0x20000070

08003268 <HAL_IncTick>:
 8003268:	b480      	push	{r7}
 800326a:	af00      	add	r7, sp, #0
 800326c:	4b05      	ldr	r3, [pc, #20]	@ (8003284 <HAL_IncTick+0x1c>)
 800326e:	781b      	ldrb	r3, [r3, #0]
 8003270:	461a      	mov	r2, r3
 8003272:	4b05      	ldr	r3, [pc, #20]	@ (8003288 <HAL_IncTick+0x20>)
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	4413      	add	r3, r2
 8003278:	4a03      	ldr	r2, [pc, #12]	@ (8003288 <HAL_IncTick+0x20>)
 800327a:	6013      	str	r3, [r2, #0]
 800327c:	bf00      	nop
 800327e:	46bd      	mov	sp, r7
 8003280:	bc80      	pop	{r7}
 8003282:	4770      	bx	lr
 8003284:	20000074 	.word	0x20000074
 8003288:	200002a0 	.word	0x200002a0

0800328c <HAL_GetTick>:
 800328c:	b480      	push	{r7}
 800328e:	af00      	add	r7, sp, #0
 8003290:	4b02      	ldr	r3, [pc, #8]	@ (800329c <HAL_GetTick+0x10>)
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	4618      	mov	r0, r3
 8003296:	46bd      	mov	sp, r7
 8003298:	bc80      	pop	{r7}
 800329a:	4770      	bx	lr
 800329c:	200002a0 	.word	0x200002a0

080032a0 <HAL_Delay>:
 80032a0:	b580      	push	{r7, lr}
 80032a2:	b084      	sub	sp, #16
 80032a4:	af00      	add	r7, sp, #0
 80032a6:	6078      	str	r0, [r7, #4]
 80032a8:	f7ff fff0 	bl	800328c <HAL_GetTick>
 80032ac:	60b8      	str	r0, [r7, #8]
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	60fb      	str	r3, [r7, #12]
 80032b2:	68fb      	ldr	r3, [r7, #12]
 80032b4:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80032b8:	d005      	beq.n	80032c6 <HAL_Delay+0x26>
 80032ba:	4b0a      	ldr	r3, [pc, #40]	@ (80032e4 <HAL_Delay+0x44>)
 80032bc:	781b      	ldrb	r3, [r3, #0]
 80032be:	461a      	mov	r2, r3
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	4413      	add	r3, r2
 80032c4:	60fb      	str	r3, [r7, #12]
 80032c6:	bf00      	nop
 80032c8:	f7ff ffe0 	bl	800328c <HAL_GetTick>
 80032cc:	4602      	mov	r2, r0
 80032ce:	68bb      	ldr	r3, [r7, #8]
 80032d0:	1ad3      	subs	r3, r2, r3
 80032d2:	68fa      	ldr	r2, [r7, #12]
 80032d4:	429a      	cmp	r2, r3
 80032d6:	d8f7      	bhi.n	80032c8 <HAL_Delay+0x28>
 80032d8:	bf00      	nop
 80032da:	bf00      	nop
 80032dc:	3710      	adds	r7, #16
 80032de:	46bd      	mov	sp, r7
 80032e0:	bd80      	pop	{r7, pc}
 80032e2:	bf00      	nop
 80032e4:	20000074 	.word	0x20000074

080032e8 <HAL_ADC_Init>:
 80032e8:	b580      	push	{r7, lr}
 80032ea:	b086      	sub	sp, #24
 80032ec:	af00      	add	r7, sp, #0
 80032ee:	6078      	str	r0, [r7, #4]
 80032f0:	2300      	movs	r3, #0
 80032f2:	75fb      	strb	r3, [r7, #23]
 80032f4:	2300      	movs	r3, #0
 80032f6:	613b      	str	r3, [r7, #16]
 80032f8:	2300      	movs	r3, #0
 80032fa:	60bb      	str	r3, [r7, #8]
 80032fc:	2300      	movs	r3, #0
 80032fe:	60fb      	str	r3, [r7, #12]
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	2b00      	cmp	r3, #0
 8003304:	d101      	bne.n	800330a <HAL_ADC_Init+0x22>
 8003306:	2301      	movs	r3, #1
 8003308:	e0be      	b.n	8003488 <HAL_ADC_Init+0x1a0>
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	689b      	ldr	r3, [r3, #8]
 800330e:	2b00      	cmp	r3, #0
 8003310:	687b      	ldr	r3, [r7, #4]
 8003312:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003314:	2b00      	cmp	r3, #0
 8003316:	d109      	bne.n	800332c <HAL_ADC_Init+0x44>
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	2200      	movs	r2, #0
 800331c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	2200      	movs	r2, #0
 8003322:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003326:	6878      	ldr	r0, [r7, #4]
 8003328:	f7fe fc12 	bl	8001b50 <HAL_ADC_MspInit>
 800332c:	6878      	ldr	r0, [r7, #4]
 800332e:	f000 fbf1 	bl	8003b14 <ADC_ConversionStop_Disable>
 8003332:	4603      	mov	r3, r0
 8003334:	75fb      	strb	r3, [r7, #23]
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800333a:	f003 0310 	and.w	r3, r3, #16
 800333e:	2b00      	cmp	r3, #0
 8003340:	f040 8099 	bne.w	8003476 <HAL_ADC_Init+0x18e>
 8003344:	7dfb      	ldrb	r3, [r7, #23]
 8003346:	2b00      	cmp	r3, #0
 8003348:	f040 8095 	bne.w	8003476 <HAL_ADC_Init+0x18e>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003350:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8003354:	f023 0302 	bic.w	r3, r3, #2
 8003358:	f043 0202 	orr.w	r2, r3, #2
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	685a      	ldr	r2, [r3, #4]
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	69db      	ldr	r3, [r3, #28]
 8003368:	431a      	orrs	r2, r3
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	7b1b      	ldrb	r3, [r3, #12]
 800336e:	005b      	lsls	r3, r3, #1
 8003370:	4313      	orrs	r3, r2
 8003372:	68ba      	ldr	r2, [r7, #8]
 8003374:	4313      	orrs	r3, r2
 8003376:	60bb      	str	r3, [r7, #8]
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	689b      	ldr	r3, [r3, #8]
 800337c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003380:	d003      	beq.n	800338a <HAL_ADC_Init+0xa2>
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	689b      	ldr	r3, [r3, #8]
 8003386:	2b01      	cmp	r3, #1
 8003388:	d102      	bne.n	8003390 <HAL_ADC_Init+0xa8>
 800338a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800338e:	e000      	b.n	8003392 <HAL_ADC_Init+0xaa>
 8003390:	2300      	movs	r3, #0
 8003392:	693a      	ldr	r2, [r7, #16]
 8003394:	4313      	orrs	r3, r2
 8003396:	613b      	str	r3, [r7, #16]
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	7d1b      	ldrb	r3, [r3, #20]
 800339c:	2b01      	cmp	r3, #1
 800339e:	d119      	bne.n	80033d4 <HAL_ADC_Init+0xec>
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	7b1b      	ldrb	r3, [r3, #12]
 80033a4:	2b00      	cmp	r3, #0
 80033a6:	d109      	bne.n	80033bc <HAL_ADC_Init+0xd4>
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	699b      	ldr	r3, [r3, #24]
 80033ac:	3b01      	subs	r3, #1
 80033ae:	035a      	lsls	r2, r3, #13
 80033b0:	693b      	ldr	r3, [r7, #16]
 80033b2:	4313      	orrs	r3, r2
 80033b4:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80033b8:	613b      	str	r3, [r7, #16]
 80033ba:	e00b      	b.n	80033d4 <HAL_ADC_Init+0xec>
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80033c0:	f043 0220 	orr.w	r2, r3, #32
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	629a      	str	r2, [r3, #40]	@ 0x28
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80033cc:	f043 0201 	orr.w	r2, r3, #1
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	685b      	ldr	r3, [r3, #4]
 80033da:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	693a      	ldr	r2, [r7, #16]
 80033e4:	430a      	orrs	r2, r1
 80033e6:	605a      	str	r2, [r3, #4]
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	681b      	ldr	r3, [r3, #0]
 80033ec:	689a      	ldr	r2, [r3, #8]
 80033ee:	4b28      	ldr	r3, [pc, #160]	@ (8003490 <HAL_ADC_Init+0x1a8>)
 80033f0:	4013      	ands	r3, r2
 80033f2:	687a      	ldr	r2, [r7, #4]
 80033f4:	6812      	ldr	r2, [r2, #0]
 80033f6:	68b9      	ldr	r1, [r7, #8]
 80033f8:	430b      	orrs	r3, r1
 80033fa:	6093      	str	r3, [r2, #8]
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	689b      	ldr	r3, [r3, #8]
 8003400:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003404:	d003      	beq.n	800340e <HAL_ADC_Init+0x126>
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	689b      	ldr	r3, [r3, #8]
 800340a:	2b01      	cmp	r3, #1
 800340c:	d104      	bne.n	8003418 <HAL_ADC_Init+0x130>
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	691b      	ldr	r3, [r3, #16]
 8003412:	3b01      	subs	r3, #1
 8003414:	051b      	lsls	r3, r3, #20
 8003416:	60fb      	str	r3, [r7, #12]
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800341e:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	68fa      	ldr	r2, [r7, #12]
 8003428:	430a      	orrs	r2, r1
 800342a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	681b      	ldr	r3, [r3, #0]
 8003430:	689a      	ldr	r2, [r3, #8]
 8003432:	4b18      	ldr	r3, [pc, #96]	@ (8003494 <HAL_ADC_Init+0x1ac>)
 8003434:	4013      	ands	r3, r2
 8003436:	68ba      	ldr	r2, [r7, #8]
 8003438:	429a      	cmp	r2, r3
 800343a:	d10b      	bne.n	8003454 <HAL_ADC_Init+0x16c>
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	2200      	movs	r2, #0
 8003440:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003446:	f023 0303 	bic.w	r3, r3, #3
 800344a:	f043 0201 	orr.w	r2, r3, #1
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	629a      	str	r2, [r3, #40]	@ 0x28
 8003452:	e018      	b.n	8003486 <HAL_ADC_Init+0x19e>
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003458:	f023 0312 	bic.w	r3, r3, #18
 800345c:	f043 0210 	orr.w	r2, r3, #16
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	629a      	str	r2, [r3, #40]	@ 0x28
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003468:	f043 0201 	orr.w	r2, r3, #1
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003470:	2301      	movs	r3, #1
 8003472:	75fb      	strb	r3, [r7, #23]
 8003474:	e007      	b.n	8003486 <HAL_ADC_Init+0x19e>
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800347a:	f043 0210 	orr.w	r2, r3, #16
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	629a      	str	r2, [r3, #40]	@ 0x28
 8003482:	2301      	movs	r3, #1
 8003484:	75fb      	strb	r3, [r7, #23]
 8003486:	7dfb      	ldrb	r3, [r7, #23]
 8003488:	4618      	mov	r0, r3
 800348a:	3718      	adds	r7, #24
 800348c:	46bd      	mov	sp, r7
 800348e:	bd80      	pop	{r7, pc}
 8003490:	ffe1f7fd 	.word	0xffe1f7fd
 8003494:	ff1f0efe 	.word	0xff1f0efe

08003498 <HAL_ADC_Start>:
 8003498:	b580      	push	{r7, lr}
 800349a:	b084      	sub	sp, #16
 800349c:	af00      	add	r7, sp, #0
 800349e:	6078      	str	r0, [r7, #4]
 80034a0:	2300      	movs	r3, #0
 80034a2:	73fb      	strb	r3, [r7, #15]
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80034aa:	2b01      	cmp	r3, #1
 80034ac:	d101      	bne.n	80034b2 <HAL_ADC_Start+0x1a>
 80034ae:	2302      	movs	r3, #2
 80034b0:	e098      	b.n	80035e4 <HAL_ADC_Start+0x14c>
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	2201      	movs	r2, #1
 80034b6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80034ba:	6878      	ldr	r0, [r7, #4]
 80034bc:	f000 fad0 	bl	8003a60 <ADC_Enable>
 80034c0:	4603      	mov	r3, r0
 80034c2:	73fb      	strb	r3, [r7, #15]
 80034c4:	7bfb      	ldrb	r3, [r7, #15]
 80034c6:	2b00      	cmp	r3, #0
 80034c8:	f040 8087 	bne.w	80035da <HAL_ADC_Start+0x142>
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80034d0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80034d4:	f023 0301 	bic.w	r3, r3, #1
 80034d8:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	629a      	str	r2, [r3, #40]	@ 0x28
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	4a41      	ldr	r2, [pc, #260]	@ (80035ec <HAL_ADC_Start+0x154>)
 80034e6:	4293      	cmp	r3, r2
 80034e8:	d105      	bne.n	80034f6 <HAL_ADC_Start+0x5e>
 80034ea:	4b41      	ldr	r3, [pc, #260]	@ (80035f0 <HAL_ADC_Start+0x158>)
 80034ec:	685b      	ldr	r3, [r3, #4]
 80034ee:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 80034f2:	2b00      	cmp	r3, #0
 80034f4:	d115      	bne.n	8003522 <HAL_ADC_Start+0x8a>
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80034fa:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	629a      	str	r2, [r3, #40]	@ 0x28
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	681b      	ldr	r3, [r3, #0]
 8003506:	685b      	ldr	r3, [r3, #4]
 8003508:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800350c:	2b00      	cmp	r3, #0
 800350e:	d026      	beq.n	800355e <HAL_ADC_Start+0xc6>
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003514:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003518:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800351c:	687b      	ldr	r3, [r7, #4]
 800351e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003520:	e01d      	b.n	800355e <HAL_ADC_Start+0xc6>
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003526:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	629a      	str	r2, [r3, #40]	@ 0x28
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	4a2f      	ldr	r2, [pc, #188]	@ (80035f0 <HAL_ADC_Start+0x158>)
 8003534:	4293      	cmp	r3, r2
 8003536:	d004      	beq.n	8003542 <HAL_ADC_Start+0xaa>
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	4a2b      	ldr	r2, [pc, #172]	@ (80035ec <HAL_ADC_Start+0x154>)
 800353e:	4293      	cmp	r3, r2
 8003540:	d10d      	bne.n	800355e <HAL_ADC_Start+0xc6>
 8003542:	4b2b      	ldr	r3, [pc, #172]	@ (80035f0 <HAL_ADC_Start+0x158>)
 8003544:	685b      	ldr	r3, [r3, #4]
 8003546:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800354a:	2b00      	cmp	r3, #0
 800354c:	d007      	beq.n	800355e <HAL_ADC_Start+0xc6>
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003552:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003556:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	629a      	str	r2, [r3, #40]	@ 0x28
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003562:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003566:	2b00      	cmp	r3, #0
 8003568:	d006      	beq.n	8003578 <HAL_ADC_Start+0xe0>
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800356e:	f023 0206 	bic.w	r2, r3, #6
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003576:	e002      	b.n	800357e <HAL_ADC_Start+0xe6>
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	2200      	movs	r2, #0
 800357c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	2200      	movs	r2, #0
 8003582:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	f06f 0202 	mvn.w	r2, #2
 800358e:	601a      	str	r2, [r3, #0]
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	689b      	ldr	r3, [r3, #8]
 8003596:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 800359a:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 800359e:	d113      	bne.n	80035c8 <HAL_ADC_Start+0x130>
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	4a11      	ldr	r2, [pc, #68]	@ (80035ec <HAL_ADC_Start+0x154>)
 80035a6:	4293      	cmp	r3, r2
 80035a8:	d105      	bne.n	80035b6 <HAL_ADC_Start+0x11e>
 80035aa:	4b11      	ldr	r3, [pc, #68]	@ (80035f0 <HAL_ADC_Start+0x158>)
 80035ac:	685b      	ldr	r3, [r3, #4]
 80035ae:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 80035b2:	2b00      	cmp	r3, #0
 80035b4:	d108      	bne.n	80035c8 <HAL_ADC_Start+0x130>
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	681b      	ldr	r3, [r3, #0]
 80035ba:	689a      	ldr	r2, [r3, #8]
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	681b      	ldr	r3, [r3, #0]
 80035c0:	f442 02a0 	orr.w	r2, r2, #5242880	@ 0x500000
 80035c4:	609a      	str	r2, [r3, #8]
 80035c6:	e00c      	b.n	80035e2 <HAL_ADC_Start+0x14a>
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	681b      	ldr	r3, [r3, #0]
 80035cc:	689a      	ldr	r2, [r3, #8]
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 80035d6:	609a      	str	r2, [r3, #8]
 80035d8:	e003      	b.n	80035e2 <HAL_ADC_Start+0x14a>
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	2200      	movs	r2, #0
 80035de:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80035e2:	7bfb      	ldrb	r3, [r7, #15]
 80035e4:	4618      	mov	r0, r3
 80035e6:	3710      	adds	r7, #16
 80035e8:	46bd      	mov	sp, r7
 80035ea:	bd80      	pop	{r7, pc}
 80035ec:	40012800 	.word	0x40012800
 80035f0:	40012400 	.word	0x40012400

080035f4 <HAL_ADC_Stop>:
 80035f4:	b580      	push	{r7, lr}
 80035f6:	b084      	sub	sp, #16
 80035f8:	af00      	add	r7, sp, #0
 80035fa:	6078      	str	r0, [r7, #4]
 80035fc:	2300      	movs	r3, #0
 80035fe:	73fb      	strb	r3, [r7, #15]
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8003606:	2b01      	cmp	r3, #1
 8003608:	d101      	bne.n	800360e <HAL_ADC_Stop+0x1a>
 800360a:	2302      	movs	r3, #2
 800360c:	e01a      	b.n	8003644 <HAL_ADC_Stop+0x50>
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	2201      	movs	r2, #1
 8003612:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003616:	6878      	ldr	r0, [r7, #4]
 8003618:	f000 fa7c 	bl	8003b14 <ADC_ConversionStop_Disable>
 800361c:	4603      	mov	r3, r0
 800361e:	73fb      	strb	r3, [r7, #15]
 8003620:	7bfb      	ldrb	r3, [r7, #15]
 8003622:	2b00      	cmp	r3, #0
 8003624:	d109      	bne.n	800363a <HAL_ADC_Stop+0x46>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800362a:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800362e:	f023 0301 	bic.w	r3, r3, #1
 8003632:	f043 0201 	orr.w	r2, r3, #1
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	629a      	str	r2, [r3, #40]	@ 0x28
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	2200      	movs	r2, #0
 800363e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003642:	7bfb      	ldrb	r3, [r7, #15]
 8003644:	4618      	mov	r0, r3
 8003646:	3710      	adds	r7, #16
 8003648:	46bd      	mov	sp, r7
 800364a:	bd80      	pop	{r7, pc}

0800364c <HAL_ADC_PollForConversion>:
 800364c:	b590      	push	{r4, r7, lr}
 800364e:	b087      	sub	sp, #28
 8003650:	af00      	add	r7, sp, #0
 8003652:	6078      	str	r0, [r7, #4]
 8003654:	6039      	str	r1, [r7, #0]
 8003656:	2300      	movs	r3, #0
 8003658:	617b      	str	r3, [r7, #20]
 800365a:	2300      	movs	r3, #0
 800365c:	60fb      	str	r3, [r7, #12]
 800365e:	2300      	movs	r3, #0
 8003660:	613b      	str	r3, [r7, #16]
 8003662:	f7ff fe13 	bl	800328c <HAL_GetTick>
 8003666:	6178      	str	r0, [r7, #20]
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	689b      	ldr	r3, [r3, #8]
 800366e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003672:	2b00      	cmp	r3, #0
 8003674:	d00b      	beq.n	800368e <HAL_ADC_PollForConversion+0x42>
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800367a:	f043 0220 	orr.w	r2, r3, #32
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	629a      	str	r2, [r3, #40]	@ 0x28
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	2200      	movs	r2, #0
 8003686:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800368a:	2301      	movs	r3, #1
 800368c:	e0d3      	b.n	8003836 <HAL_ADC_PollForConversion+0x1ea>
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	685b      	ldr	r3, [r3, #4]
 8003694:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003698:	2b00      	cmp	r3, #0
 800369a:	d131      	bne.n	8003700 <HAL_ADC_PollForConversion+0xb4>
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80036a2:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 80036a6:	2b00      	cmp	r3, #0
 80036a8:	d12a      	bne.n	8003700 <HAL_ADC_PollForConversion+0xb4>
 80036aa:	e021      	b.n	80036f0 <HAL_ADC_PollForConversion+0xa4>
 80036ac:	683b      	ldr	r3, [r7, #0]
 80036ae:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80036b2:	d01d      	beq.n	80036f0 <HAL_ADC_PollForConversion+0xa4>
 80036b4:	683b      	ldr	r3, [r7, #0]
 80036b6:	2b00      	cmp	r3, #0
 80036b8:	d007      	beq.n	80036ca <HAL_ADC_PollForConversion+0x7e>
 80036ba:	f7ff fde7 	bl	800328c <HAL_GetTick>
 80036be:	4602      	mov	r2, r0
 80036c0:	697b      	ldr	r3, [r7, #20]
 80036c2:	1ad3      	subs	r3, r2, r3
 80036c4:	683a      	ldr	r2, [r7, #0]
 80036c6:	429a      	cmp	r2, r3
 80036c8:	d212      	bcs.n	80036f0 <HAL_ADC_PollForConversion+0xa4>
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	f003 0302 	and.w	r3, r3, #2
 80036d4:	2b00      	cmp	r3, #0
 80036d6:	d10b      	bne.n	80036f0 <HAL_ADC_PollForConversion+0xa4>
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80036dc:	f043 0204 	orr.w	r2, r3, #4
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	629a      	str	r2, [r3, #40]	@ 0x28
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	2200      	movs	r2, #0
 80036e8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80036ec:	2303      	movs	r3, #3
 80036ee:	e0a2      	b.n	8003836 <HAL_ADC_PollForConversion+0x1ea>
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	f003 0302 	and.w	r3, r3, #2
 80036fa:	2b00      	cmp	r3, #0
 80036fc:	d0d6      	beq.n	80036ac <HAL_ADC_PollForConversion+0x60>
 80036fe:	e070      	b.n	80037e2 <HAL_ADC_PollForConversion+0x196>
 8003700:	4b4f      	ldr	r3, [pc, #316]	@ (8003840 <HAL_ADC_PollForConversion+0x1f4>)
 8003702:	681c      	ldr	r4, [r3, #0]
 8003704:	2002      	movs	r0, #2
 8003706:	f001 fd51 	bl	80051ac <HAL_RCCEx_GetPeriphCLKFreq>
 800370a:	4603      	mov	r3, r0
 800370c:	fbb4 f2f3 	udiv	r2, r4, r3
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	681b      	ldr	r3, [r3, #0]
 8003714:	6919      	ldr	r1, [r3, #16]
 8003716:	4b4b      	ldr	r3, [pc, #300]	@ (8003844 <HAL_ADC_PollForConversion+0x1f8>)
 8003718:	400b      	ands	r3, r1
 800371a:	2b00      	cmp	r3, #0
 800371c:	d118      	bne.n	8003750 <HAL_ADC_PollForConversion+0x104>
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	681b      	ldr	r3, [r3, #0]
 8003722:	68d9      	ldr	r1, [r3, #12]
 8003724:	4b48      	ldr	r3, [pc, #288]	@ (8003848 <HAL_ADC_PollForConversion+0x1fc>)
 8003726:	400b      	ands	r3, r1
 8003728:	2b00      	cmp	r3, #0
 800372a:	d111      	bne.n	8003750 <HAL_ADC_PollForConversion+0x104>
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	6919      	ldr	r1, [r3, #16]
 8003732:	4b46      	ldr	r3, [pc, #280]	@ (800384c <HAL_ADC_PollForConversion+0x200>)
 8003734:	400b      	ands	r3, r1
 8003736:	2b00      	cmp	r3, #0
 8003738:	d108      	bne.n	800374c <HAL_ADC_PollForConversion+0x100>
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	68d9      	ldr	r1, [r3, #12]
 8003740:	4b43      	ldr	r3, [pc, #268]	@ (8003850 <HAL_ADC_PollForConversion+0x204>)
 8003742:	400b      	ands	r3, r1
 8003744:	2b00      	cmp	r3, #0
 8003746:	d101      	bne.n	800374c <HAL_ADC_PollForConversion+0x100>
 8003748:	2314      	movs	r3, #20
 800374a:	e020      	b.n	800378e <HAL_ADC_PollForConversion+0x142>
 800374c:	2329      	movs	r3, #41	@ 0x29
 800374e:	e01e      	b.n	800378e <HAL_ADC_PollForConversion+0x142>
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	6919      	ldr	r1, [r3, #16]
 8003756:	4b3d      	ldr	r3, [pc, #244]	@ (800384c <HAL_ADC_PollForConversion+0x200>)
 8003758:	400b      	ands	r3, r1
 800375a:	2b00      	cmp	r3, #0
 800375c:	d106      	bne.n	800376c <HAL_ADC_PollForConversion+0x120>
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	68d9      	ldr	r1, [r3, #12]
 8003764:	4b3a      	ldr	r3, [pc, #232]	@ (8003850 <HAL_ADC_PollForConversion+0x204>)
 8003766:	400b      	ands	r3, r1
 8003768:	2b00      	cmp	r3, #0
 800376a:	d00d      	beq.n	8003788 <HAL_ADC_PollForConversion+0x13c>
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	681b      	ldr	r3, [r3, #0]
 8003770:	6919      	ldr	r1, [r3, #16]
 8003772:	4b38      	ldr	r3, [pc, #224]	@ (8003854 <HAL_ADC_PollForConversion+0x208>)
 8003774:	400b      	ands	r3, r1
 8003776:	2b00      	cmp	r3, #0
 8003778:	d108      	bne.n	800378c <HAL_ADC_PollForConversion+0x140>
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	68d9      	ldr	r1, [r3, #12]
 8003780:	4b34      	ldr	r3, [pc, #208]	@ (8003854 <HAL_ADC_PollForConversion+0x208>)
 8003782:	400b      	ands	r3, r1
 8003784:	2b00      	cmp	r3, #0
 8003786:	d101      	bne.n	800378c <HAL_ADC_PollForConversion+0x140>
 8003788:	2354      	movs	r3, #84	@ 0x54
 800378a:	e000      	b.n	800378e <HAL_ADC_PollForConversion+0x142>
 800378c:	23fc      	movs	r3, #252	@ 0xfc
 800378e:	fb02 f303 	mul.w	r3, r2, r3
 8003792:	613b      	str	r3, [r7, #16]
 8003794:	e021      	b.n	80037da <HAL_ADC_PollForConversion+0x18e>
 8003796:	683b      	ldr	r3, [r7, #0]
 8003798:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800379c:	d01a      	beq.n	80037d4 <HAL_ADC_PollForConversion+0x188>
 800379e:	683b      	ldr	r3, [r7, #0]
 80037a0:	2b00      	cmp	r3, #0
 80037a2:	d007      	beq.n	80037b4 <HAL_ADC_PollForConversion+0x168>
 80037a4:	f7ff fd72 	bl	800328c <HAL_GetTick>
 80037a8:	4602      	mov	r2, r0
 80037aa:	697b      	ldr	r3, [r7, #20]
 80037ac:	1ad3      	subs	r3, r2, r3
 80037ae:	683a      	ldr	r2, [r7, #0]
 80037b0:	429a      	cmp	r2, r3
 80037b2:	d20f      	bcs.n	80037d4 <HAL_ADC_PollForConversion+0x188>
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	693a      	ldr	r2, [r7, #16]
 80037b8:	429a      	cmp	r2, r3
 80037ba:	d90b      	bls.n	80037d4 <HAL_ADC_PollForConversion+0x188>
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80037c0:	f043 0204 	orr.w	r2, r3, #4
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	629a      	str	r2, [r3, #40]	@ 0x28
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	2200      	movs	r2, #0
 80037cc:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80037d0:	2303      	movs	r3, #3
 80037d2:	e030      	b.n	8003836 <HAL_ADC_PollForConversion+0x1ea>
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	3301      	adds	r3, #1
 80037d8:	60fb      	str	r3, [r7, #12]
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	693a      	ldr	r2, [r7, #16]
 80037de:	429a      	cmp	r2, r3
 80037e0:	d8d9      	bhi.n	8003796 <HAL_ADC_PollForConversion+0x14a>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	f06f 0212 	mvn.w	r2, #18
 80037ea:	601a      	str	r2, [r3, #0]
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80037f0:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	629a      	str	r2, [r3, #40]	@ 0x28
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	681b      	ldr	r3, [r3, #0]
 80037fc:	689b      	ldr	r3, [r3, #8]
 80037fe:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8003802:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8003806:	d115      	bne.n	8003834 <HAL_ADC_PollForConversion+0x1e8>
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	7b1b      	ldrb	r3, [r3, #12]
 800380c:	2b00      	cmp	r3, #0
 800380e:	d111      	bne.n	8003834 <HAL_ADC_PollForConversion+0x1e8>
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003814:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	629a      	str	r2, [r3, #40]	@ 0x28
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003820:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003824:	2b00      	cmp	r3, #0
 8003826:	d105      	bne.n	8003834 <HAL_ADC_PollForConversion+0x1e8>
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800382c:	f043 0201 	orr.w	r2, r3, #1
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	629a      	str	r2, [r3, #40]	@ 0x28
 8003834:	2300      	movs	r3, #0
 8003836:	4618      	mov	r0, r3
 8003838:	371c      	adds	r7, #28
 800383a:	46bd      	mov	sp, r7
 800383c:	bd90      	pop	{r4, r7, pc}
 800383e:	bf00      	nop
 8003840:	2000006c 	.word	0x2000006c
 8003844:	24924924 	.word	0x24924924
 8003848:	00924924 	.word	0x00924924
 800384c:	12492492 	.word	0x12492492
 8003850:	00492492 	.word	0x00492492
 8003854:	00249249 	.word	0x00249249

08003858 <HAL_ADC_GetValue>:
 8003858:	b480      	push	{r7}
 800385a:	b083      	sub	sp, #12
 800385c:	af00      	add	r7, sp, #0
 800385e:	6078      	str	r0, [r7, #4]
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003866:	4618      	mov	r0, r3
 8003868:	370c      	adds	r7, #12
 800386a:	46bd      	mov	sp, r7
 800386c:	bc80      	pop	{r7}
 800386e:	4770      	bx	lr

08003870 <HAL_ADC_ConfigChannel>:
 8003870:	b480      	push	{r7}
 8003872:	b085      	sub	sp, #20
 8003874:	af00      	add	r7, sp, #0
 8003876:	6078      	str	r0, [r7, #4]
 8003878:	6039      	str	r1, [r7, #0]
 800387a:	2300      	movs	r3, #0
 800387c:	73fb      	strb	r3, [r7, #15]
 800387e:	2300      	movs	r3, #0
 8003880:	60bb      	str	r3, [r7, #8]
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8003888:	2b01      	cmp	r3, #1
 800388a:	d101      	bne.n	8003890 <HAL_ADC_ConfigChannel+0x20>
 800388c:	2302      	movs	r3, #2
 800388e:	e0dc      	b.n	8003a4a <HAL_ADC_ConfigChannel+0x1da>
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	2201      	movs	r2, #1
 8003894:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003898:	683b      	ldr	r3, [r7, #0]
 800389a:	685b      	ldr	r3, [r3, #4]
 800389c:	2b06      	cmp	r3, #6
 800389e:	d81c      	bhi.n	80038da <HAL_ADC_ConfigChannel+0x6a>
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80038a6:	683b      	ldr	r3, [r7, #0]
 80038a8:	685a      	ldr	r2, [r3, #4]
 80038aa:	4613      	mov	r3, r2
 80038ac:	009b      	lsls	r3, r3, #2
 80038ae:	4413      	add	r3, r2
 80038b0:	3b05      	subs	r3, #5
 80038b2:	221f      	movs	r2, #31
 80038b4:	fa02 f303 	lsl.w	r3, r2, r3
 80038b8:	43db      	mvns	r3, r3
 80038ba:	4019      	ands	r1, r3
 80038bc:	683b      	ldr	r3, [r7, #0]
 80038be:	6818      	ldr	r0, [r3, #0]
 80038c0:	683b      	ldr	r3, [r7, #0]
 80038c2:	685a      	ldr	r2, [r3, #4]
 80038c4:	4613      	mov	r3, r2
 80038c6:	009b      	lsls	r3, r3, #2
 80038c8:	4413      	add	r3, r2
 80038ca:	3b05      	subs	r3, #5
 80038cc:	fa00 f203 	lsl.w	r2, r0, r3
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	681b      	ldr	r3, [r3, #0]
 80038d4:	430a      	orrs	r2, r1
 80038d6:	635a      	str	r2, [r3, #52]	@ 0x34
 80038d8:	e03c      	b.n	8003954 <HAL_ADC_ConfigChannel+0xe4>
 80038da:	683b      	ldr	r3, [r7, #0]
 80038dc:	685b      	ldr	r3, [r3, #4]
 80038de:	2b0c      	cmp	r3, #12
 80038e0:	d81c      	bhi.n	800391c <HAL_ADC_ConfigChannel+0xac>
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	681b      	ldr	r3, [r3, #0]
 80038e6:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80038e8:	683b      	ldr	r3, [r7, #0]
 80038ea:	685a      	ldr	r2, [r3, #4]
 80038ec:	4613      	mov	r3, r2
 80038ee:	009b      	lsls	r3, r3, #2
 80038f0:	4413      	add	r3, r2
 80038f2:	3b23      	subs	r3, #35	@ 0x23
 80038f4:	221f      	movs	r2, #31
 80038f6:	fa02 f303 	lsl.w	r3, r2, r3
 80038fa:	43db      	mvns	r3, r3
 80038fc:	4019      	ands	r1, r3
 80038fe:	683b      	ldr	r3, [r7, #0]
 8003900:	6818      	ldr	r0, [r3, #0]
 8003902:	683b      	ldr	r3, [r7, #0]
 8003904:	685a      	ldr	r2, [r3, #4]
 8003906:	4613      	mov	r3, r2
 8003908:	009b      	lsls	r3, r3, #2
 800390a:	4413      	add	r3, r2
 800390c:	3b23      	subs	r3, #35	@ 0x23
 800390e:	fa00 f203 	lsl.w	r2, r0, r3
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	430a      	orrs	r2, r1
 8003918:	631a      	str	r2, [r3, #48]	@ 0x30
 800391a:	e01b      	b.n	8003954 <HAL_ADC_ConfigChannel+0xe4>
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003922:	683b      	ldr	r3, [r7, #0]
 8003924:	685a      	ldr	r2, [r3, #4]
 8003926:	4613      	mov	r3, r2
 8003928:	009b      	lsls	r3, r3, #2
 800392a:	4413      	add	r3, r2
 800392c:	3b41      	subs	r3, #65	@ 0x41
 800392e:	221f      	movs	r2, #31
 8003930:	fa02 f303 	lsl.w	r3, r2, r3
 8003934:	43db      	mvns	r3, r3
 8003936:	4019      	ands	r1, r3
 8003938:	683b      	ldr	r3, [r7, #0]
 800393a:	6818      	ldr	r0, [r3, #0]
 800393c:	683b      	ldr	r3, [r7, #0]
 800393e:	685a      	ldr	r2, [r3, #4]
 8003940:	4613      	mov	r3, r2
 8003942:	009b      	lsls	r3, r3, #2
 8003944:	4413      	add	r3, r2
 8003946:	3b41      	subs	r3, #65	@ 0x41
 8003948:	fa00 f203 	lsl.w	r2, r0, r3
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	430a      	orrs	r2, r1
 8003952:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003954:	683b      	ldr	r3, [r7, #0]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	2b09      	cmp	r3, #9
 800395a:	d91c      	bls.n	8003996 <HAL_ADC_ConfigChannel+0x126>
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	68d9      	ldr	r1, [r3, #12]
 8003962:	683b      	ldr	r3, [r7, #0]
 8003964:	681a      	ldr	r2, [r3, #0]
 8003966:	4613      	mov	r3, r2
 8003968:	005b      	lsls	r3, r3, #1
 800396a:	4413      	add	r3, r2
 800396c:	3b1e      	subs	r3, #30
 800396e:	2207      	movs	r2, #7
 8003970:	fa02 f303 	lsl.w	r3, r2, r3
 8003974:	43db      	mvns	r3, r3
 8003976:	4019      	ands	r1, r3
 8003978:	683b      	ldr	r3, [r7, #0]
 800397a:	6898      	ldr	r0, [r3, #8]
 800397c:	683b      	ldr	r3, [r7, #0]
 800397e:	681a      	ldr	r2, [r3, #0]
 8003980:	4613      	mov	r3, r2
 8003982:	005b      	lsls	r3, r3, #1
 8003984:	4413      	add	r3, r2
 8003986:	3b1e      	subs	r3, #30
 8003988:	fa00 f203 	lsl.w	r2, r0, r3
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	430a      	orrs	r2, r1
 8003992:	60da      	str	r2, [r3, #12]
 8003994:	e019      	b.n	80039ca <HAL_ADC_ConfigChannel+0x15a>
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	681b      	ldr	r3, [r3, #0]
 800399a:	6919      	ldr	r1, [r3, #16]
 800399c:	683b      	ldr	r3, [r7, #0]
 800399e:	681a      	ldr	r2, [r3, #0]
 80039a0:	4613      	mov	r3, r2
 80039a2:	005b      	lsls	r3, r3, #1
 80039a4:	4413      	add	r3, r2
 80039a6:	2207      	movs	r2, #7
 80039a8:	fa02 f303 	lsl.w	r3, r2, r3
 80039ac:	43db      	mvns	r3, r3
 80039ae:	4019      	ands	r1, r3
 80039b0:	683b      	ldr	r3, [r7, #0]
 80039b2:	6898      	ldr	r0, [r3, #8]
 80039b4:	683b      	ldr	r3, [r7, #0]
 80039b6:	681a      	ldr	r2, [r3, #0]
 80039b8:	4613      	mov	r3, r2
 80039ba:	005b      	lsls	r3, r3, #1
 80039bc:	4413      	add	r3, r2
 80039be:	fa00 f203 	lsl.w	r2, r0, r3
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	430a      	orrs	r2, r1
 80039c8:	611a      	str	r2, [r3, #16]
 80039ca:	683b      	ldr	r3, [r7, #0]
 80039cc:	681b      	ldr	r3, [r3, #0]
 80039ce:	2b10      	cmp	r3, #16
 80039d0:	d003      	beq.n	80039da <HAL_ADC_ConfigChannel+0x16a>
 80039d2:	683b      	ldr	r3, [r7, #0]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	2b11      	cmp	r3, #17
 80039d8:	d132      	bne.n	8003a40 <HAL_ADC_ConfigChannel+0x1d0>
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	4a1d      	ldr	r2, [pc, #116]	@ (8003a54 <HAL_ADC_ConfigChannel+0x1e4>)
 80039e0:	4293      	cmp	r3, r2
 80039e2:	d125      	bne.n	8003a30 <HAL_ADC_ConfigChannel+0x1c0>
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	689b      	ldr	r3, [r3, #8]
 80039ea:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80039ee:	2b00      	cmp	r3, #0
 80039f0:	d126      	bne.n	8003a40 <HAL_ADC_ConfigChannel+0x1d0>
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	681b      	ldr	r3, [r3, #0]
 80039f6:	689a      	ldr	r2, [r3, #8]
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8003a00:	609a      	str	r2, [r3, #8]
 8003a02:	683b      	ldr	r3, [r7, #0]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	2b10      	cmp	r3, #16
 8003a08:	d11a      	bne.n	8003a40 <HAL_ADC_ConfigChannel+0x1d0>
 8003a0a:	4b13      	ldr	r3, [pc, #76]	@ (8003a58 <HAL_ADC_ConfigChannel+0x1e8>)
 8003a0c:	681b      	ldr	r3, [r3, #0]
 8003a0e:	4a13      	ldr	r2, [pc, #76]	@ (8003a5c <HAL_ADC_ConfigChannel+0x1ec>)
 8003a10:	fba2 2303 	umull	r2, r3, r2, r3
 8003a14:	0c9a      	lsrs	r2, r3, #18
 8003a16:	4613      	mov	r3, r2
 8003a18:	009b      	lsls	r3, r3, #2
 8003a1a:	4413      	add	r3, r2
 8003a1c:	005b      	lsls	r3, r3, #1
 8003a1e:	60bb      	str	r3, [r7, #8]
 8003a20:	e002      	b.n	8003a28 <HAL_ADC_ConfigChannel+0x1b8>
 8003a22:	68bb      	ldr	r3, [r7, #8]
 8003a24:	3b01      	subs	r3, #1
 8003a26:	60bb      	str	r3, [r7, #8]
 8003a28:	68bb      	ldr	r3, [r7, #8]
 8003a2a:	2b00      	cmp	r3, #0
 8003a2c:	d1f9      	bne.n	8003a22 <HAL_ADC_ConfigChannel+0x1b2>
 8003a2e:	e007      	b.n	8003a40 <HAL_ADC_ConfigChannel+0x1d0>
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003a34:	f043 0220 	orr.w	r2, r3, #32
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	629a      	str	r2, [r3, #40]	@ 0x28
 8003a3c:	2301      	movs	r3, #1
 8003a3e:	73fb      	strb	r3, [r7, #15]
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	2200      	movs	r2, #0
 8003a44:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003a48:	7bfb      	ldrb	r3, [r7, #15]
 8003a4a:	4618      	mov	r0, r3
 8003a4c:	3714      	adds	r7, #20
 8003a4e:	46bd      	mov	sp, r7
 8003a50:	bc80      	pop	{r7}
 8003a52:	4770      	bx	lr
 8003a54:	40012400 	.word	0x40012400
 8003a58:	2000006c 	.word	0x2000006c
 8003a5c:	431bde83 	.word	0x431bde83

08003a60 <ADC_Enable>:
 8003a60:	b580      	push	{r7, lr}
 8003a62:	b084      	sub	sp, #16
 8003a64:	af00      	add	r7, sp, #0
 8003a66:	6078      	str	r0, [r7, #4]
 8003a68:	2300      	movs	r3, #0
 8003a6a:	60fb      	str	r3, [r7, #12]
 8003a6c:	2300      	movs	r3, #0
 8003a6e:	60bb      	str	r3, [r7, #8]
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	689b      	ldr	r3, [r3, #8]
 8003a76:	f003 0301 	and.w	r3, r3, #1
 8003a7a:	2b01      	cmp	r3, #1
 8003a7c:	d040      	beq.n	8003b00 <ADC_Enable+0xa0>
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	681b      	ldr	r3, [r3, #0]
 8003a82:	689a      	ldr	r2, [r3, #8]
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	f042 0201 	orr.w	r2, r2, #1
 8003a8c:	609a      	str	r2, [r3, #8]
 8003a8e:	4b1f      	ldr	r3, [pc, #124]	@ (8003b0c <ADC_Enable+0xac>)
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	4a1f      	ldr	r2, [pc, #124]	@ (8003b10 <ADC_Enable+0xb0>)
 8003a94:	fba2 2303 	umull	r2, r3, r2, r3
 8003a98:	0c9b      	lsrs	r3, r3, #18
 8003a9a:	60bb      	str	r3, [r7, #8]
 8003a9c:	e002      	b.n	8003aa4 <ADC_Enable+0x44>
 8003a9e:	68bb      	ldr	r3, [r7, #8]
 8003aa0:	3b01      	subs	r3, #1
 8003aa2:	60bb      	str	r3, [r7, #8]
 8003aa4:	68bb      	ldr	r3, [r7, #8]
 8003aa6:	2b00      	cmp	r3, #0
 8003aa8:	d1f9      	bne.n	8003a9e <ADC_Enable+0x3e>
 8003aaa:	f7ff fbef 	bl	800328c <HAL_GetTick>
 8003aae:	60f8      	str	r0, [r7, #12]
 8003ab0:	e01f      	b.n	8003af2 <ADC_Enable+0x92>
 8003ab2:	f7ff fbeb 	bl	800328c <HAL_GetTick>
 8003ab6:	4602      	mov	r2, r0
 8003ab8:	68fb      	ldr	r3, [r7, #12]
 8003aba:	1ad3      	subs	r3, r2, r3
 8003abc:	2b02      	cmp	r3, #2
 8003abe:	d918      	bls.n	8003af2 <ADC_Enable+0x92>
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	689b      	ldr	r3, [r3, #8]
 8003ac6:	f003 0301 	and.w	r3, r3, #1
 8003aca:	2b01      	cmp	r3, #1
 8003acc:	d011      	beq.n	8003af2 <ADC_Enable+0x92>
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003ad2:	f043 0210 	orr.w	r2, r3, #16
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	629a      	str	r2, [r3, #40]	@ 0x28
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ade:	f043 0201 	orr.w	r2, r3, #1
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	2200      	movs	r2, #0
 8003aea:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003aee:	2301      	movs	r3, #1
 8003af0:	e007      	b.n	8003b02 <ADC_Enable+0xa2>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	689b      	ldr	r3, [r3, #8]
 8003af8:	f003 0301 	and.w	r3, r3, #1
 8003afc:	2b01      	cmp	r3, #1
 8003afe:	d1d8      	bne.n	8003ab2 <ADC_Enable+0x52>
 8003b00:	2300      	movs	r3, #0
 8003b02:	4618      	mov	r0, r3
 8003b04:	3710      	adds	r7, #16
 8003b06:	46bd      	mov	sp, r7
 8003b08:	bd80      	pop	{r7, pc}
 8003b0a:	bf00      	nop
 8003b0c:	2000006c 	.word	0x2000006c
 8003b10:	431bde83 	.word	0x431bde83

08003b14 <ADC_ConversionStop_Disable>:
 8003b14:	b580      	push	{r7, lr}
 8003b16:	b084      	sub	sp, #16
 8003b18:	af00      	add	r7, sp, #0
 8003b1a:	6078      	str	r0, [r7, #4]
 8003b1c:	2300      	movs	r3, #0
 8003b1e:	60fb      	str	r3, [r7, #12]
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	689b      	ldr	r3, [r3, #8]
 8003b26:	f003 0301 	and.w	r3, r3, #1
 8003b2a:	2b01      	cmp	r3, #1
 8003b2c:	d12e      	bne.n	8003b8c <ADC_ConversionStop_Disable+0x78>
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	689a      	ldr	r2, [r3, #8]
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	681b      	ldr	r3, [r3, #0]
 8003b38:	f022 0201 	bic.w	r2, r2, #1
 8003b3c:	609a      	str	r2, [r3, #8]
 8003b3e:	f7ff fba5 	bl	800328c <HAL_GetTick>
 8003b42:	60f8      	str	r0, [r7, #12]
 8003b44:	e01b      	b.n	8003b7e <ADC_ConversionStop_Disable+0x6a>
 8003b46:	f7ff fba1 	bl	800328c <HAL_GetTick>
 8003b4a:	4602      	mov	r2, r0
 8003b4c:	68fb      	ldr	r3, [r7, #12]
 8003b4e:	1ad3      	subs	r3, r2, r3
 8003b50:	2b02      	cmp	r3, #2
 8003b52:	d914      	bls.n	8003b7e <ADC_ConversionStop_Disable+0x6a>
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	689b      	ldr	r3, [r3, #8]
 8003b5a:	f003 0301 	and.w	r3, r3, #1
 8003b5e:	2b01      	cmp	r3, #1
 8003b60:	d10d      	bne.n	8003b7e <ADC_ConversionStop_Disable+0x6a>
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003b66:	f043 0210 	orr.w	r2, r3, #16
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	629a      	str	r2, [r3, #40]	@ 0x28
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003b72:	f043 0201 	orr.w	r2, r3, #1
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003b7a:	2301      	movs	r3, #1
 8003b7c:	e007      	b.n	8003b8e <ADC_ConversionStop_Disable+0x7a>
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	689b      	ldr	r3, [r3, #8]
 8003b84:	f003 0301 	and.w	r3, r3, #1
 8003b88:	2b01      	cmp	r3, #1
 8003b8a:	d0dc      	beq.n	8003b46 <ADC_ConversionStop_Disable+0x32>
 8003b8c:	2300      	movs	r3, #0
 8003b8e:	4618      	mov	r0, r3
 8003b90:	3710      	adds	r7, #16
 8003b92:	46bd      	mov	sp, r7
 8003b94:	bd80      	pop	{r7, pc}

08003b96 <HAL_CAN_Init>:
 8003b96:	b580      	push	{r7, lr}
 8003b98:	b084      	sub	sp, #16
 8003b9a:	af00      	add	r7, sp, #0
 8003b9c:	6078      	str	r0, [r7, #4]
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	2b00      	cmp	r3, #0
 8003ba2:	d101      	bne.n	8003ba8 <HAL_CAN_Init+0x12>
 8003ba4:	2301      	movs	r3, #1
 8003ba6:	e0ed      	b.n	8003d84 <HAL_CAN_Init+0x1ee>
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003bae:	b2db      	uxtb	r3, r3
 8003bb0:	2b00      	cmp	r3, #0
 8003bb2:	d102      	bne.n	8003bba <HAL_CAN_Init+0x24>
 8003bb4:	6878      	ldr	r0, [r7, #4]
 8003bb6:	f7fe f867 	bl	8001c88 <HAL_CAN_MspInit>
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	681a      	ldr	r2, [r3, #0]
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	681b      	ldr	r3, [r3, #0]
 8003bc4:	f042 0201 	orr.w	r2, r2, #1
 8003bc8:	601a      	str	r2, [r3, #0]
 8003bca:	f7ff fb5f 	bl	800328c <HAL_GetTick>
 8003bce:	60f8      	str	r0, [r7, #12]
 8003bd0:	e012      	b.n	8003bf8 <HAL_CAN_Init+0x62>
 8003bd2:	f7ff fb5b 	bl	800328c <HAL_GetTick>
 8003bd6:	4602      	mov	r2, r0
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	1ad3      	subs	r3, r2, r3
 8003bdc:	2b0a      	cmp	r3, #10
 8003bde:	d90b      	bls.n	8003bf8 <HAL_CAN_Init+0x62>
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003be4:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	625a      	str	r2, [r3, #36]	@ 0x24
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	2205      	movs	r2, #5
 8003bf0:	f883 2020 	strb.w	r2, [r3, #32]
 8003bf4:	2301      	movs	r3, #1
 8003bf6:	e0c5      	b.n	8003d84 <HAL_CAN_Init+0x1ee>
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	685b      	ldr	r3, [r3, #4]
 8003bfe:	f003 0301 	and.w	r3, r3, #1
 8003c02:	2b00      	cmp	r3, #0
 8003c04:	d0e5      	beq.n	8003bd2 <HAL_CAN_Init+0x3c>
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	681b      	ldr	r3, [r3, #0]
 8003c0a:	681a      	ldr	r2, [r3, #0]
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	f022 0202 	bic.w	r2, r2, #2
 8003c14:	601a      	str	r2, [r3, #0]
 8003c16:	f7ff fb39 	bl	800328c <HAL_GetTick>
 8003c1a:	60f8      	str	r0, [r7, #12]
 8003c1c:	e012      	b.n	8003c44 <HAL_CAN_Init+0xae>
 8003c1e:	f7ff fb35 	bl	800328c <HAL_GetTick>
 8003c22:	4602      	mov	r2, r0
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	1ad3      	subs	r3, r2, r3
 8003c28:	2b0a      	cmp	r3, #10
 8003c2a:	d90b      	bls.n	8003c44 <HAL_CAN_Init+0xae>
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c30:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	625a      	str	r2, [r3, #36]	@ 0x24
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	2205      	movs	r2, #5
 8003c3c:	f883 2020 	strb.w	r2, [r3, #32]
 8003c40:	2301      	movs	r3, #1
 8003c42:	e09f      	b.n	8003d84 <HAL_CAN_Init+0x1ee>
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	685b      	ldr	r3, [r3, #4]
 8003c4a:	f003 0302 	and.w	r3, r3, #2
 8003c4e:	2b00      	cmp	r3, #0
 8003c50:	d1e5      	bne.n	8003c1e <HAL_CAN_Init+0x88>
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	7e1b      	ldrb	r3, [r3, #24]
 8003c56:	2b01      	cmp	r3, #1
 8003c58:	d108      	bne.n	8003c6c <HAL_CAN_Init+0xd6>
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	681a      	ldr	r2, [r3, #0]
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8003c68:	601a      	str	r2, [r3, #0]
 8003c6a:	e007      	b.n	8003c7c <HAL_CAN_Init+0xe6>
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	681a      	ldr	r2, [r3, #0]
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	681b      	ldr	r3, [r3, #0]
 8003c76:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003c7a:	601a      	str	r2, [r3, #0]
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	7e5b      	ldrb	r3, [r3, #25]
 8003c80:	2b01      	cmp	r3, #1
 8003c82:	d108      	bne.n	8003c96 <HAL_CAN_Init+0x100>
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	681b      	ldr	r3, [r3, #0]
 8003c88:	681a      	ldr	r2, [r3, #0]
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003c92:	601a      	str	r2, [r3, #0]
 8003c94:	e007      	b.n	8003ca6 <HAL_CAN_Init+0x110>
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	681b      	ldr	r3, [r3, #0]
 8003c9a:	681a      	ldr	r2, [r3, #0]
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003ca4:	601a      	str	r2, [r3, #0]
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	7e9b      	ldrb	r3, [r3, #26]
 8003caa:	2b01      	cmp	r3, #1
 8003cac:	d108      	bne.n	8003cc0 <HAL_CAN_Init+0x12a>
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	681a      	ldr	r2, [r3, #0]
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	f042 0220 	orr.w	r2, r2, #32
 8003cbc:	601a      	str	r2, [r3, #0]
 8003cbe:	e007      	b.n	8003cd0 <HAL_CAN_Init+0x13a>
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	681a      	ldr	r2, [r3, #0]
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	f022 0220 	bic.w	r2, r2, #32
 8003cce:	601a      	str	r2, [r3, #0]
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	7edb      	ldrb	r3, [r3, #27]
 8003cd4:	2b01      	cmp	r3, #1
 8003cd6:	d108      	bne.n	8003cea <HAL_CAN_Init+0x154>
 8003cd8:	687b      	ldr	r3, [r7, #4]
 8003cda:	681b      	ldr	r3, [r3, #0]
 8003cdc:	681a      	ldr	r2, [r3, #0]
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	f022 0210 	bic.w	r2, r2, #16
 8003ce6:	601a      	str	r2, [r3, #0]
 8003ce8:	e007      	b.n	8003cfa <HAL_CAN_Init+0x164>
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	681a      	ldr	r2, [r3, #0]
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	f042 0210 	orr.w	r2, r2, #16
 8003cf8:	601a      	str	r2, [r3, #0]
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	7f1b      	ldrb	r3, [r3, #28]
 8003cfe:	2b01      	cmp	r3, #1
 8003d00:	d108      	bne.n	8003d14 <HAL_CAN_Init+0x17e>
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	681a      	ldr	r2, [r3, #0]
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	681b      	ldr	r3, [r3, #0]
 8003d0c:	f042 0208 	orr.w	r2, r2, #8
 8003d10:	601a      	str	r2, [r3, #0]
 8003d12:	e007      	b.n	8003d24 <HAL_CAN_Init+0x18e>
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	681b      	ldr	r3, [r3, #0]
 8003d18:	681a      	ldr	r2, [r3, #0]
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	681b      	ldr	r3, [r3, #0]
 8003d1e:	f022 0208 	bic.w	r2, r2, #8
 8003d22:	601a      	str	r2, [r3, #0]
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	7f5b      	ldrb	r3, [r3, #29]
 8003d28:	2b01      	cmp	r3, #1
 8003d2a:	d108      	bne.n	8003d3e <HAL_CAN_Init+0x1a8>
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	681a      	ldr	r2, [r3, #0]
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	f042 0204 	orr.w	r2, r2, #4
 8003d3a:	601a      	str	r2, [r3, #0]
 8003d3c:	e007      	b.n	8003d4e <HAL_CAN_Init+0x1b8>
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	681a      	ldr	r2, [r3, #0]
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	f022 0204 	bic.w	r2, r2, #4
 8003d4c:	601a      	str	r2, [r3, #0]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	689a      	ldr	r2, [r3, #8]
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	68db      	ldr	r3, [r3, #12]
 8003d56:	431a      	orrs	r2, r3
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	691b      	ldr	r3, [r3, #16]
 8003d5c:	431a      	orrs	r2, r3
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	695b      	ldr	r3, [r3, #20]
 8003d62:	ea42 0103 	orr.w	r1, r2, r3
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	685b      	ldr	r3, [r3, #4]
 8003d6a:	1e5a      	subs	r2, r3, #1
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	430a      	orrs	r2, r1
 8003d72:	61da      	str	r2, [r3, #28]
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	2200      	movs	r2, #0
 8003d78:	625a      	str	r2, [r3, #36]	@ 0x24
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	2201      	movs	r2, #1
 8003d7e:	f883 2020 	strb.w	r2, [r3, #32]
 8003d82:	2300      	movs	r3, #0
 8003d84:	4618      	mov	r0, r3
 8003d86:	3710      	adds	r7, #16
 8003d88:	46bd      	mov	sp, r7
 8003d8a:	bd80      	pop	{r7, pc}

08003d8c <HAL_CAN_Start>:
 8003d8c:	b580      	push	{r7, lr}
 8003d8e:	b084      	sub	sp, #16
 8003d90:	af00      	add	r7, sp, #0
 8003d92:	6078      	str	r0, [r7, #4]
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003d9a:	b2db      	uxtb	r3, r3
 8003d9c:	2b01      	cmp	r3, #1
 8003d9e:	d12e      	bne.n	8003dfe <HAL_CAN_Start+0x72>
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	2202      	movs	r2, #2
 8003da4:	f883 2020 	strb.w	r2, [r3, #32]
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	681a      	ldr	r2, [r3, #0]
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	f022 0201 	bic.w	r2, r2, #1
 8003db6:	601a      	str	r2, [r3, #0]
 8003db8:	f7ff fa68 	bl	800328c <HAL_GetTick>
 8003dbc:	60f8      	str	r0, [r7, #12]
 8003dbe:	e012      	b.n	8003de6 <HAL_CAN_Start+0x5a>
 8003dc0:	f7ff fa64 	bl	800328c <HAL_GetTick>
 8003dc4:	4602      	mov	r2, r0
 8003dc6:	68fb      	ldr	r3, [r7, #12]
 8003dc8:	1ad3      	subs	r3, r2, r3
 8003dca:	2b0a      	cmp	r3, #10
 8003dcc:	d90b      	bls.n	8003de6 <HAL_CAN_Start+0x5a>
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003dd2:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	625a      	str	r2, [r3, #36]	@ 0x24
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	2205      	movs	r2, #5
 8003dde:	f883 2020 	strb.w	r2, [r3, #32]
 8003de2:	2301      	movs	r3, #1
 8003de4:	e012      	b.n	8003e0c <HAL_CAN_Start+0x80>
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	685b      	ldr	r3, [r3, #4]
 8003dec:	f003 0301 	and.w	r3, r3, #1
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	d1e5      	bne.n	8003dc0 <HAL_CAN_Start+0x34>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	2200      	movs	r2, #0
 8003df8:	625a      	str	r2, [r3, #36]	@ 0x24
 8003dfa:	2300      	movs	r3, #0
 8003dfc:	e006      	b.n	8003e0c <HAL_CAN_Start+0x80>
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e02:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	625a      	str	r2, [r3, #36]	@ 0x24
 8003e0a:	2301      	movs	r3, #1
 8003e0c:	4618      	mov	r0, r3
 8003e0e:	3710      	adds	r7, #16
 8003e10:	46bd      	mov	sp, r7
 8003e12:	bd80      	pop	{r7, pc}

08003e14 <HAL_CAN_AddTxMessage>:
 8003e14:	b480      	push	{r7}
 8003e16:	b089      	sub	sp, #36	@ 0x24
 8003e18:	af00      	add	r7, sp, #0
 8003e1a:	60f8      	str	r0, [r7, #12]
 8003e1c:	60b9      	str	r1, [r7, #8]
 8003e1e:	607a      	str	r2, [r7, #4]
 8003e20:	603b      	str	r3, [r7, #0]
 8003e22:	68fb      	ldr	r3, [r7, #12]
 8003e24:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003e28:	77fb      	strb	r3, [r7, #31]
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	689b      	ldr	r3, [r3, #8]
 8003e30:	61bb      	str	r3, [r7, #24]
 8003e32:	7ffb      	ldrb	r3, [r7, #31]
 8003e34:	2b01      	cmp	r3, #1
 8003e36:	d003      	beq.n	8003e40 <HAL_CAN_AddTxMessage+0x2c>
 8003e38:	7ffb      	ldrb	r3, [r7, #31]
 8003e3a:	2b02      	cmp	r3, #2
 8003e3c:	f040 80ad 	bne.w	8003f9a <HAL_CAN_AddTxMessage+0x186>
 8003e40:	69bb      	ldr	r3, [r7, #24]
 8003e42:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8003e46:	2b00      	cmp	r3, #0
 8003e48:	d10a      	bne.n	8003e60 <HAL_CAN_AddTxMessage+0x4c>
 8003e4a:	69bb      	ldr	r3, [r7, #24]
 8003e4c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	d105      	bne.n	8003e60 <HAL_CAN_AddTxMessage+0x4c>
 8003e54:	69bb      	ldr	r3, [r7, #24]
 8003e56:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003e5a:	2b00      	cmp	r3, #0
 8003e5c:	f000 8095 	beq.w	8003f8a <HAL_CAN_AddTxMessage+0x176>
 8003e60:	69bb      	ldr	r3, [r7, #24]
 8003e62:	0e1b      	lsrs	r3, r3, #24
 8003e64:	f003 0303 	and.w	r3, r3, #3
 8003e68:	617b      	str	r3, [r7, #20]
 8003e6a:	2201      	movs	r2, #1
 8003e6c:	697b      	ldr	r3, [r7, #20]
 8003e6e:	409a      	lsls	r2, r3
 8003e70:	683b      	ldr	r3, [r7, #0]
 8003e72:	601a      	str	r2, [r3, #0]
 8003e74:	68bb      	ldr	r3, [r7, #8]
 8003e76:	689b      	ldr	r3, [r3, #8]
 8003e78:	2b00      	cmp	r3, #0
 8003e7a:	d10d      	bne.n	8003e98 <HAL_CAN_AddTxMessage+0x84>
 8003e7c:	68bb      	ldr	r3, [r7, #8]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	055a      	lsls	r2, r3, #21
 8003e82:	68bb      	ldr	r3, [r7, #8]
 8003e84:	68db      	ldr	r3, [r3, #12]
 8003e86:	68f9      	ldr	r1, [r7, #12]
 8003e88:	6809      	ldr	r1, [r1, #0]
 8003e8a:	431a      	orrs	r2, r3
 8003e8c:	697b      	ldr	r3, [r7, #20]
 8003e8e:	3318      	adds	r3, #24
 8003e90:	011b      	lsls	r3, r3, #4
 8003e92:	440b      	add	r3, r1
 8003e94:	601a      	str	r2, [r3, #0]
 8003e96:	e00f      	b.n	8003eb8 <HAL_CAN_AddTxMessage+0xa4>
 8003e98:	68bb      	ldr	r3, [r7, #8]
 8003e9a:	685b      	ldr	r3, [r3, #4]
 8003e9c:	00da      	lsls	r2, r3, #3
 8003e9e:	68bb      	ldr	r3, [r7, #8]
 8003ea0:	689b      	ldr	r3, [r3, #8]
 8003ea2:	431a      	orrs	r2, r3
 8003ea4:	68bb      	ldr	r3, [r7, #8]
 8003ea6:	68db      	ldr	r3, [r3, #12]
 8003ea8:	68f9      	ldr	r1, [r7, #12]
 8003eaa:	6809      	ldr	r1, [r1, #0]
 8003eac:	431a      	orrs	r2, r3
 8003eae:	697b      	ldr	r3, [r7, #20]
 8003eb0:	3318      	adds	r3, #24
 8003eb2:	011b      	lsls	r3, r3, #4
 8003eb4:	440b      	add	r3, r1
 8003eb6:	601a      	str	r2, [r3, #0]
 8003eb8:	68fb      	ldr	r3, [r7, #12]
 8003eba:	6819      	ldr	r1, [r3, #0]
 8003ebc:	68bb      	ldr	r3, [r7, #8]
 8003ebe:	691a      	ldr	r2, [r3, #16]
 8003ec0:	697b      	ldr	r3, [r7, #20]
 8003ec2:	3318      	adds	r3, #24
 8003ec4:	011b      	lsls	r3, r3, #4
 8003ec6:	440b      	add	r3, r1
 8003ec8:	3304      	adds	r3, #4
 8003eca:	601a      	str	r2, [r3, #0]
 8003ecc:	68bb      	ldr	r3, [r7, #8]
 8003ece:	7d1b      	ldrb	r3, [r3, #20]
 8003ed0:	2b01      	cmp	r3, #1
 8003ed2:	d111      	bne.n	8003ef8 <HAL_CAN_AddTxMessage+0xe4>
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	681a      	ldr	r2, [r3, #0]
 8003ed8:	697b      	ldr	r3, [r7, #20]
 8003eda:	3318      	adds	r3, #24
 8003edc:	011b      	lsls	r3, r3, #4
 8003ede:	4413      	add	r3, r2
 8003ee0:	3304      	adds	r3, #4
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	68fa      	ldr	r2, [r7, #12]
 8003ee6:	6811      	ldr	r1, [r2, #0]
 8003ee8:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8003eec:	697b      	ldr	r3, [r7, #20]
 8003eee:	3318      	adds	r3, #24
 8003ef0:	011b      	lsls	r3, r3, #4
 8003ef2:	440b      	add	r3, r1
 8003ef4:	3304      	adds	r3, #4
 8003ef6:	601a      	str	r2, [r3, #0]
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	3307      	adds	r3, #7
 8003efc:	781b      	ldrb	r3, [r3, #0]
 8003efe:	061a      	lsls	r2, r3, #24
 8003f00:	687b      	ldr	r3, [r7, #4]
 8003f02:	3306      	adds	r3, #6
 8003f04:	781b      	ldrb	r3, [r3, #0]
 8003f06:	041b      	lsls	r3, r3, #16
 8003f08:	431a      	orrs	r2, r3
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	3305      	adds	r3, #5
 8003f0e:	781b      	ldrb	r3, [r3, #0]
 8003f10:	021b      	lsls	r3, r3, #8
 8003f12:	4313      	orrs	r3, r2
 8003f14:	687a      	ldr	r2, [r7, #4]
 8003f16:	3204      	adds	r2, #4
 8003f18:	7812      	ldrb	r2, [r2, #0]
 8003f1a:	4610      	mov	r0, r2
 8003f1c:	68fa      	ldr	r2, [r7, #12]
 8003f1e:	6811      	ldr	r1, [r2, #0]
 8003f20:	ea43 0200 	orr.w	r2, r3, r0
 8003f24:	697b      	ldr	r3, [r7, #20]
 8003f26:	011b      	lsls	r3, r3, #4
 8003f28:	440b      	add	r3, r1
 8003f2a:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 8003f2e:	601a      	str	r2, [r3, #0]
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	3303      	adds	r3, #3
 8003f34:	781b      	ldrb	r3, [r3, #0]
 8003f36:	061a      	lsls	r2, r3, #24
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	3302      	adds	r3, #2
 8003f3c:	781b      	ldrb	r3, [r3, #0]
 8003f3e:	041b      	lsls	r3, r3, #16
 8003f40:	431a      	orrs	r2, r3
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	3301      	adds	r3, #1
 8003f46:	781b      	ldrb	r3, [r3, #0]
 8003f48:	021b      	lsls	r3, r3, #8
 8003f4a:	4313      	orrs	r3, r2
 8003f4c:	687a      	ldr	r2, [r7, #4]
 8003f4e:	7812      	ldrb	r2, [r2, #0]
 8003f50:	4610      	mov	r0, r2
 8003f52:	68fa      	ldr	r2, [r7, #12]
 8003f54:	6811      	ldr	r1, [r2, #0]
 8003f56:	ea43 0200 	orr.w	r2, r3, r0
 8003f5a:	697b      	ldr	r3, [r7, #20]
 8003f5c:	011b      	lsls	r3, r3, #4
 8003f5e:	440b      	add	r3, r1
 8003f60:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 8003f64:	601a      	str	r2, [r3, #0]
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	681a      	ldr	r2, [r3, #0]
 8003f6a:	697b      	ldr	r3, [r7, #20]
 8003f6c:	3318      	adds	r3, #24
 8003f6e:	011b      	lsls	r3, r3, #4
 8003f70:	4413      	add	r3, r2
 8003f72:	681b      	ldr	r3, [r3, #0]
 8003f74:	68fa      	ldr	r2, [r7, #12]
 8003f76:	6811      	ldr	r1, [r2, #0]
 8003f78:	f043 0201 	orr.w	r2, r3, #1
 8003f7c:	697b      	ldr	r3, [r7, #20]
 8003f7e:	3318      	adds	r3, #24
 8003f80:	011b      	lsls	r3, r3, #4
 8003f82:	440b      	add	r3, r1
 8003f84:	601a      	str	r2, [r3, #0]
 8003f86:	2300      	movs	r3, #0
 8003f88:	e00e      	b.n	8003fa8 <HAL_CAN_AddTxMessage+0x194>
 8003f8a:	68fb      	ldr	r3, [r7, #12]
 8003f8c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f8e:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	625a      	str	r2, [r3, #36]	@ 0x24
 8003f96:	2301      	movs	r3, #1
 8003f98:	e006      	b.n	8003fa8 <HAL_CAN_AddTxMessage+0x194>
 8003f9a:	68fb      	ldr	r3, [r7, #12]
 8003f9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f9e:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8003fa2:	68fb      	ldr	r3, [r7, #12]
 8003fa4:	625a      	str	r2, [r3, #36]	@ 0x24
 8003fa6:	2301      	movs	r3, #1
 8003fa8:	4618      	mov	r0, r3
 8003faa:	3724      	adds	r7, #36	@ 0x24
 8003fac:	46bd      	mov	sp, r7
 8003fae:	bc80      	pop	{r7}
 8003fb0:	4770      	bx	lr

08003fb2 <HAL_CAN_ActivateNotification>:
 8003fb2:	b480      	push	{r7}
 8003fb4:	b085      	sub	sp, #20
 8003fb6:	af00      	add	r7, sp, #0
 8003fb8:	6078      	str	r0, [r7, #4]
 8003fba:	6039      	str	r1, [r7, #0]
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003fc2:	73fb      	strb	r3, [r7, #15]
 8003fc4:	7bfb      	ldrb	r3, [r7, #15]
 8003fc6:	2b01      	cmp	r3, #1
 8003fc8:	d002      	beq.n	8003fd0 <HAL_CAN_ActivateNotification+0x1e>
 8003fca:	7bfb      	ldrb	r3, [r7, #15]
 8003fcc:	2b02      	cmp	r3, #2
 8003fce:	d109      	bne.n	8003fe4 <HAL_CAN_ActivateNotification+0x32>
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	6959      	ldr	r1, [r3, #20]
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	683a      	ldr	r2, [r7, #0]
 8003fdc:	430a      	orrs	r2, r1
 8003fde:	615a      	str	r2, [r3, #20]
 8003fe0:	2300      	movs	r3, #0
 8003fe2:	e006      	b.n	8003ff2 <HAL_CAN_ActivateNotification+0x40>
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003fe8:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	625a      	str	r2, [r3, #36]	@ 0x24
 8003ff0:	2301      	movs	r3, #1
 8003ff2:	4618      	mov	r0, r3
 8003ff4:	3714      	adds	r7, #20
 8003ff6:	46bd      	mov	sp, r7
 8003ff8:	bc80      	pop	{r7}
 8003ffa:	4770      	bx	lr

08003ffc <__NVIC_SetPriorityGrouping>:
 8003ffc:	b480      	push	{r7}
 8003ffe:	b085      	sub	sp, #20
 8004000:	af00      	add	r7, sp, #0
 8004002:	6078      	str	r0, [r7, #4]
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	f003 0307 	and.w	r3, r3, #7
 800400a:	60fb      	str	r3, [r7, #12]
 800400c:	4b0c      	ldr	r3, [pc, #48]	@ (8004040 <__NVIC_SetPriorityGrouping+0x44>)
 800400e:	68db      	ldr	r3, [r3, #12]
 8004010:	60bb      	str	r3, [r7, #8]
 8004012:	68ba      	ldr	r2, [r7, #8]
 8004014:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8004018:	4013      	ands	r3, r2
 800401a:	60bb      	str	r3, [r7, #8]
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	021a      	lsls	r2, r3, #8
 8004020:	68bb      	ldr	r3, [r7, #8]
 8004022:	4313      	orrs	r3, r2
 8004024:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004028:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800402c:	60bb      	str	r3, [r7, #8]
 800402e:	4a04      	ldr	r2, [pc, #16]	@ (8004040 <__NVIC_SetPriorityGrouping+0x44>)
 8004030:	68bb      	ldr	r3, [r7, #8]
 8004032:	60d3      	str	r3, [r2, #12]
 8004034:	bf00      	nop
 8004036:	3714      	adds	r7, #20
 8004038:	46bd      	mov	sp, r7
 800403a:	bc80      	pop	{r7}
 800403c:	4770      	bx	lr
 800403e:	bf00      	nop
 8004040:	e000ed00 	.word	0xe000ed00

08004044 <__NVIC_GetPriorityGrouping>:
 8004044:	b480      	push	{r7}
 8004046:	af00      	add	r7, sp, #0
 8004048:	4b04      	ldr	r3, [pc, #16]	@ (800405c <__NVIC_GetPriorityGrouping+0x18>)
 800404a:	68db      	ldr	r3, [r3, #12]
 800404c:	0a1b      	lsrs	r3, r3, #8
 800404e:	f003 0307 	and.w	r3, r3, #7
 8004052:	4618      	mov	r0, r3
 8004054:	46bd      	mov	sp, r7
 8004056:	bc80      	pop	{r7}
 8004058:	4770      	bx	lr
 800405a:	bf00      	nop
 800405c:	e000ed00 	.word	0xe000ed00

08004060 <__NVIC_SetPriority>:
 8004060:	b480      	push	{r7}
 8004062:	b083      	sub	sp, #12
 8004064:	af00      	add	r7, sp, #0
 8004066:	4603      	mov	r3, r0
 8004068:	6039      	str	r1, [r7, #0]
 800406a:	71fb      	strb	r3, [r7, #7]
 800406c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004070:	2b00      	cmp	r3, #0
 8004072:	db0a      	blt.n	800408a <__NVIC_SetPriority+0x2a>
 8004074:	683b      	ldr	r3, [r7, #0]
 8004076:	b2da      	uxtb	r2, r3
 8004078:	490c      	ldr	r1, [pc, #48]	@ (80040ac <__NVIC_SetPriority+0x4c>)
 800407a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800407e:	0112      	lsls	r2, r2, #4
 8004080:	b2d2      	uxtb	r2, r2
 8004082:	440b      	add	r3, r1
 8004084:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8004088:	e00a      	b.n	80040a0 <__NVIC_SetPriority+0x40>
 800408a:	683b      	ldr	r3, [r7, #0]
 800408c:	b2da      	uxtb	r2, r3
 800408e:	4908      	ldr	r1, [pc, #32]	@ (80040b0 <__NVIC_SetPriority+0x50>)
 8004090:	79fb      	ldrb	r3, [r7, #7]
 8004092:	f003 030f 	and.w	r3, r3, #15
 8004096:	3b04      	subs	r3, #4
 8004098:	0112      	lsls	r2, r2, #4
 800409a:	b2d2      	uxtb	r2, r2
 800409c:	440b      	add	r3, r1
 800409e:	761a      	strb	r2, [r3, #24]
 80040a0:	bf00      	nop
 80040a2:	370c      	adds	r7, #12
 80040a4:	46bd      	mov	sp, r7
 80040a6:	bc80      	pop	{r7}
 80040a8:	4770      	bx	lr
 80040aa:	bf00      	nop
 80040ac:	e000e100 	.word	0xe000e100
 80040b0:	e000ed00 	.word	0xe000ed00

080040b4 <NVIC_EncodePriority>:
 80040b4:	b480      	push	{r7}
 80040b6:	b089      	sub	sp, #36	@ 0x24
 80040b8:	af00      	add	r7, sp, #0
 80040ba:	60f8      	str	r0, [r7, #12]
 80040bc:	60b9      	str	r1, [r7, #8]
 80040be:	607a      	str	r2, [r7, #4]
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	f003 0307 	and.w	r3, r3, #7
 80040c6:	61fb      	str	r3, [r7, #28]
 80040c8:	69fb      	ldr	r3, [r7, #28]
 80040ca:	f1c3 0307 	rsb	r3, r3, #7
 80040ce:	2b04      	cmp	r3, #4
 80040d0:	bf28      	it	cs
 80040d2:	2304      	movcs	r3, #4
 80040d4:	61bb      	str	r3, [r7, #24]
 80040d6:	69fb      	ldr	r3, [r7, #28]
 80040d8:	3304      	adds	r3, #4
 80040da:	2b06      	cmp	r3, #6
 80040dc:	d902      	bls.n	80040e4 <NVIC_EncodePriority+0x30>
 80040de:	69fb      	ldr	r3, [r7, #28]
 80040e0:	3b03      	subs	r3, #3
 80040e2:	e000      	b.n	80040e6 <NVIC_EncodePriority+0x32>
 80040e4:	2300      	movs	r3, #0
 80040e6:	617b      	str	r3, [r7, #20]
 80040e8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80040ec:	69bb      	ldr	r3, [r7, #24]
 80040ee:	fa02 f303 	lsl.w	r3, r2, r3
 80040f2:	43da      	mvns	r2, r3
 80040f4:	68bb      	ldr	r3, [r7, #8]
 80040f6:	401a      	ands	r2, r3
 80040f8:	697b      	ldr	r3, [r7, #20]
 80040fa:	409a      	lsls	r2, r3
 80040fc:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8004100:	697b      	ldr	r3, [r7, #20]
 8004102:	fa01 f303 	lsl.w	r3, r1, r3
 8004106:	43d9      	mvns	r1, r3
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	400b      	ands	r3, r1
 800410c:	4313      	orrs	r3, r2
 800410e:	4618      	mov	r0, r3
 8004110:	3724      	adds	r7, #36	@ 0x24
 8004112:	46bd      	mov	sp, r7
 8004114:	bc80      	pop	{r7}
 8004116:	4770      	bx	lr

08004118 <SysTick_Config>:
 8004118:	b580      	push	{r7, lr}
 800411a:	b082      	sub	sp, #8
 800411c:	af00      	add	r7, sp, #0
 800411e:	6078      	str	r0, [r7, #4]
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	3b01      	subs	r3, #1
 8004124:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004128:	d301      	bcc.n	800412e <SysTick_Config+0x16>
 800412a:	2301      	movs	r3, #1
 800412c:	e00f      	b.n	800414e <SysTick_Config+0x36>
 800412e:	4a0a      	ldr	r2, [pc, #40]	@ (8004158 <SysTick_Config+0x40>)
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	3b01      	subs	r3, #1
 8004134:	6053      	str	r3, [r2, #4]
 8004136:	210f      	movs	r1, #15
 8004138:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800413c:	f7ff ff90 	bl	8004060 <__NVIC_SetPriority>
 8004140:	4b05      	ldr	r3, [pc, #20]	@ (8004158 <SysTick_Config+0x40>)
 8004142:	2200      	movs	r2, #0
 8004144:	609a      	str	r2, [r3, #8]
 8004146:	4b04      	ldr	r3, [pc, #16]	@ (8004158 <SysTick_Config+0x40>)
 8004148:	2207      	movs	r2, #7
 800414a:	601a      	str	r2, [r3, #0]
 800414c:	2300      	movs	r3, #0
 800414e:	4618      	mov	r0, r3
 8004150:	3708      	adds	r7, #8
 8004152:	46bd      	mov	sp, r7
 8004154:	bd80      	pop	{r7, pc}
 8004156:	bf00      	nop
 8004158:	e000e010 	.word	0xe000e010

0800415c <HAL_NVIC_SetPriorityGrouping>:
 800415c:	b580      	push	{r7, lr}
 800415e:	b082      	sub	sp, #8
 8004160:	af00      	add	r7, sp, #0
 8004162:	6078      	str	r0, [r7, #4]
 8004164:	6878      	ldr	r0, [r7, #4]
 8004166:	f7ff ff49 	bl	8003ffc <__NVIC_SetPriorityGrouping>
 800416a:	bf00      	nop
 800416c:	3708      	adds	r7, #8
 800416e:	46bd      	mov	sp, r7
 8004170:	bd80      	pop	{r7, pc}

08004172 <HAL_NVIC_SetPriority>:
 8004172:	b580      	push	{r7, lr}
 8004174:	b086      	sub	sp, #24
 8004176:	af00      	add	r7, sp, #0
 8004178:	4603      	mov	r3, r0
 800417a:	60b9      	str	r1, [r7, #8]
 800417c:	607a      	str	r2, [r7, #4]
 800417e:	73fb      	strb	r3, [r7, #15]
 8004180:	2300      	movs	r3, #0
 8004182:	617b      	str	r3, [r7, #20]
 8004184:	f7ff ff5e 	bl	8004044 <__NVIC_GetPriorityGrouping>
 8004188:	6178      	str	r0, [r7, #20]
 800418a:	687a      	ldr	r2, [r7, #4]
 800418c:	68b9      	ldr	r1, [r7, #8]
 800418e:	6978      	ldr	r0, [r7, #20]
 8004190:	f7ff ff90 	bl	80040b4 <NVIC_EncodePriority>
 8004194:	4602      	mov	r2, r0
 8004196:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800419a:	4611      	mov	r1, r2
 800419c:	4618      	mov	r0, r3
 800419e:	f7ff ff5f 	bl	8004060 <__NVIC_SetPriority>
 80041a2:	bf00      	nop
 80041a4:	3718      	adds	r7, #24
 80041a6:	46bd      	mov	sp, r7
 80041a8:	bd80      	pop	{r7, pc}

080041aa <HAL_SYSTICK_Config>:
 80041aa:	b580      	push	{r7, lr}
 80041ac:	b082      	sub	sp, #8
 80041ae:	af00      	add	r7, sp, #0
 80041b0:	6078      	str	r0, [r7, #4]
 80041b2:	6878      	ldr	r0, [r7, #4]
 80041b4:	f7ff ffb0 	bl	8004118 <SysTick_Config>
 80041b8:	4603      	mov	r3, r0
 80041ba:	4618      	mov	r0, r3
 80041bc:	3708      	adds	r7, #8
 80041be:	46bd      	mov	sp, r7
 80041c0:	bd80      	pop	{r7, pc}
	...

080041c4 <HAL_GPIO_Init>:
 80041c4:	b480      	push	{r7}
 80041c6:	b08b      	sub	sp, #44	@ 0x2c
 80041c8:	af00      	add	r7, sp, #0
 80041ca:	6078      	str	r0, [r7, #4]
 80041cc:	6039      	str	r1, [r7, #0]
 80041ce:	2300      	movs	r3, #0
 80041d0:	627b      	str	r3, [r7, #36]	@ 0x24
 80041d2:	2300      	movs	r3, #0
 80041d4:	623b      	str	r3, [r7, #32]
 80041d6:	e169      	b.n	80044ac <HAL_GPIO_Init+0x2e8>
 80041d8:	2201      	movs	r2, #1
 80041da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041dc:	fa02 f303 	lsl.w	r3, r2, r3
 80041e0:	61fb      	str	r3, [r7, #28]
 80041e2:	683b      	ldr	r3, [r7, #0]
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	69fa      	ldr	r2, [r7, #28]
 80041e8:	4013      	ands	r3, r2
 80041ea:	61bb      	str	r3, [r7, #24]
 80041ec:	69ba      	ldr	r2, [r7, #24]
 80041ee:	69fb      	ldr	r3, [r7, #28]
 80041f0:	429a      	cmp	r2, r3
 80041f2:	f040 8158 	bne.w	80044a6 <HAL_GPIO_Init+0x2e2>
 80041f6:	683b      	ldr	r3, [r7, #0]
 80041f8:	685b      	ldr	r3, [r3, #4]
 80041fa:	4a9a      	ldr	r2, [pc, #616]	@ (8004464 <HAL_GPIO_Init+0x2a0>)
 80041fc:	4293      	cmp	r3, r2
 80041fe:	d05e      	beq.n	80042be <HAL_GPIO_Init+0xfa>
 8004200:	4a98      	ldr	r2, [pc, #608]	@ (8004464 <HAL_GPIO_Init+0x2a0>)
 8004202:	4293      	cmp	r3, r2
 8004204:	d875      	bhi.n	80042f2 <HAL_GPIO_Init+0x12e>
 8004206:	4a98      	ldr	r2, [pc, #608]	@ (8004468 <HAL_GPIO_Init+0x2a4>)
 8004208:	4293      	cmp	r3, r2
 800420a:	d058      	beq.n	80042be <HAL_GPIO_Init+0xfa>
 800420c:	4a96      	ldr	r2, [pc, #600]	@ (8004468 <HAL_GPIO_Init+0x2a4>)
 800420e:	4293      	cmp	r3, r2
 8004210:	d86f      	bhi.n	80042f2 <HAL_GPIO_Init+0x12e>
 8004212:	4a96      	ldr	r2, [pc, #600]	@ (800446c <HAL_GPIO_Init+0x2a8>)
 8004214:	4293      	cmp	r3, r2
 8004216:	d052      	beq.n	80042be <HAL_GPIO_Init+0xfa>
 8004218:	4a94      	ldr	r2, [pc, #592]	@ (800446c <HAL_GPIO_Init+0x2a8>)
 800421a:	4293      	cmp	r3, r2
 800421c:	d869      	bhi.n	80042f2 <HAL_GPIO_Init+0x12e>
 800421e:	4a94      	ldr	r2, [pc, #592]	@ (8004470 <HAL_GPIO_Init+0x2ac>)
 8004220:	4293      	cmp	r3, r2
 8004222:	d04c      	beq.n	80042be <HAL_GPIO_Init+0xfa>
 8004224:	4a92      	ldr	r2, [pc, #584]	@ (8004470 <HAL_GPIO_Init+0x2ac>)
 8004226:	4293      	cmp	r3, r2
 8004228:	d863      	bhi.n	80042f2 <HAL_GPIO_Init+0x12e>
 800422a:	4a92      	ldr	r2, [pc, #584]	@ (8004474 <HAL_GPIO_Init+0x2b0>)
 800422c:	4293      	cmp	r3, r2
 800422e:	d046      	beq.n	80042be <HAL_GPIO_Init+0xfa>
 8004230:	4a90      	ldr	r2, [pc, #576]	@ (8004474 <HAL_GPIO_Init+0x2b0>)
 8004232:	4293      	cmp	r3, r2
 8004234:	d85d      	bhi.n	80042f2 <HAL_GPIO_Init+0x12e>
 8004236:	2b12      	cmp	r3, #18
 8004238:	d82a      	bhi.n	8004290 <HAL_GPIO_Init+0xcc>
 800423a:	2b12      	cmp	r3, #18
 800423c:	d859      	bhi.n	80042f2 <HAL_GPIO_Init+0x12e>
 800423e:	a201      	add	r2, pc, #4	@ (adr r2, 8004244 <HAL_GPIO_Init+0x80>)
 8004240:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004244:	080042bf 	.word	0x080042bf
 8004248:	08004299 	.word	0x08004299
 800424c:	080042ab 	.word	0x080042ab
 8004250:	080042ed 	.word	0x080042ed
 8004254:	080042f3 	.word	0x080042f3
 8004258:	080042f3 	.word	0x080042f3
 800425c:	080042f3 	.word	0x080042f3
 8004260:	080042f3 	.word	0x080042f3
 8004264:	080042f3 	.word	0x080042f3
 8004268:	080042f3 	.word	0x080042f3
 800426c:	080042f3 	.word	0x080042f3
 8004270:	080042f3 	.word	0x080042f3
 8004274:	080042f3 	.word	0x080042f3
 8004278:	080042f3 	.word	0x080042f3
 800427c:	080042f3 	.word	0x080042f3
 8004280:	080042f3 	.word	0x080042f3
 8004284:	080042f3 	.word	0x080042f3
 8004288:	080042a1 	.word	0x080042a1
 800428c:	080042b5 	.word	0x080042b5
 8004290:	4a79      	ldr	r2, [pc, #484]	@ (8004478 <HAL_GPIO_Init+0x2b4>)
 8004292:	4293      	cmp	r3, r2
 8004294:	d013      	beq.n	80042be <HAL_GPIO_Init+0xfa>
 8004296:	e02c      	b.n	80042f2 <HAL_GPIO_Init+0x12e>
 8004298:	683b      	ldr	r3, [r7, #0]
 800429a:	68db      	ldr	r3, [r3, #12]
 800429c:	623b      	str	r3, [r7, #32]
 800429e:	e029      	b.n	80042f4 <HAL_GPIO_Init+0x130>
 80042a0:	683b      	ldr	r3, [r7, #0]
 80042a2:	68db      	ldr	r3, [r3, #12]
 80042a4:	3304      	adds	r3, #4
 80042a6:	623b      	str	r3, [r7, #32]
 80042a8:	e024      	b.n	80042f4 <HAL_GPIO_Init+0x130>
 80042aa:	683b      	ldr	r3, [r7, #0]
 80042ac:	68db      	ldr	r3, [r3, #12]
 80042ae:	3308      	adds	r3, #8
 80042b0:	623b      	str	r3, [r7, #32]
 80042b2:	e01f      	b.n	80042f4 <HAL_GPIO_Init+0x130>
 80042b4:	683b      	ldr	r3, [r7, #0]
 80042b6:	68db      	ldr	r3, [r3, #12]
 80042b8:	330c      	adds	r3, #12
 80042ba:	623b      	str	r3, [r7, #32]
 80042bc:	e01a      	b.n	80042f4 <HAL_GPIO_Init+0x130>
 80042be:	683b      	ldr	r3, [r7, #0]
 80042c0:	689b      	ldr	r3, [r3, #8]
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d102      	bne.n	80042cc <HAL_GPIO_Init+0x108>
 80042c6:	2304      	movs	r3, #4
 80042c8:	623b      	str	r3, [r7, #32]
 80042ca:	e013      	b.n	80042f4 <HAL_GPIO_Init+0x130>
 80042cc:	683b      	ldr	r3, [r7, #0]
 80042ce:	689b      	ldr	r3, [r3, #8]
 80042d0:	2b01      	cmp	r3, #1
 80042d2:	d105      	bne.n	80042e0 <HAL_GPIO_Init+0x11c>
 80042d4:	2308      	movs	r3, #8
 80042d6:	623b      	str	r3, [r7, #32]
 80042d8:	687b      	ldr	r3, [r7, #4]
 80042da:	69fa      	ldr	r2, [r7, #28]
 80042dc:	611a      	str	r2, [r3, #16]
 80042de:	e009      	b.n	80042f4 <HAL_GPIO_Init+0x130>
 80042e0:	2308      	movs	r3, #8
 80042e2:	623b      	str	r3, [r7, #32]
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	69fa      	ldr	r2, [r7, #28]
 80042e8:	615a      	str	r2, [r3, #20]
 80042ea:	e003      	b.n	80042f4 <HAL_GPIO_Init+0x130>
 80042ec:	2300      	movs	r3, #0
 80042ee:	623b      	str	r3, [r7, #32]
 80042f0:	e000      	b.n	80042f4 <HAL_GPIO_Init+0x130>
 80042f2:	bf00      	nop
 80042f4:	69bb      	ldr	r3, [r7, #24]
 80042f6:	2bff      	cmp	r3, #255	@ 0xff
 80042f8:	d801      	bhi.n	80042fe <HAL_GPIO_Init+0x13a>
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	e001      	b.n	8004302 <HAL_GPIO_Init+0x13e>
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	3304      	adds	r3, #4
 8004302:	617b      	str	r3, [r7, #20]
 8004304:	69bb      	ldr	r3, [r7, #24]
 8004306:	2bff      	cmp	r3, #255	@ 0xff
 8004308:	d802      	bhi.n	8004310 <HAL_GPIO_Init+0x14c>
 800430a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800430c:	009b      	lsls	r3, r3, #2
 800430e:	e002      	b.n	8004316 <HAL_GPIO_Init+0x152>
 8004310:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004312:	3b08      	subs	r3, #8
 8004314:	009b      	lsls	r3, r3, #2
 8004316:	613b      	str	r3, [r7, #16]
 8004318:	697b      	ldr	r3, [r7, #20]
 800431a:	681a      	ldr	r2, [r3, #0]
 800431c:	210f      	movs	r1, #15
 800431e:	693b      	ldr	r3, [r7, #16]
 8004320:	fa01 f303 	lsl.w	r3, r1, r3
 8004324:	43db      	mvns	r3, r3
 8004326:	401a      	ands	r2, r3
 8004328:	6a39      	ldr	r1, [r7, #32]
 800432a:	693b      	ldr	r3, [r7, #16]
 800432c:	fa01 f303 	lsl.w	r3, r1, r3
 8004330:	431a      	orrs	r2, r3
 8004332:	697b      	ldr	r3, [r7, #20]
 8004334:	601a      	str	r2, [r3, #0]
 8004336:	683b      	ldr	r3, [r7, #0]
 8004338:	685b      	ldr	r3, [r3, #4]
 800433a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800433e:	2b00      	cmp	r3, #0
 8004340:	f000 80b1 	beq.w	80044a6 <HAL_GPIO_Init+0x2e2>
 8004344:	4b4d      	ldr	r3, [pc, #308]	@ (800447c <HAL_GPIO_Init+0x2b8>)
 8004346:	699b      	ldr	r3, [r3, #24]
 8004348:	4a4c      	ldr	r2, [pc, #304]	@ (800447c <HAL_GPIO_Init+0x2b8>)
 800434a:	f043 0301 	orr.w	r3, r3, #1
 800434e:	6193      	str	r3, [r2, #24]
 8004350:	4b4a      	ldr	r3, [pc, #296]	@ (800447c <HAL_GPIO_Init+0x2b8>)
 8004352:	699b      	ldr	r3, [r3, #24]
 8004354:	f003 0301 	and.w	r3, r3, #1
 8004358:	60bb      	str	r3, [r7, #8]
 800435a:	68bb      	ldr	r3, [r7, #8]
 800435c:	4a48      	ldr	r2, [pc, #288]	@ (8004480 <HAL_GPIO_Init+0x2bc>)
 800435e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004360:	089b      	lsrs	r3, r3, #2
 8004362:	3302      	adds	r3, #2
 8004364:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004368:	60fb      	str	r3, [r7, #12]
 800436a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800436c:	f003 0303 	and.w	r3, r3, #3
 8004370:	009b      	lsls	r3, r3, #2
 8004372:	220f      	movs	r2, #15
 8004374:	fa02 f303 	lsl.w	r3, r2, r3
 8004378:	43db      	mvns	r3, r3
 800437a:	68fa      	ldr	r2, [r7, #12]
 800437c:	4013      	ands	r3, r2
 800437e:	60fb      	str	r3, [r7, #12]
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	4a40      	ldr	r2, [pc, #256]	@ (8004484 <HAL_GPIO_Init+0x2c0>)
 8004384:	4293      	cmp	r3, r2
 8004386:	d013      	beq.n	80043b0 <HAL_GPIO_Init+0x1ec>
 8004388:	687b      	ldr	r3, [r7, #4]
 800438a:	4a3f      	ldr	r2, [pc, #252]	@ (8004488 <HAL_GPIO_Init+0x2c4>)
 800438c:	4293      	cmp	r3, r2
 800438e:	d00d      	beq.n	80043ac <HAL_GPIO_Init+0x1e8>
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	4a3e      	ldr	r2, [pc, #248]	@ (800448c <HAL_GPIO_Init+0x2c8>)
 8004394:	4293      	cmp	r3, r2
 8004396:	d007      	beq.n	80043a8 <HAL_GPIO_Init+0x1e4>
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	4a3d      	ldr	r2, [pc, #244]	@ (8004490 <HAL_GPIO_Init+0x2cc>)
 800439c:	4293      	cmp	r3, r2
 800439e:	d101      	bne.n	80043a4 <HAL_GPIO_Init+0x1e0>
 80043a0:	2303      	movs	r3, #3
 80043a2:	e006      	b.n	80043b2 <HAL_GPIO_Init+0x1ee>
 80043a4:	2304      	movs	r3, #4
 80043a6:	e004      	b.n	80043b2 <HAL_GPIO_Init+0x1ee>
 80043a8:	2302      	movs	r3, #2
 80043aa:	e002      	b.n	80043b2 <HAL_GPIO_Init+0x1ee>
 80043ac:	2301      	movs	r3, #1
 80043ae:	e000      	b.n	80043b2 <HAL_GPIO_Init+0x1ee>
 80043b0:	2300      	movs	r3, #0
 80043b2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80043b4:	f002 0203 	and.w	r2, r2, #3
 80043b8:	0092      	lsls	r2, r2, #2
 80043ba:	4093      	lsls	r3, r2
 80043bc:	68fa      	ldr	r2, [r7, #12]
 80043be:	4313      	orrs	r3, r2
 80043c0:	60fb      	str	r3, [r7, #12]
 80043c2:	492f      	ldr	r1, [pc, #188]	@ (8004480 <HAL_GPIO_Init+0x2bc>)
 80043c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80043c6:	089b      	lsrs	r3, r3, #2
 80043c8:	3302      	adds	r3, #2
 80043ca:	68fa      	ldr	r2, [r7, #12]
 80043cc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80043d0:	683b      	ldr	r3, [r7, #0]
 80043d2:	685b      	ldr	r3, [r3, #4]
 80043d4:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80043d8:	2b00      	cmp	r3, #0
 80043da:	d006      	beq.n	80043ea <HAL_GPIO_Init+0x226>
 80043dc:	4b2d      	ldr	r3, [pc, #180]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 80043de:	689a      	ldr	r2, [r3, #8]
 80043e0:	492c      	ldr	r1, [pc, #176]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 80043e2:	69bb      	ldr	r3, [r7, #24]
 80043e4:	4313      	orrs	r3, r2
 80043e6:	608b      	str	r3, [r1, #8]
 80043e8:	e006      	b.n	80043f8 <HAL_GPIO_Init+0x234>
 80043ea:	4b2a      	ldr	r3, [pc, #168]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 80043ec:	689a      	ldr	r2, [r3, #8]
 80043ee:	69bb      	ldr	r3, [r7, #24]
 80043f0:	43db      	mvns	r3, r3
 80043f2:	4928      	ldr	r1, [pc, #160]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 80043f4:	4013      	ands	r3, r2
 80043f6:	608b      	str	r3, [r1, #8]
 80043f8:	683b      	ldr	r3, [r7, #0]
 80043fa:	685b      	ldr	r3, [r3, #4]
 80043fc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004400:	2b00      	cmp	r3, #0
 8004402:	d006      	beq.n	8004412 <HAL_GPIO_Init+0x24e>
 8004404:	4b23      	ldr	r3, [pc, #140]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 8004406:	68da      	ldr	r2, [r3, #12]
 8004408:	4922      	ldr	r1, [pc, #136]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 800440a:	69bb      	ldr	r3, [r7, #24]
 800440c:	4313      	orrs	r3, r2
 800440e:	60cb      	str	r3, [r1, #12]
 8004410:	e006      	b.n	8004420 <HAL_GPIO_Init+0x25c>
 8004412:	4b20      	ldr	r3, [pc, #128]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 8004414:	68da      	ldr	r2, [r3, #12]
 8004416:	69bb      	ldr	r3, [r7, #24]
 8004418:	43db      	mvns	r3, r3
 800441a:	491e      	ldr	r1, [pc, #120]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 800441c:	4013      	ands	r3, r2
 800441e:	60cb      	str	r3, [r1, #12]
 8004420:	683b      	ldr	r3, [r7, #0]
 8004422:	685b      	ldr	r3, [r3, #4]
 8004424:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004428:	2b00      	cmp	r3, #0
 800442a:	d006      	beq.n	800443a <HAL_GPIO_Init+0x276>
 800442c:	4b19      	ldr	r3, [pc, #100]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 800442e:	685a      	ldr	r2, [r3, #4]
 8004430:	4918      	ldr	r1, [pc, #96]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 8004432:	69bb      	ldr	r3, [r7, #24]
 8004434:	4313      	orrs	r3, r2
 8004436:	604b      	str	r3, [r1, #4]
 8004438:	e006      	b.n	8004448 <HAL_GPIO_Init+0x284>
 800443a:	4b16      	ldr	r3, [pc, #88]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 800443c:	685a      	ldr	r2, [r3, #4]
 800443e:	69bb      	ldr	r3, [r7, #24]
 8004440:	43db      	mvns	r3, r3
 8004442:	4914      	ldr	r1, [pc, #80]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 8004444:	4013      	ands	r3, r2
 8004446:	604b      	str	r3, [r1, #4]
 8004448:	683b      	ldr	r3, [r7, #0]
 800444a:	685b      	ldr	r3, [r3, #4]
 800444c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004450:	2b00      	cmp	r3, #0
 8004452:	d021      	beq.n	8004498 <HAL_GPIO_Init+0x2d4>
 8004454:	4b0f      	ldr	r3, [pc, #60]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 8004456:	681a      	ldr	r2, [r3, #0]
 8004458:	490e      	ldr	r1, [pc, #56]	@ (8004494 <HAL_GPIO_Init+0x2d0>)
 800445a:	69bb      	ldr	r3, [r7, #24]
 800445c:	4313      	orrs	r3, r2
 800445e:	600b      	str	r3, [r1, #0]
 8004460:	e021      	b.n	80044a6 <HAL_GPIO_Init+0x2e2>
 8004462:	bf00      	nop
 8004464:	10320000 	.word	0x10320000
 8004468:	10310000 	.word	0x10310000
 800446c:	10220000 	.word	0x10220000
 8004470:	10210000 	.word	0x10210000
 8004474:	10120000 	.word	0x10120000
 8004478:	10110000 	.word	0x10110000
 800447c:	40021000 	.word	0x40021000
 8004480:	40010000 	.word	0x40010000
 8004484:	40010800 	.word	0x40010800
 8004488:	40010c00 	.word	0x40010c00
 800448c:	40011000 	.word	0x40011000
 8004490:	40011400 	.word	0x40011400
 8004494:	40010400 	.word	0x40010400
 8004498:	4b0b      	ldr	r3, [pc, #44]	@ (80044c8 <HAL_GPIO_Init+0x304>)
 800449a:	681a      	ldr	r2, [r3, #0]
 800449c:	69bb      	ldr	r3, [r7, #24]
 800449e:	43db      	mvns	r3, r3
 80044a0:	4909      	ldr	r1, [pc, #36]	@ (80044c8 <HAL_GPIO_Init+0x304>)
 80044a2:	4013      	ands	r3, r2
 80044a4:	600b      	str	r3, [r1, #0]
 80044a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80044a8:	3301      	adds	r3, #1
 80044aa:	627b      	str	r3, [r7, #36]	@ 0x24
 80044ac:	683b      	ldr	r3, [r7, #0]
 80044ae:	681a      	ldr	r2, [r3, #0]
 80044b0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80044b2:	fa22 f303 	lsr.w	r3, r2, r3
 80044b6:	2b00      	cmp	r3, #0
 80044b8:	f47f ae8e 	bne.w	80041d8 <HAL_GPIO_Init+0x14>
 80044bc:	bf00      	nop
 80044be:	bf00      	nop
 80044c0:	372c      	adds	r7, #44	@ 0x2c
 80044c2:	46bd      	mov	sp, r7
 80044c4:	bc80      	pop	{r7}
 80044c6:	4770      	bx	lr
 80044c8:	40010400 	.word	0x40010400

080044cc <HAL_GPIO_WritePin>:
 80044cc:	b480      	push	{r7}
 80044ce:	b083      	sub	sp, #12
 80044d0:	af00      	add	r7, sp, #0
 80044d2:	6078      	str	r0, [r7, #4]
 80044d4:	460b      	mov	r3, r1
 80044d6:	807b      	strh	r3, [r7, #2]
 80044d8:	4613      	mov	r3, r2
 80044da:	707b      	strb	r3, [r7, #1]
 80044dc:	787b      	ldrb	r3, [r7, #1]
 80044de:	2b00      	cmp	r3, #0
 80044e0:	d003      	beq.n	80044ea <HAL_GPIO_WritePin+0x1e>
 80044e2:	887a      	ldrh	r2, [r7, #2]
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	611a      	str	r2, [r3, #16]
 80044e8:	e003      	b.n	80044f2 <HAL_GPIO_WritePin+0x26>
 80044ea:	887b      	ldrh	r3, [r7, #2]
 80044ec:	041a      	lsls	r2, r3, #16
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	611a      	str	r2, [r3, #16]
 80044f2:	bf00      	nop
 80044f4:	370c      	adds	r7, #12
 80044f6:	46bd      	mov	sp, r7
 80044f8:	bc80      	pop	{r7}
 80044fa:	4770      	bx	lr

080044fc <HAL_GPIO_TogglePin>:
 80044fc:	b480      	push	{r7}
 80044fe:	b085      	sub	sp, #20
 8004500:	af00      	add	r7, sp, #0
 8004502:	6078      	str	r0, [r7, #4]
 8004504:	460b      	mov	r3, r1
 8004506:	807b      	strh	r3, [r7, #2]
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	68db      	ldr	r3, [r3, #12]
 800450c:	60fb      	str	r3, [r7, #12]
 800450e:	887a      	ldrh	r2, [r7, #2]
 8004510:	68fb      	ldr	r3, [r7, #12]
 8004512:	4013      	ands	r3, r2
 8004514:	041a      	lsls	r2, r3, #16
 8004516:	68fb      	ldr	r3, [r7, #12]
 8004518:	43d9      	mvns	r1, r3
 800451a:	887b      	ldrh	r3, [r7, #2]
 800451c:	400b      	ands	r3, r1
 800451e:	431a      	orrs	r2, r3
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	611a      	str	r2, [r3, #16]
 8004524:	bf00      	nop
 8004526:	3714      	adds	r7, #20
 8004528:	46bd      	mov	sp, r7
 800452a:	bc80      	pop	{r7}
 800452c:	4770      	bx	lr
	...

08004530 <HAL_RCC_OscConfig>:
 8004530:	b580      	push	{r7, lr}
 8004532:	b086      	sub	sp, #24
 8004534:	af00      	add	r7, sp, #0
 8004536:	6078      	str	r0, [r7, #4]
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	2b00      	cmp	r3, #0
 800453c:	d101      	bne.n	8004542 <HAL_RCC_OscConfig+0x12>
 800453e:	2301      	movs	r3, #1
 8004540:	e304      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	f003 0301 	and.w	r3, r3, #1
 800454a:	2b00      	cmp	r3, #0
 800454c:	f000 8087 	beq.w	800465e <HAL_RCC_OscConfig+0x12e>
 8004550:	4b92      	ldr	r3, [pc, #584]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004552:	685b      	ldr	r3, [r3, #4]
 8004554:	f003 030c 	and.w	r3, r3, #12
 8004558:	2b04      	cmp	r3, #4
 800455a:	d00c      	beq.n	8004576 <HAL_RCC_OscConfig+0x46>
 800455c:	4b8f      	ldr	r3, [pc, #572]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 800455e:	685b      	ldr	r3, [r3, #4]
 8004560:	f003 030c 	and.w	r3, r3, #12
 8004564:	2b08      	cmp	r3, #8
 8004566:	d112      	bne.n	800458e <HAL_RCC_OscConfig+0x5e>
 8004568:	4b8c      	ldr	r3, [pc, #560]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 800456a:	685b      	ldr	r3, [r3, #4]
 800456c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004570:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004574:	d10b      	bne.n	800458e <HAL_RCC_OscConfig+0x5e>
 8004576:	4b89      	ldr	r3, [pc, #548]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004578:	681b      	ldr	r3, [r3, #0]
 800457a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800457e:	2b00      	cmp	r3, #0
 8004580:	d06c      	beq.n	800465c <HAL_RCC_OscConfig+0x12c>
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	689b      	ldr	r3, [r3, #8]
 8004586:	2b00      	cmp	r3, #0
 8004588:	d168      	bne.n	800465c <HAL_RCC_OscConfig+0x12c>
 800458a:	2301      	movs	r3, #1
 800458c:	e2de      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	689b      	ldr	r3, [r3, #8]
 8004592:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004596:	d106      	bne.n	80045a6 <HAL_RCC_OscConfig+0x76>
 8004598:	4b80      	ldr	r3, [pc, #512]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	4a7f      	ldr	r2, [pc, #508]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 800459e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80045a2:	6013      	str	r3, [r2, #0]
 80045a4:	e02e      	b.n	8004604 <HAL_RCC_OscConfig+0xd4>
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	689b      	ldr	r3, [r3, #8]
 80045aa:	2b00      	cmp	r3, #0
 80045ac:	d10c      	bne.n	80045c8 <HAL_RCC_OscConfig+0x98>
 80045ae:	4b7b      	ldr	r3, [pc, #492]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	4a7a      	ldr	r2, [pc, #488]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045b4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80045b8:	6013      	str	r3, [r2, #0]
 80045ba:	4b78      	ldr	r3, [pc, #480]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	4a77      	ldr	r2, [pc, #476]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045c0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80045c4:	6013      	str	r3, [r2, #0]
 80045c6:	e01d      	b.n	8004604 <HAL_RCC_OscConfig+0xd4>
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	689b      	ldr	r3, [r3, #8]
 80045cc:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80045d0:	d10c      	bne.n	80045ec <HAL_RCC_OscConfig+0xbc>
 80045d2:	4b72      	ldr	r3, [pc, #456]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	4a71      	ldr	r2, [pc, #452]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045d8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80045dc:	6013      	str	r3, [r2, #0]
 80045de:	4b6f      	ldr	r3, [pc, #444]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	4a6e      	ldr	r2, [pc, #440]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045e4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80045e8:	6013      	str	r3, [r2, #0]
 80045ea:	e00b      	b.n	8004604 <HAL_RCC_OscConfig+0xd4>
 80045ec:	4b6b      	ldr	r3, [pc, #428]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	4a6a      	ldr	r2, [pc, #424]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045f2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80045f6:	6013      	str	r3, [r2, #0]
 80045f8:	4b68      	ldr	r3, [pc, #416]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	4a67      	ldr	r2, [pc, #412]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80045fe:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004602:	6013      	str	r3, [r2, #0]
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	689b      	ldr	r3, [r3, #8]
 8004608:	2b00      	cmp	r3, #0
 800460a:	d013      	beq.n	8004634 <HAL_RCC_OscConfig+0x104>
 800460c:	f7fe fe3e 	bl	800328c <HAL_GetTick>
 8004610:	6138      	str	r0, [r7, #16]
 8004612:	e008      	b.n	8004626 <HAL_RCC_OscConfig+0xf6>
 8004614:	f7fe fe3a 	bl	800328c <HAL_GetTick>
 8004618:	4602      	mov	r2, r0
 800461a:	693b      	ldr	r3, [r7, #16]
 800461c:	1ad3      	subs	r3, r2, r3
 800461e:	2b64      	cmp	r3, #100	@ 0x64
 8004620:	d901      	bls.n	8004626 <HAL_RCC_OscConfig+0xf6>
 8004622:	2303      	movs	r3, #3
 8004624:	e292      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004626:	4b5d      	ldr	r3, [pc, #372]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004628:	681b      	ldr	r3, [r3, #0]
 800462a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800462e:	2b00      	cmp	r3, #0
 8004630:	d0f0      	beq.n	8004614 <HAL_RCC_OscConfig+0xe4>
 8004632:	e014      	b.n	800465e <HAL_RCC_OscConfig+0x12e>
 8004634:	f7fe fe2a 	bl	800328c <HAL_GetTick>
 8004638:	6138      	str	r0, [r7, #16]
 800463a:	e008      	b.n	800464e <HAL_RCC_OscConfig+0x11e>
 800463c:	f7fe fe26 	bl	800328c <HAL_GetTick>
 8004640:	4602      	mov	r2, r0
 8004642:	693b      	ldr	r3, [r7, #16]
 8004644:	1ad3      	subs	r3, r2, r3
 8004646:	2b64      	cmp	r3, #100	@ 0x64
 8004648:	d901      	bls.n	800464e <HAL_RCC_OscConfig+0x11e>
 800464a:	2303      	movs	r3, #3
 800464c:	e27e      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 800464e:	4b53      	ldr	r3, [pc, #332]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004656:	2b00      	cmp	r3, #0
 8004658:	d1f0      	bne.n	800463c <HAL_RCC_OscConfig+0x10c>
 800465a:	e000      	b.n	800465e <HAL_RCC_OscConfig+0x12e>
 800465c:	bf00      	nop
 800465e:	687b      	ldr	r3, [r7, #4]
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	f003 0302 	and.w	r3, r3, #2
 8004666:	2b00      	cmp	r3, #0
 8004668:	d063      	beq.n	8004732 <HAL_RCC_OscConfig+0x202>
 800466a:	4b4c      	ldr	r3, [pc, #304]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 800466c:	685b      	ldr	r3, [r3, #4]
 800466e:	f003 030c 	and.w	r3, r3, #12
 8004672:	2b00      	cmp	r3, #0
 8004674:	d00b      	beq.n	800468e <HAL_RCC_OscConfig+0x15e>
 8004676:	4b49      	ldr	r3, [pc, #292]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004678:	685b      	ldr	r3, [r3, #4]
 800467a:	f003 030c 	and.w	r3, r3, #12
 800467e:	2b08      	cmp	r3, #8
 8004680:	d11c      	bne.n	80046bc <HAL_RCC_OscConfig+0x18c>
 8004682:	4b46      	ldr	r3, [pc, #280]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004684:	685b      	ldr	r3, [r3, #4]
 8004686:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800468a:	2b00      	cmp	r3, #0
 800468c:	d116      	bne.n	80046bc <HAL_RCC_OscConfig+0x18c>
 800468e:	4b43      	ldr	r3, [pc, #268]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004690:	681b      	ldr	r3, [r3, #0]
 8004692:	f003 0302 	and.w	r3, r3, #2
 8004696:	2b00      	cmp	r3, #0
 8004698:	d005      	beq.n	80046a6 <HAL_RCC_OscConfig+0x176>
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	695b      	ldr	r3, [r3, #20]
 800469e:	2b01      	cmp	r3, #1
 80046a0:	d001      	beq.n	80046a6 <HAL_RCC_OscConfig+0x176>
 80046a2:	2301      	movs	r3, #1
 80046a4:	e252      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 80046a6:	4b3d      	ldr	r3, [pc, #244]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	699b      	ldr	r3, [r3, #24]
 80046b2:	00db      	lsls	r3, r3, #3
 80046b4:	4939      	ldr	r1, [pc, #228]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80046b6:	4313      	orrs	r3, r2
 80046b8:	600b      	str	r3, [r1, #0]
 80046ba:	e03a      	b.n	8004732 <HAL_RCC_OscConfig+0x202>
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	695b      	ldr	r3, [r3, #20]
 80046c0:	2b00      	cmp	r3, #0
 80046c2:	d020      	beq.n	8004706 <HAL_RCC_OscConfig+0x1d6>
 80046c4:	4b36      	ldr	r3, [pc, #216]	@ (80047a0 <HAL_RCC_OscConfig+0x270>)
 80046c6:	2201      	movs	r2, #1
 80046c8:	601a      	str	r2, [r3, #0]
 80046ca:	f7fe fddf 	bl	800328c <HAL_GetTick>
 80046ce:	6138      	str	r0, [r7, #16]
 80046d0:	e008      	b.n	80046e4 <HAL_RCC_OscConfig+0x1b4>
 80046d2:	f7fe fddb 	bl	800328c <HAL_GetTick>
 80046d6:	4602      	mov	r2, r0
 80046d8:	693b      	ldr	r3, [r7, #16]
 80046da:	1ad3      	subs	r3, r2, r3
 80046dc:	2b02      	cmp	r3, #2
 80046de:	d901      	bls.n	80046e4 <HAL_RCC_OscConfig+0x1b4>
 80046e0:	2303      	movs	r3, #3
 80046e2:	e233      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 80046e4:	4b2d      	ldr	r3, [pc, #180]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80046e6:	681b      	ldr	r3, [r3, #0]
 80046e8:	f003 0302 	and.w	r3, r3, #2
 80046ec:	2b00      	cmp	r3, #0
 80046ee:	d0f0      	beq.n	80046d2 <HAL_RCC_OscConfig+0x1a2>
 80046f0:	4b2a      	ldr	r3, [pc, #168]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 80046f2:	681b      	ldr	r3, [r3, #0]
 80046f4:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80046f8:	687b      	ldr	r3, [r7, #4]
 80046fa:	699b      	ldr	r3, [r3, #24]
 80046fc:	00db      	lsls	r3, r3, #3
 80046fe:	4927      	ldr	r1, [pc, #156]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004700:	4313      	orrs	r3, r2
 8004702:	600b      	str	r3, [r1, #0]
 8004704:	e015      	b.n	8004732 <HAL_RCC_OscConfig+0x202>
 8004706:	4b26      	ldr	r3, [pc, #152]	@ (80047a0 <HAL_RCC_OscConfig+0x270>)
 8004708:	2200      	movs	r2, #0
 800470a:	601a      	str	r2, [r3, #0]
 800470c:	f7fe fdbe 	bl	800328c <HAL_GetTick>
 8004710:	6138      	str	r0, [r7, #16]
 8004712:	e008      	b.n	8004726 <HAL_RCC_OscConfig+0x1f6>
 8004714:	f7fe fdba 	bl	800328c <HAL_GetTick>
 8004718:	4602      	mov	r2, r0
 800471a:	693b      	ldr	r3, [r7, #16]
 800471c:	1ad3      	subs	r3, r2, r3
 800471e:	2b02      	cmp	r3, #2
 8004720:	d901      	bls.n	8004726 <HAL_RCC_OscConfig+0x1f6>
 8004722:	2303      	movs	r3, #3
 8004724:	e212      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004726:	4b1d      	ldr	r3, [pc, #116]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	f003 0302 	and.w	r3, r3, #2
 800472e:	2b00      	cmp	r3, #0
 8004730:	d1f0      	bne.n	8004714 <HAL_RCC_OscConfig+0x1e4>
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	f003 0308 	and.w	r3, r3, #8
 800473a:	2b00      	cmp	r3, #0
 800473c:	d03a      	beq.n	80047b4 <HAL_RCC_OscConfig+0x284>
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	69db      	ldr	r3, [r3, #28]
 8004742:	2b00      	cmp	r3, #0
 8004744:	d019      	beq.n	800477a <HAL_RCC_OscConfig+0x24a>
 8004746:	4b17      	ldr	r3, [pc, #92]	@ (80047a4 <HAL_RCC_OscConfig+0x274>)
 8004748:	2201      	movs	r2, #1
 800474a:	601a      	str	r2, [r3, #0]
 800474c:	f7fe fd9e 	bl	800328c <HAL_GetTick>
 8004750:	6138      	str	r0, [r7, #16]
 8004752:	e008      	b.n	8004766 <HAL_RCC_OscConfig+0x236>
 8004754:	f7fe fd9a 	bl	800328c <HAL_GetTick>
 8004758:	4602      	mov	r2, r0
 800475a:	693b      	ldr	r3, [r7, #16]
 800475c:	1ad3      	subs	r3, r2, r3
 800475e:	2b02      	cmp	r3, #2
 8004760:	d901      	bls.n	8004766 <HAL_RCC_OscConfig+0x236>
 8004762:	2303      	movs	r3, #3
 8004764:	e1f2      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004766:	4b0d      	ldr	r3, [pc, #52]	@ (800479c <HAL_RCC_OscConfig+0x26c>)
 8004768:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800476a:	f003 0302 	and.w	r3, r3, #2
 800476e:	2b00      	cmp	r3, #0
 8004770:	d0f0      	beq.n	8004754 <HAL_RCC_OscConfig+0x224>
 8004772:	2001      	movs	r0, #1
 8004774:	f000 fbca 	bl	8004f0c <RCC_Delay>
 8004778:	e01c      	b.n	80047b4 <HAL_RCC_OscConfig+0x284>
 800477a:	4b0a      	ldr	r3, [pc, #40]	@ (80047a4 <HAL_RCC_OscConfig+0x274>)
 800477c:	2200      	movs	r2, #0
 800477e:	601a      	str	r2, [r3, #0]
 8004780:	f7fe fd84 	bl	800328c <HAL_GetTick>
 8004784:	6138      	str	r0, [r7, #16]
 8004786:	e00f      	b.n	80047a8 <HAL_RCC_OscConfig+0x278>
 8004788:	f7fe fd80 	bl	800328c <HAL_GetTick>
 800478c:	4602      	mov	r2, r0
 800478e:	693b      	ldr	r3, [r7, #16]
 8004790:	1ad3      	subs	r3, r2, r3
 8004792:	2b02      	cmp	r3, #2
 8004794:	d908      	bls.n	80047a8 <HAL_RCC_OscConfig+0x278>
 8004796:	2303      	movs	r3, #3
 8004798:	e1d8      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 800479a:	bf00      	nop
 800479c:	40021000 	.word	0x40021000
 80047a0:	42420000 	.word	0x42420000
 80047a4:	42420480 	.word	0x42420480
 80047a8:	4b9b      	ldr	r3, [pc, #620]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80047aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047ac:	f003 0302 	and.w	r3, r3, #2
 80047b0:	2b00      	cmp	r3, #0
 80047b2:	d1e9      	bne.n	8004788 <HAL_RCC_OscConfig+0x258>
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	681b      	ldr	r3, [r3, #0]
 80047b8:	f003 0304 	and.w	r3, r3, #4
 80047bc:	2b00      	cmp	r3, #0
 80047be:	f000 80a6 	beq.w	800490e <HAL_RCC_OscConfig+0x3de>
 80047c2:	2300      	movs	r3, #0
 80047c4:	75fb      	strb	r3, [r7, #23]
 80047c6:	4b94      	ldr	r3, [pc, #592]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80047c8:	69db      	ldr	r3, [r3, #28]
 80047ca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80047ce:	2b00      	cmp	r3, #0
 80047d0:	d10d      	bne.n	80047ee <HAL_RCC_OscConfig+0x2be>
 80047d2:	4b91      	ldr	r3, [pc, #580]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80047d4:	69db      	ldr	r3, [r3, #28]
 80047d6:	4a90      	ldr	r2, [pc, #576]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80047d8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80047dc:	61d3      	str	r3, [r2, #28]
 80047de:	4b8e      	ldr	r3, [pc, #568]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80047e0:	69db      	ldr	r3, [r3, #28]
 80047e2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80047e6:	60bb      	str	r3, [r7, #8]
 80047e8:	68bb      	ldr	r3, [r7, #8]
 80047ea:	2301      	movs	r3, #1
 80047ec:	75fb      	strb	r3, [r7, #23]
 80047ee:	4b8b      	ldr	r3, [pc, #556]	@ (8004a1c <HAL_RCC_OscConfig+0x4ec>)
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80047f6:	2b00      	cmp	r3, #0
 80047f8:	d118      	bne.n	800482c <HAL_RCC_OscConfig+0x2fc>
 80047fa:	4b88      	ldr	r3, [pc, #544]	@ (8004a1c <HAL_RCC_OscConfig+0x4ec>)
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	4a87      	ldr	r2, [pc, #540]	@ (8004a1c <HAL_RCC_OscConfig+0x4ec>)
 8004800:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004804:	6013      	str	r3, [r2, #0]
 8004806:	f7fe fd41 	bl	800328c <HAL_GetTick>
 800480a:	6138      	str	r0, [r7, #16]
 800480c:	e008      	b.n	8004820 <HAL_RCC_OscConfig+0x2f0>
 800480e:	f7fe fd3d 	bl	800328c <HAL_GetTick>
 8004812:	4602      	mov	r2, r0
 8004814:	693b      	ldr	r3, [r7, #16]
 8004816:	1ad3      	subs	r3, r2, r3
 8004818:	2b64      	cmp	r3, #100	@ 0x64
 800481a:	d901      	bls.n	8004820 <HAL_RCC_OscConfig+0x2f0>
 800481c:	2303      	movs	r3, #3
 800481e:	e195      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004820:	4b7e      	ldr	r3, [pc, #504]	@ (8004a1c <HAL_RCC_OscConfig+0x4ec>)
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004828:	2b00      	cmp	r3, #0
 800482a:	d0f0      	beq.n	800480e <HAL_RCC_OscConfig+0x2de>
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	691b      	ldr	r3, [r3, #16]
 8004830:	2b01      	cmp	r3, #1
 8004832:	d106      	bne.n	8004842 <HAL_RCC_OscConfig+0x312>
 8004834:	4b78      	ldr	r3, [pc, #480]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004836:	6a1b      	ldr	r3, [r3, #32]
 8004838:	4a77      	ldr	r2, [pc, #476]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800483a:	f043 0301 	orr.w	r3, r3, #1
 800483e:	6213      	str	r3, [r2, #32]
 8004840:	e02d      	b.n	800489e <HAL_RCC_OscConfig+0x36e>
 8004842:	687b      	ldr	r3, [r7, #4]
 8004844:	691b      	ldr	r3, [r3, #16]
 8004846:	2b00      	cmp	r3, #0
 8004848:	d10c      	bne.n	8004864 <HAL_RCC_OscConfig+0x334>
 800484a:	4b73      	ldr	r3, [pc, #460]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800484c:	6a1b      	ldr	r3, [r3, #32]
 800484e:	4a72      	ldr	r2, [pc, #456]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004850:	f023 0301 	bic.w	r3, r3, #1
 8004854:	6213      	str	r3, [r2, #32]
 8004856:	4b70      	ldr	r3, [pc, #448]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004858:	6a1b      	ldr	r3, [r3, #32]
 800485a:	4a6f      	ldr	r2, [pc, #444]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800485c:	f023 0304 	bic.w	r3, r3, #4
 8004860:	6213      	str	r3, [r2, #32]
 8004862:	e01c      	b.n	800489e <HAL_RCC_OscConfig+0x36e>
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	691b      	ldr	r3, [r3, #16]
 8004868:	2b05      	cmp	r3, #5
 800486a:	d10c      	bne.n	8004886 <HAL_RCC_OscConfig+0x356>
 800486c:	4b6a      	ldr	r3, [pc, #424]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800486e:	6a1b      	ldr	r3, [r3, #32]
 8004870:	4a69      	ldr	r2, [pc, #420]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004872:	f043 0304 	orr.w	r3, r3, #4
 8004876:	6213      	str	r3, [r2, #32]
 8004878:	4b67      	ldr	r3, [pc, #412]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800487a:	6a1b      	ldr	r3, [r3, #32]
 800487c:	4a66      	ldr	r2, [pc, #408]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800487e:	f043 0301 	orr.w	r3, r3, #1
 8004882:	6213      	str	r3, [r2, #32]
 8004884:	e00b      	b.n	800489e <HAL_RCC_OscConfig+0x36e>
 8004886:	4b64      	ldr	r3, [pc, #400]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004888:	6a1b      	ldr	r3, [r3, #32]
 800488a:	4a63      	ldr	r2, [pc, #396]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800488c:	f023 0301 	bic.w	r3, r3, #1
 8004890:	6213      	str	r3, [r2, #32]
 8004892:	4b61      	ldr	r3, [pc, #388]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004894:	6a1b      	ldr	r3, [r3, #32]
 8004896:	4a60      	ldr	r2, [pc, #384]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004898:	f023 0304 	bic.w	r3, r3, #4
 800489c:	6213      	str	r3, [r2, #32]
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	691b      	ldr	r3, [r3, #16]
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	d015      	beq.n	80048d2 <HAL_RCC_OscConfig+0x3a2>
 80048a6:	f7fe fcf1 	bl	800328c <HAL_GetTick>
 80048aa:	6138      	str	r0, [r7, #16]
 80048ac:	e00a      	b.n	80048c4 <HAL_RCC_OscConfig+0x394>
 80048ae:	f7fe fced 	bl	800328c <HAL_GetTick>
 80048b2:	4602      	mov	r2, r0
 80048b4:	693b      	ldr	r3, [r7, #16]
 80048b6:	1ad3      	subs	r3, r2, r3
 80048b8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80048bc:	4293      	cmp	r3, r2
 80048be:	d901      	bls.n	80048c4 <HAL_RCC_OscConfig+0x394>
 80048c0:	2303      	movs	r3, #3
 80048c2:	e143      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 80048c4:	4b54      	ldr	r3, [pc, #336]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80048c6:	6a1b      	ldr	r3, [r3, #32]
 80048c8:	f003 0302 	and.w	r3, r3, #2
 80048cc:	2b00      	cmp	r3, #0
 80048ce:	d0ee      	beq.n	80048ae <HAL_RCC_OscConfig+0x37e>
 80048d0:	e014      	b.n	80048fc <HAL_RCC_OscConfig+0x3cc>
 80048d2:	f7fe fcdb 	bl	800328c <HAL_GetTick>
 80048d6:	6138      	str	r0, [r7, #16]
 80048d8:	e00a      	b.n	80048f0 <HAL_RCC_OscConfig+0x3c0>
 80048da:	f7fe fcd7 	bl	800328c <HAL_GetTick>
 80048de:	4602      	mov	r2, r0
 80048e0:	693b      	ldr	r3, [r7, #16]
 80048e2:	1ad3      	subs	r3, r2, r3
 80048e4:	f241 3288 	movw	r2, #5000	@ 0x1388
 80048e8:	4293      	cmp	r3, r2
 80048ea:	d901      	bls.n	80048f0 <HAL_RCC_OscConfig+0x3c0>
 80048ec:	2303      	movs	r3, #3
 80048ee:	e12d      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 80048f0:	4b49      	ldr	r3, [pc, #292]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80048f2:	6a1b      	ldr	r3, [r3, #32]
 80048f4:	f003 0302 	and.w	r3, r3, #2
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	d1ee      	bne.n	80048da <HAL_RCC_OscConfig+0x3aa>
 80048fc:	7dfb      	ldrb	r3, [r7, #23]
 80048fe:	2b01      	cmp	r3, #1
 8004900:	d105      	bne.n	800490e <HAL_RCC_OscConfig+0x3de>
 8004902:	4b45      	ldr	r3, [pc, #276]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004904:	69db      	ldr	r3, [r3, #28]
 8004906:	4a44      	ldr	r2, [pc, #272]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004908:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800490c:	61d3      	str	r3, [r2, #28]
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004912:	2b00      	cmp	r3, #0
 8004914:	f000 808c 	beq.w	8004a30 <HAL_RCC_OscConfig+0x500>
 8004918:	4b3f      	ldr	r3, [pc, #252]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800491a:	685b      	ldr	r3, [r3, #4]
 800491c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004920:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004924:	d10e      	bne.n	8004944 <HAL_RCC_OscConfig+0x414>
 8004926:	4b3c      	ldr	r3, [pc, #240]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004928:	685b      	ldr	r3, [r3, #4]
 800492a:	f003 030c 	and.w	r3, r3, #12
 800492e:	2b08      	cmp	r3, #8
 8004930:	d108      	bne.n	8004944 <HAL_RCC_OscConfig+0x414>
 8004932:	4b39      	ldr	r3, [pc, #228]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 8004934:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004936:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800493a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800493e:	d101      	bne.n	8004944 <HAL_RCC_OscConfig+0x414>
 8004940:	2301      	movs	r3, #1
 8004942:	e103      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004948:	2b02      	cmp	r3, #2
 800494a:	d14e      	bne.n	80049ea <HAL_RCC_OscConfig+0x4ba>
 800494c:	4b32      	ldr	r3, [pc, #200]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800494e:	681b      	ldr	r3, [r3, #0]
 8004950:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004954:	2b00      	cmp	r3, #0
 8004956:	d009      	beq.n	800496c <HAL_RCC_OscConfig+0x43c>
 8004958:	4b2f      	ldr	r3, [pc, #188]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800495a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800495c:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004964:	429a      	cmp	r2, r3
 8004966:	d001      	beq.n	800496c <HAL_RCC_OscConfig+0x43c>
 8004968:	2301      	movs	r3, #1
 800496a:	e0ef      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 800496c:	4b2c      	ldr	r3, [pc, #176]	@ (8004a20 <HAL_RCC_OscConfig+0x4f0>)
 800496e:	2200      	movs	r2, #0
 8004970:	601a      	str	r2, [r3, #0]
 8004972:	f7fe fc8b 	bl	800328c <HAL_GetTick>
 8004976:	6138      	str	r0, [r7, #16]
 8004978:	e008      	b.n	800498c <HAL_RCC_OscConfig+0x45c>
 800497a:	f7fe fc87 	bl	800328c <HAL_GetTick>
 800497e:	4602      	mov	r2, r0
 8004980:	693b      	ldr	r3, [r7, #16]
 8004982:	1ad3      	subs	r3, r2, r3
 8004984:	2b64      	cmp	r3, #100	@ 0x64
 8004986:	d901      	bls.n	800498c <HAL_RCC_OscConfig+0x45c>
 8004988:	2303      	movs	r3, #3
 800498a:	e0df      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 800498c:	4b22      	ldr	r3, [pc, #136]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800498e:	681b      	ldr	r3, [r3, #0]
 8004990:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8004994:	2b00      	cmp	r3, #0
 8004996:	d1f0      	bne.n	800497a <HAL_RCC_OscConfig+0x44a>
 8004998:	4b1f      	ldr	r3, [pc, #124]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 800499a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800499c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80049a4:	491c      	ldr	r1, [pc, #112]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80049a6:	4313      	orrs	r3, r2
 80049a8:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80049aa:	4b1b      	ldr	r3, [pc, #108]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80049ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80049ae:	f423 6270 	bic.w	r2, r3, #3840	@ 0xf00
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80049b6:	4918      	ldr	r1, [pc, #96]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80049b8:	4313      	orrs	r3, r2
 80049ba:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80049bc:	4b18      	ldr	r3, [pc, #96]	@ (8004a20 <HAL_RCC_OscConfig+0x4f0>)
 80049be:	2201      	movs	r2, #1
 80049c0:	601a      	str	r2, [r3, #0]
 80049c2:	f7fe fc63 	bl	800328c <HAL_GetTick>
 80049c6:	6138      	str	r0, [r7, #16]
 80049c8:	e008      	b.n	80049dc <HAL_RCC_OscConfig+0x4ac>
 80049ca:	f7fe fc5f 	bl	800328c <HAL_GetTick>
 80049ce:	4602      	mov	r2, r0
 80049d0:	693b      	ldr	r3, [r7, #16]
 80049d2:	1ad3      	subs	r3, r2, r3
 80049d4:	2b64      	cmp	r3, #100	@ 0x64
 80049d6:	d901      	bls.n	80049dc <HAL_RCC_OscConfig+0x4ac>
 80049d8:	2303      	movs	r3, #3
 80049da:	e0b7      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 80049dc:	4b0e      	ldr	r3, [pc, #56]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d0f0      	beq.n	80049ca <HAL_RCC_OscConfig+0x49a>
 80049e8:	e022      	b.n	8004a30 <HAL_RCC_OscConfig+0x500>
 80049ea:	4b0b      	ldr	r3, [pc, #44]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80049ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80049ee:	4a0a      	ldr	r2, [pc, #40]	@ (8004a18 <HAL_RCC_OscConfig+0x4e8>)
 80049f0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80049f4:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80049f6:	4b0a      	ldr	r3, [pc, #40]	@ (8004a20 <HAL_RCC_OscConfig+0x4f0>)
 80049f8:	2200      	movs	r2, #0
 80049fa:	601a      	str	r2, [r3, #0]
 80049fc:	f7fe fc46 	bl	800328c <HAL_GetTick>
 8004a00:	6138      	str	r0, [r7, #16]
 8004a02:	e00f      	b.n	8004a24 <HAL_RCC_OscConfig+0x4f4>
 8004a04:	f7fe fc42 	bl	800328c <HAL_GetTick>
 8004a08:	4602      	mov	r2, r0
 8004a0a:	693b      	ldr	r3, [r7, #16]
 8004a0c:	1ad3      	subs	r3, r2, r3
 8004a0e:	2b64      	cmp	r3, #100	@ 0x64
 8004a10:	d908      	bls.n	8004a24 <HAL_RCC_OscConfig+0x4f4>
 8004a12:	2303      	movs	r3, #3
 8004a14:	e09a      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004a16:	bf00      	nop
 8004a18:	40021000 	.word	0x40021000
 8004a1c:	40007000 	.word	0x40007000
 8004a20:	42420068 	.word	0x42420068
 8004a24:	4b4b      	ldr	r3, [pc, #300]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8004a2c:	2b00      	cmp	r3, #0
 8004a2e:	d1e9      	bne.n	8004a04 <HAL_RCC_OscConfig+0x4d4>
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	6a1b      	ldr	r3, [r3, #32]
 8004a34:	2b00      	cmp	r3, #0
 8004a36:	f000 8088 	beq.w	8004b4a <HAL_RCC_OscConfig+0x61a>
 8004a3a:	4b46      	ldr	r3, [pc, #280]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004a3c:	685b      	ldr	r3, [r3, #4]
 8004a3e:	f003 030c 	and.w	r3, r3, #12
 8004a42:	2b08      	cmp	r3, #8
 8004a44:	d068      	beq.n	8004b18 <HAL_RCC_OscConfig+0x5e8>
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	6a1b      	ldr	r3, [r3, #32]
 8004a4a:	2b02      	cmp	r3, #2
 8004a4c:	d14d      	bne.n	8004aea <HAL_RCC_OscConfig+0x5ba>
 8004a4e:	4b42      	ldr	r3, [pc, #264]	@ (8004b58 <HAL_RCC_OscConfig+0x628>)
 8004a50:	2200      	movs	r2, #0
 8004a52:	601a      	str	r2, [r3, #0]
 8004a54:	f7fe fc1a 	bl	800328c <HAL_GetTick>
 8004a58:	6138      	str	r0, [r7, #16]
 8004a5a:	e008      	b.n	8004a6e <HAL_RCC_OscConfig+0x53e>
 8004a5c:	f7fe fc16 	bl	800328c <HAL_GetTick>
 8004a60:	4602      	mov	r2, r0
 8004a62:	693b      	ldr	r3, [r7, #16]
 8004a64:	1ad3      	subs	r3, r2, r3
 8004a66:	2b02      	cmp	r3, #2
 8004a68:	d901      	bls.n	8004a6e <HAL_RCC_OscConfig+0x53e>
 8004a6a:	2303      	movs	r3, #3
 8004a6c:	e06e      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004a6e:	4b39      	ldr	r3, [pc, #228]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004a70:	681b      	ldr	r3, [r3, #0]
 8004a72:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	d1f0      	bne.n	8004a5c <HAL_RCC_OscConfig+0x52c>
 8004a7a:	687b      	ldr	r3, [r7, #4]
 8004a7c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a7e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004a82:	d10f      	bne.n	8004aa4 <HAL_RCC_OscConfig+0x574>
 8004a84:	4b33      	ldr	r3, [pc, #204]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004a86:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	685b      	ldr	r3, [r3, #4]
 8004a8c:	4931      	ldr	r1, [pc, #196]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004a8e:	4313      	orrs	r3, r2
 8004a90:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8004a92:	4b30      	ldr	r3, [pc, #192]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004a94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004a96:	f023 020f 	bic.w	r2, r3, #15
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	68db      	ldr	r3, [r3, #12]
 8004a9e:	492d      	ldr	r1, [pc, #180]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004aa0:	4313      	orrs	r3, r2
 8004aa2:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8004aa4:	4b2b      	ldr	r3, [pc, #172]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004aa6:	685b      	ldr	r3, [r3, #4]
 8004aa8:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8004aac:	687b      	ldr	r3, [r7, #4]
 8004aae:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004ab0:	687b      	ldr	r3, [r7, #4]
 8004ab2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ab4:	430b      	orrs	r3, r1
 8004ab6:	4927      	ldr	r1, [pc, #156]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004ab8:	4313      	orrs	r3, r2
 8004aba:	604b      	str	r3, [r1, #4]
 8004abc:	4b26      	ldr	r3, [pc, #152]	@ (8004b58 <HAL_RCC_OscConfig+0x628>)
 8004abe:	2201      	movs	r2, #1
 8004ac0:	601a      	str	r2, [r3, #0]
 8004ac2:	f7fe fbe3 	bl	800328c <HAL_GetTick>
 8004ac6:	6138      	str	r0, [r7, #16]
 8004ac8:	e008      	b.n	8004adc <HAL_RCC_OscConfig+0x5ac>
 8004aca:	f7fe fbdf 	bl	800328c <HAL_GetTick>
 8004ace:	4602      	mov	r2, r0
 8004ad0:	693b      	ldr	r3, [r7, #16]
 8004ad2:	1ad3      	subs	r3, r2, r3
 8004ad4:	2b02      	cmp	r3, #2
 8004ad6:	d901      	bls.n	8004adc <HAL_RCC_OscConfig+0x5ac>
 8004ad8:	2303      	movs	r3, #3
 8004ada:	e037      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004adc:	4b1d      	ldr	r3, [pc, #116]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004ae4:	2b00      	cmp	r3, #0
 8004ae6:	d0f0      	beq.n	8004aca <HAL_RCC_OscConfig+0x59a>
 8004ae8:	e02f      	b.n	8004b4a <HAL_RCC_OscConfig+0x61a>
 8004aea:	4b1b      	ldr	r3, [pc, #108]	@ (8004b58 <HAL_RCC_OscConfig+0x628>)
 8004aec:	2200      	movs	r2, #0
 8004aee:	601a      	str	r2, [r3, #0]
 8004af0:	f7fe fbcc 	bl	800328c <HAL_GetTick>
 8004af4:	6138      	str	r0, [r7, #16]
 8004af6:	e008      	b.n	8004b0a <HAL_RCC_OscConfig+0x5da>
 8004af8:	f7fe fbc8 	bl	800328c <HAL_GetTick>
 8004afc:	4602      	mov	r2, r0
 8004afe:	693b      	ldr	r3, [r7, #16]
 8004b00:	1ad3      	subs	r3, r2, r3
 8004b02:	2b02      	cmp	r3, #2
 8004b04:	d901      	bls.n	8004b0a <HAL_RCC_OscConfig+0x5da>
 8004b06:	2303      	movs	r3, #3
 8004b08:	e020      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004b0a:	4b12      	ldr	r3, [pc, #72]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004b0c:	681b      	ldr	r3, [r3, #0]
 8004b0e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004b12:	2b00      	cmp	r3, #0
 8004b14:	d1f0      	bne.n	8004af8 <HAL_RCC_OscConfig+0x5c8>
 8004b16:	e018      	b.n	8004b4a <HAL_RCC_OscConfig+0x61a>
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	6a1b      	ldr	r3, [r3, #32]
 8004b1c:	2b01      	cmp	r3, #1
 8004b1e:	d101      	bne.n	8004b24 <HAL_RCC_OscConfig+0x5f4>
 8004b20:	2301      	movs	r3, #1
 8004b22:	e013      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004b24:	4b0b      	ldr	r3, [pc, #44]	@ (8004b54 <HAL_RCC_OscConfig+0x624>)
 8004b26:	685b      	ldr	r3, [r3, #4]
 8004b28:	60fb      	str	r3, [r7, #12]
 8004b2a:	68fb      	ldr	r3, [r7, #12]
 8004b2c:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b34:	429a      	cmp	r2, r3
 8004b36:	d106      	bne.n	8004b46 <HAL_RCC_OscConfig+0x616>
 8004b38:	68fb      	ldr	r3, [r7, #12]
 8004b3a:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004b42:	429a      	cmp	r2, r3
 8004b44:	d001      	beq.n	8004b4a <HAL_RCC_OscConfig+0x61a>
 8004b46:	2301      	movs	r3, #1
 8004b48:	e000      	b.n	8004b4c <HAL_RCC_OscConfig+0x61c>
 8004b4a:	2300      	movs	r3, #0
 8004b4c:	4618      	mov	r0, r3
 8004b4e:	3718      	adds	r7, #24
 8004b50:	46bd      	mov	sp, r7
 8004b52:	bd80      	pop	{r7, pc}
 8004b54:	40021000 	.word	0x40021000
 8004b58:	42420060 	.word	0x42420060

08004b5c <HAL_RCC_ClockConfig>:
 8004b5c:	b580      	push	{r7, lr}
 8004b5e:	b084      	sub	sp, #16
 8004b60:	af00      	add	r7, sp, #0
 8004b62:	6078      	str	r0, [r7, #4]
 8004b64:	6039      	str	r1, [r7, #0]
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	2b00      	cmp	r3, #0
 8004b6a:	d101      	bne.n	8004b70 <HAL_RCC_ClockConfig+0x14>
 8004b6c:	2301      	movs	r3, #1
 8004b6e:	e0d0      	b.n	8004d12 <HAL_RCC_ClockConfig+0x1b6>
 8004b70:	4b6a      	ldr	r3, [pc, #424]	@ (8004d1c <HAL_RCC_ClockConfig+0x1c0>)
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	f003 0307 	and.w	r3, r3, #7
 8004b78:	683a      	ldr	r2, [r7, #0]
 8004b7a:	429a      	cmp	r2, r3
 8004b7c:	d910      	bls.n	8004ba0 <HAL_RCC_ClockConfig+0x44>
 8004b7e:	4b67      	ldr	r3, [pc, #412]	@ (8004d1c <HAL_RCC_ClockConfig+0x1c0>)
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	f023 0207 	bic.w	r2, r3, #7
 8004b86:	4965      	ldr	r1, [pc, #404]	@ (8004d1c <HAL_RCC_ClockConfig+0x1c0>)
 8004b88:	683b      	ldr	r3, [r7, #0]
 8004b8a:	4313      	orrs	r3, r2
 8004b8c:	600b      	str	r3, [r1, #0]
 8004b8e:	4b63      	ldr	r3, [pc, #396]	@ (8004d1c <HAL_RCC_ClockConfig+0x1c0>)
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	f003 0307 	and.w	r3, r3, #7
 8004b96:	683a      	ldr	r2, [r7, #0]
 8004b98:	429a      	cmp	r2, r3
 8004b9a:	d001      	beq.n	8004ba0 <HAL_RCC_ClockConfig+0x44>
 8004b9c:	2301      	movs	r3, #1
 8004b9e:	e0b8      	b.n	8004d12 <HAL_RCC_ClockConfig+0x1b6>
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	681b      	ldr	r3, [r3, #0]
 8004ba4:	f003 0302 	and.w	r3, r3, #2
 8004ba8:	2b00      	cmp	r3, #0
 8004baa:	d020      	beq.n	8004bee <HAL_RCC_ClockConfig+0x92>
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	f003 0304 	and.w	r3, r3, #4
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d005      	beq.n	8004bc4 <HAL_RCC_ClockConfig+0x68>
 8004bb8:	4b59      	ldr	r3, [pc, #356]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004bba:	685b      	ldr	r3, [r3, #4]
 8004bbc:	4a58      	ldr	r2, [pc, #352]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004bbe:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8004bc2:	6053      	str	r3, [r2, #4]
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	f003 0308 	and.w	r3, r3, #8
 8004bcc:	2b00      	cmp	r3, #0
 8004bce:	d005      	beq.n	8004bdc <HAL_RCC_ClockConfig+0x80>
 8004bd0:	4b53      	ldr	r3, [pc, #332]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004bd2:	685b      	ldr	r3, [r3, #4]
 8004bd4:	4a52      	ldr	r2, [pc, #328]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004bd6:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8004bda:	6053      	str	r3, [r2, #4]
 8004bdc:	4b50      	ldr	r3, [pc, #320]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004bde:	685b      	ldr	r3, [r3, #4]
 8004be0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	689b      	ldr	r3, [r3, #8]
 8004be8:	494d      	ldr	r1, [pc, #308]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004bea:	4313      	orrs	r3, r2
 8004bec:	604b      	str	r3, [r1, #4]
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	681b      	ldr	r3, [r3, #0]
 8004bf2:	f003 0301 	and.w	r3, r3, #1
 8004bf6:	2b00      	cmp	r3, #0
 8004bf8:	d040      	beq.n	8004c7c <HAL_RCC_ClockConfig+0x120>
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	685b      	ldr	r3, [r3, #4]
 8004bfe:	2b01      	cmp	r3, #1
 8004c00:	d107      	bne.n	8004c12 <HAL_RCC_ClockConfig+0xb6>
 8004c02:	4b47      	ldr	r3, [pc, #284]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004c04:	681b      	ldr	r3, [r3, #0]
 8004c06:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004c0a:	2b00      	cmp	r3, #0
 8004c0c:	d115      	bne.n	8004c3a <HAL_RCC_ClockConfig+0xde>
 8004c0e:	2301      	movs	r3, #1
 8004c10:	e07f      	b.n	8004d12 <HAL_RCC_ClockConfig+0x1b6>
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	685b      	ldr	r3, [r3, #4]
 8004c16:	2b02      	cmp	r3, #2
 8004c18:	d107      	bne.n	8004c2a <HAL_RCC_ClockConfig+0xce>
 8004c1a:	4b41      	ldr	r3, [pc, #260]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	d109      	bne.n	8004c3a <HAL_RCC_ClockConfig+0xde>
 8004c26:	2301      	movs	r3, #1
 8004c28:	e073      	b.n	8004d12 <HAL_RCC_ClockConfig+0x1b6>
 8004c2a:	4b3d      	ldr	r3, [pc, #244]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	f003 0302 	and.w	r3, r3, #2
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d101      	bne.n	8004c3a <HAL_RCC_ClockConfig+0xde>
 8004c36:	2301      	movs	r3, #1
 8004c38:	e06b      	b.n	8004d12 <HAL_RCC_ClockConfig+0x1b6>
 8004c3a:	4b39      	ldr	r3, [pc, #228]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004c3c:	685b      	ldr	r3, [r3, #4]
 8004c3e:	f023 0203 	bic.w	r2, r3, #3
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	685b      	ldr	r3, [r3, #4]
 8004c46:	4936      	ldr	r1, [pc, #216]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004c48:	4313      	orrs	r3, r2
 8004c4a:	604b      	str	r3, [r1, #4]
 8004c4c:	f7fe fb1e 	bl	800328c <HAL_GetTick>
 8004c50:	60f8      	str	r0, [r7, #12]
 8004c52:	e00a      	b.n	8004c6a <HAL_RCC_ClockConfig+0x10e>
 8004c54:	f7fe fb1a 	bl	800328c <HAL_GetTick>
 8004c58:	4602      	mov	r2, r0
 8004c5a:	68fb      	ldr	r3, [r7, #12]
 8004c5c:	1ad3      	subs	r3, r2, r3
 8004c5e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004c62:	4293      	cmp	r3, r2
 8004c64:	d901      	bls.n	8004c6a <HAL_RCC_ClockConfig+0x10e>
 8004c66:	2303      	movs	r3, #3
 8004c68:	e053      	b.n	8004d12 <HAL_RCC_ClockConfig+0x1b6>
 8004c6a:	4b2d      	ldr	r3, [pc, #180]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004c6c:	685b      	ldr	r3, [r3, #4]
 8004c6e:	f003 020c 	and.w	r2, r3, #12
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	685b      	ldr	r3, [r3, #4]
 8004c76:	009b      	lsls	r3, r3, #2
 8004c78:	429a      	cmp	r2, r3
 8004c7a:	d1eb      	bne.n	8004c54 <HAL_RCC_ClockConfig+0xf8>
 8004c7c:	4b27      	ldr	r3, [pc, #156]	@ (8004d1c <HAL_RCC_ClockConfig+0x1c0>)
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	f003 0307 	and.w	r3, r3, #7
 8004c84:	683a      	ldr	r2, [r7, #0]
 8004c86:	429a      	cmp	r2, r3
 8004c88:	d210      	bcs.n	8004cac <HAL_RCC_ClockConfig+0x150>
 8004c8a:	4b24      	ldr	r3, [pc, #144]	@ (8004d1c <HAL_RCC_ClockConfig+0x1c0>)
 8004c8c:	681b      	ldr	r3, [r3, #0]
 8004c8e:	f023 0207 	bic.w	r2, r3, #7
 8004c92:	4922      	ldr	r1, [pc, #136]	@ (8004d1c <HAL_RCC_ClockConfig+0x1c0>)
 8004c94:	683b      	ldr	r3, [r7, #0]
 8004c96:	4313      	orrs	r3, r2
 8004c98:	600b      	str	r3, [r1, #0]
 8004c9a:	4b20      	ldr	r3, [pc, #128]	@ (8004d1c <HAL_RCC_ClockConfig+0x1c0>)
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	f003 0307 	and.w	r3, r3, #7
 8004ca2:	683a      	ldr	r2, [r7, #0]
 8004ca4:	429a      	cmp	r2, r3
 8004ca6:	d001      	beq.n	8004cac <HAL_RCC_ClockConfig+0x150>
 8004ca8:	2301      	movs	r3, #1
 8004caa:	e032      	b.n	8004d12 <HAL_RCC_ClockConfig+0x1b6>
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	681b      	ldr	r3, [r3, #0]
 8004cb0:	f003 0304 	and.w	r3, r3, #4
 8004cb4:	2b00      	cmp	r3, #0
 8004cb6:	d008      	beq.n	8004cca <HAL_RCC_ClockConfig+0x16e>
 8004cb8:	4b19      	ldr	r3, [pc, #100]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004cba:	685b      	ldr	r3, [r3, #4]
 8004cbc:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	68db      	ldr	r3, [r3, #12]
 8004cc4:	4916      	ldr	r1, [pc, #88]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004cc6:	4313      	orrs	r3, r2
 8004cc8:	604b      	str	r3, [r1, #4]
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	f003 0308 	and.w	r3, r3, #8
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	d009      	beq.n	8004cea <HAL_RCC_ClockConfig+0x18e>
 8004cd6:	4b12      	ldr	r3, [pc, #72]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004cd8:	685b      	ldr	r3, [r3, #4]
 8004cda:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8004cde:	687b      	ldr	r3, [r7, #4]
 8004ce0:	691b      	ldr	r3, [r3, #16]
 8004ce2:	00db      	lsls	r3, r3, #3
 8004ce4:	490e      	ldr	r1, [pc, #56]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004ce6:	4313      	orrs	r3, r2
 8004ce8:	604b      	str	r3, [r1, #4]
 8004cea:	f000 f821 	bl	8004d30 <HAL_RCC_GetSysClockFreq>
 8004cee:	4602      	mov	r2, r0
 8004cf0:	4b0b      	ldr	r3, [pc, #44]	@ (8004d20 <HAL_RCC_ClockConfig+0x1c4>)
 8004cf2:	685b      	ldr	r3, [r3, #4]
 8004cf4:	091b      	lsrs	r3, r3, #4
 8004cf6:	f003 030f 	and.w	r3, r3, #15
 8004cfa:	490a      	ldr	r1, [pc, #40]	@ (8004d24 <HAL_RCC_ClockConfig+0x1c8>)
 8004cfc:	5ccb      	ldrb	r3, [r1, r3]
 8004cfe:	fa22 f303 	lsr.w	r3, r2, r3
 8004d02:	4a09      	ldr	r2, [pc, #36]	@ (8004d28 <HAL_RCC_ClockConfig+0x1cc>)
 8004d04:	6013      	str	r3, [r2, #0]
 8004d06:	4b09      	ldr	r3, [pc, #36]	@ (8004d2c <HAL_RCC_ClockConfig+0x1d0>)
 8004d08:	681b      	ldr	r3, [r3, #0]
 8004d0a:	4618      	mov	r0, r3
 8004d0c:	f7fe fa7c 	bl	8003208 <HAL_InitTick>
 8004d10:	2300      	movs	r3, #0
 8004d12:	4618      	mov	r0, r3
 8004d14:	3710      	adds	r7, #16
 8004d16:	46bd      	mov	sp, r7
 8004d18:	bd80      	pop	{r7, pc}
 8004d1a:	bf00      	nop
 8004d1c:	40022000 	.word	0x40022000
 8004d20:	40021000 	.word	0x40021000
 8004d24:	08006c38 	.word	0x08006c38
 8004d28:	2000006c 	.word	0x2000006c
 8004d2c:	20000070 	.word	0x20000070

08004d30 <HAL_RCC_GetSysClockFreq>:
 8004d30:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004d34:	b08e      	sub	sp, #56	@ 0x38
 8004d36:	af00      	add	r7, sp, #0
 8004d38:	2300      	movs	r3, #0
 8004d3a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004d3c:	2300      	movs	r3, #0
 8004d3e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004d40:	2300      	movs	r3, #0
 8004d42:	637b      	str	r3, [r7, #52]	@ 0x34
 8004d44:	2300      	movs	r3, #0
 8004d46:	627b      	str	r3, [r7, #36]	@ 0x24
 8004d48:	2300      	movs	r3, #0
 8004d4a:	633b      	str	r3, [r7, #48]	@ 0x30
 8004d4c:	2300      	movs	r3, #0
 8004d4e:	623b      	str	r3, [r7, #32]
 8004d50:	2300      	movs	r3, #0
 8004d52:	61fb      	str	r3, [r7, #28]
 8004d54:	4b4e      	ldr	r3, [pc, #312]	@ (8004e90 <HAL_RCC_GetSysClockFreq+0x160>)
 8004d56:	685b      	ldr	r3, [r3, #4]
 8004d58:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004d5a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004d5c:	f003 030c 	and.w	r3, r3, #12
 8004d60:	2b04      	cmp	r3, #4
 8004d62:	d002      	beq.n	8004d6a <HAL_RCC_GetSysClockFreq+0x3a>
 8004d64:	2b08      	cmp	r3, #8
 8004d66:	d003      	beq.n	8004d70 <HAL_RCC_GetSysClockFreq+0x40>
 8004d68:	e089      	b.n	8004e7e <HAL_RCC_GetSysClockFreq+0x14e>
 8004d6a:	4b4a      	ldr	r3, [pc, #296]	@ (8004e94 <HAL_RCC_GetSysClockFreq+0x164>)
 8004d6c:	633b      	str	r3, [r7, #48]	@ 0x30
 8004d6e:	e089      	b.n	8004e84 <HAL_RCC_GetSysClockFreq+0x154>
 8004d70:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004d72:	0c9b      	lsrs	r3, r3, #18
 8004d74:	f003 020f 	and.w	r2, r3, #15
 8004d78:	4b47      	ldr	r3, [pc, #284]	@ (8004e98 <HAL_RCC_GetSysClockFreq+0x168>)
 8004d7a:	5c9b      	ldrb	r3, [r3, r2]
 8004d7c:	627b      	str	r3, [r7, #36]	@ 0x24
 8004d7e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004d80:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004d84:	2b00      	cmp	r3, #0
 8004d86:	d072      	beq.n	8004e6e <HAL_RCC_GetSysClockFreq+0x13e>
 8004d88:	4b41      	ldr	r3, [pc, #260]	@ (8004e90 <HAL_RCC_GetSysClockFreq+0x160>)
 8004d8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004d8c:	f003 020f 	and.w	r2, r3, #15
 8004d90:	4b42      	ldr	r3, [pc, #264]	@ (8004e9c <HAL_RCC_GetSysClockFreq+0x16c>)
 8004d92:	5c9b      	ldrb	r3, [r3, r2]
 8004d94:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004d96:	4b3e      	ldr	r3, [pc, #248]	@ (8004e90 <HAL_RCC_GetSysClockFreq+0x160>)
 8004d98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004d9a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004d9e:	2b00      	cmp	r3, #0
 8004da0:	d053      	beq.n	8004e4a <HAL_RCC_GetSysClockFreq+0x11a>
 8004da2:	4b3b      	ldr	r3, [pc, #236]	@ (8004e90 <HAL_RCC_GetSysClockFreq+0x160>)
 8004da4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004da6:	091b      	lsrs	r3, r3, #4
 8004da8:	f003 030f 	and.w	r3, r3, #15
 8004dac:	3301      	adds	r3, #1
 8004dae:	623b      	str	r3, [r7, #32]
 8004db0:	4b37      	ldr	r3, [pc, #220]	@ (8004e90 <HAL_RCC_GetSysClockFreq+0x160>)
 8004db2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004db4:	0a1b      	lsrs	r3, r3, #8
 8004db6:	f003 030f 	and.w	r3, r3, #15
 8004dba:	3302      	adds	r3, #2
 8004dbc:	61fb      	str	r3, [r7, #28]
 8004dbe:	69fb      	ldr	r3, [r7, #28]
 8004dc0:	2200      	movs	r2, #0
 8004dc2:	469a      	mov	sl, r3
 8004dc4:	4693      	mov	fp, r2
 8004dc6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004dc8:	2200      	movs	r2, #0
 8004dca:	613b      	str	r3, [r7, #16]
 8004dcc:	617a      	str	r2, [r7, #20]
 8004dce:	693b      	ldr	r3, [r7, #16]
 8004dd0:	fb03 f20b 	mul.w	r2, r3, fp
 8004dd4:	697b      	ldr	r3, [r7, #20]
 8004dd6:	fb0a f303 	mul.w	r3, sl, r3
 8004dda:	4413      	add	r3, r2
 8004ddc:	693a      	ldr	r2, [r7, #16]
 8004dde:	fbaa 0102 	umull	r0, r1, sl, r2
 8004de2:	440b      	add	r3, r1
 8004de4:	4619      	mov	r1, r3
 8004de6:	4b2b      	ldr	r3, [pc, #172]	@ (8004e94 <HAL_RCC_GetSysClockFreq+0x164>)
 8004de8:	fb03 f201 	mul.w	r2, r3, r1
 8004dec:	2300      	movs	r3, #0
 8004dee:	fb00 f303 	mul.w	r3, r0, r3
 8004df2:	4413      	add	r3, r2
 8004df4:	4a27      	ldr	r2, [pc, #156]	@ (8004e94 <HAL_RCC_GetSysClockFreq+0x164>)
 8004df6:	fba0 4502 	umull	r4, r5, r0, r2
 8004dfa:	442b      	add	r3, r5
 8004dfc:	461d      	mov	r5, r3
 8004dfe:	6a3b      	ldr	r3, [r7, #32]
 8004e00:	2200      	movs	r2, #0
 8004e02:	60bb      	str	r3, [r7, #8]
 8004e04:	60fa      	str	r2, [r7, #12]
 8004e06:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e08:	2200      	movs	r2, #0
 8004e0a:	603b      	str	r3, [r7, #0]
 8004e0c:	607a      	str	r2, [r7, #4]
 8004e0e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8004e12:	460b      	mov	r3, r1
 8004e14:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8004e18:	4652      	mov	r2, sl
 8004e1a:	fb02 f203 	mul.w	r2, r2, r3
 8004e1e:	465b      	mov	r3, fp
 8004e20:	4684      	mov	ip, r0
 8004e22:	fb0c f303 	mul.w	r3, ip, r3
 8004e26:	4413      	add	r3, r2
 8004e28:	4602      	mov	r2, r0
 8004e2a:	4651      	mov	r1, sl
 8004e2c:	fba2 8901 	umull	r8, r9, r2, r1
 8004e30:	444b      	add	r3, r9
 8004e32:	4699      	mov	r9, r3
 8004e34:	4642      	mov	r2, r8
 8004e36:	464b      	mov	r3, r9
 8004e38:	4620      	mov	r0, r4
 8004e3a:	4629      	mov	r1, r5
 8004e3c:	f7fc f92e 	bl	800109c <__aeabi_uldivmod>
 8004e40:	4602      	mov	r2, r0
 8004e42:	460b      	mov	r3, r1
 8004e44:	4613      	mov	r3, r2
 8004e46:	637b      	str	r3, [r7, #52]	@ 0x34
 8004e48:	e007      	b.n	8004e5a <HAL_RCC_GetSysClockFreq+0x12a>
 8004e4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e4c:	4a11      	ldr	r2, [pc, #68]	@ (8004e94 <HAL_RCC_GetSysClockFreq+0x164>)
 8004e4e:	fb03 f202 	mul.w	r2, r3, r2
 8004e52:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e54:	fbb2 f3f3 	udiv	r3, r2, r3
 8004e58:	637b      	str	r3, [r7, #52]	@ 0x34
 8004e5a:	4b0f      	ldr	r3, [pc, #60]	@ (8004e98 <HAL_RCC_GetSysClockFreq+0x168>)
 8004e5c:	7b5b      	ldrb	r3, [r3, #13]
 8004e5e:	461a      	mov	r2, r3
 8004e60:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e62:	4293      	cmp	r3, r2
 8004e64:	d108      	bne.n	8004e78 <HAL_RCC_GetSysClockFreq+0x148>
 8004e66:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004e68:	085b      	lsrs	r3, r3, #1
 8004e6a:	637b      	str	r3, [r7, #52]	@ 0x34
 8004e6c:	e004      	b.n	8004e78 <HAL_RCC_GetSysClockFreq+0x148>
 8004e6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e70:	4a0b      	ldr	r2, [pc, #44]	@ (8004ea0 <HAL_RCC_GetSysClockFreq+0x170>)
 8004e72:	fb02 f303 	mul.w	r3, r2, r3
 8004e76:	637b      	str	r3, [r7, #52]	@ 0x34
 8004e78:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004e7a:	633b      	str	r3, [r7, #48]	@ 0x30
 8004e7c:	e002      	b.n	8004e84 <HAL_RCC_GetSysClockFreq+0x154>
 8004e7e:	4b09      	ldr	r3, [pc, #36]	@ (8004ea4 <HAL_RCC_GetSysClockFreq+0x174>)
 8004e80:	633b      	str	r3, [r7, #48]	@ 0x30
 8004e82:	bf00      	nop
 8004e84:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004e86:	4618      	mov	r0, r3
 8004e88:	3738      	adds	r7, #56	@ 0x38
 8004e8a:	46bd      	mov	sp, r7
 8004e8c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004e90:	40021000 	.word	0x40021000
 8004e94:	017d7840 	.word	0x017d7840
 8004e98:	08006c50 	.word	0x08006c50
 8004e9c:	08006c60 	.word	0x08006c60
 8004ea0:	003d0900 	.word	0x003d0900
 8004ea4:	007a1200 	.word	0x007a1200

08004ea8 <HAL_RCC_GetHCLKFreq>:
 8004ea8:	b480      	push	{r7}
 8004eaa:	af00      	add	r7, sp, #0
 8004eac:	4b02      	ldr	r3, [pc, #8]	@ (8004eb8 <HAL_RCC_GetHCLKFreq+0x10>)
 8004eae:	681b      	ldr	r3, [r3, #0]
 8004eb0:	4618      	mov	r0, r3
 8004eb2:	46bd      	mov	sp, r7
 8004eb4:	bc80      	pop	{r7}
 8004eb6:	4770      	bx	lr
 8004eb8:	2000006c 	.word	0x2000006c

08004ebc <HAL_RCC_GetPCLK1Freq>:
 8004ebc:	b580      	push	{r7, lr}
 8004ebe:	af00      	add	r7, sp, #0
 8004ec0:	f7ff fff2 	bl	8004ea8 <HAL_RCC_GetHCLKFreq>
 8004ec4:	4602      	mov	r2, r0
 8004ec6:	4b05      	ldr	r3, [pc, #20]	@ (8004edc <HAL_RCC_GetPCLK1Freq+0x20>)
 8004ec8:	685b      	ldr	r3, [r3, #4]
 8004eca:	0a1b      	lsrs	r3, r3, #8
 8004ecc:	f003 0307 	and.w	r3, r3, #7
 8004ed0:	4903      	ldr	r1, [pc, #12]	@ (8004ee0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004ed2:	5ccb      	ldrb	r3, [r1, r3]
 8004ed4:	fa22 f303 	lsr.w	r3, r2, r3
 8004ed8:	4618      	mov	r0, r3
 8004eda:	bd80      	pop	{r7, pc}
 8004edc:	40021000 	.word	0x40021000
 8004ee0:	08006c48 	.word	0x08006c48

08004ee4 <HAL_RCC_GetPCLK2Freq>:
 8004ee4:	b580      	push	{r7, lr}
 8004ee6:	af00      	add	r7, sp, #0
 8004ee8:	f7ff ffde 	bl	8004ea8 <HAL_RCC_GetHCLKFreq>
 8004eec:	4602      	mov	r2, r0
 8004eee:	4b05      	ldr	r3, [pc, #20]	@ (8004f04 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004ef0:	685b      	ldr	r3, [r3, #4]
 8004ef2:	0adb      	lsrs	r3, r3, #11
 8004ef4:	f003 0307 	and.w	r3, r3, #7
 8004ef8:	4903      	ldr	r1, [pc, #12]	@ (8004f08 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004efa:	5ccb      	ldrb	r3, [r1, r3]
 8004efc:	fa22 f303 	lsr.w	r3, r2, r3
 8004f00:	4618      	mov	r0, r3
 8004f02:	bd80      	pop	{r7, pc}
 8004f04:	40021000 	.word	0x40021000
 8004f08:	08006c48 	.word	0x08006c48

08004f0c <RCC_Delay>:
 8004f0c:	b480      	push	{r7}
 8004f0e:	b085      	sub	sp, #20
 8004f10:	af00      	add	r7, sp, #0
 8004f12:	6078      	str	r0, [r7, #4]
 8004f14:	4b0a      	ldr	r3, [pc, #40]	@ (8004f40 <RCC_Delay+0x34>)
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	4a0a      	ldr	r2, [pc, #40]	@ (8004f44 <RCC_Delay+0x38>)
 8004f1a:	fba2 2303 	umull	r2, r3, r2, r3
 8004f1e:	0a5b      	lsrs	r3, r3, #9
 8004f20:	687a      	ldr	r2, [r7, #4]
 8004f22:	fb02 f303 	mul.w	r3, r2, r3
 8004f26:	60fb      	str	r3, [r7, #12]
 8004f28:	bf00      	nop
 8004f2a:	68fb      	ldr	r3, [r7, #12]
 8004f2c:	1e5a      	subs	r2, r3, #1
 8004f2e:	60fa      	str	r2, [r7, #12]
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	d1f9      	bne.n	8004f28 <RCC_Delay+0x1c>
 8004f34:	bf00      	nop
 8004f36:	bf00      	nop
 8004f38:	3714      	adds	r7, #20
 8004f3a:	46bd      	mov	sp, r7
 8004f3c:	bc80      	pop	{r7}
 8004f3e:	4770      	bx	lr
 8004f40:	2000006c 	.word	0x2000006c
 8004f44:	10624dd3 	.word	0x10624dd3

08004f48 <HAL_RCCEx_PeriphCLKConfig>:
 8004f48:	b580      	push	{r7, lr}
 8004f4a:	b088      	sub	sp, #32
 8004f4c:	af00      	add	r7, sp, #0
 8004f4e:	6078      	str	r0, [r7, #4]
 8004f50:	2300      	movs	r3, #0
 8004f52:	617b      	str	r3, [r7, #20]
 8004f54:	2300      	movs	r3, #0
 8004f56:	613b      	str	r3, [r7, #16]
 8004f58:	2300      	movs	r3, #0
 8004f5a:	61fb      	str	r3, [r7, #28]
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	f003 0301 	and.w	r3, r3, #1
 8004f64:	2b00      	cmp	r3, #0
 8004f66:	d07d      	beq.n	8005064 <HAL_RCCEx_PeriphCLKConfig+0x11c>
 8004f68:	2300      	movs	r3, #0
 8004f6a:	76fb      	strb	r3, [r7, #27]
 8004f6c:	4b8b      	ldr	r3, [pc, #556]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004f6e:	69db      	ldr	r3, [r3, #28]
 8004f70:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004f74:	2b00      	cmp	r3, #0
 8004f76:	d10d      	bne.n	8004f94 <HAL_RCCEx_PeriphCLKConfig+0x4c>
 8004f78:	4b88      	ldr	r3, [pc, #544]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004f7a:	69db      	ldr	r3, [r3, #28]
 8004f7c:	4a87      	ldr	r2, [pc, #540]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004f7e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004f82:	61d3      	str	r3, [r2, #28]
 8004f84:	4b85      	ldr	r3, [pc, #532]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004f86:	69db      	ldr	r3, [r3, #28]
 8004f88:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004f8c:	60fb      	str	r3, [r7, #12]
 8004f8e:	68fb      	ldr	r3, [r7, #12]
 8004f90:	2301      	movs	r3, #1
 8004f92:	76fb      	strb	r3, [r7, #27]
 8004f94:	4b82      	ldr	r3, [pc, #520]	@ (80051a0 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8004f96:	681b      	ldr	r3, [r3, #0]
 8004f98:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004f9c:	2b00      	cmp	r3, #0
 8004f9e:	d118      	bne.n	8004fd2 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8004fa0:	4b7f      	ldr	r3, [pc, #508]	@ (80051a0 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	4a7e      	ldr	r2, [pc, #504]	@ (80051a0 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8004fa6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004faa:	6013      	str	r3, [r2, #0]
 8004fac:	f7fe f96e 	bl	800328c <HAL_GetTick>
 8004fb0:	6178      	str	r0, [r7, #20]
 8004fb2:	e008      	b.n	8004fc6 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004fb4:	f7fe f96a 	bl	800328c <HAL_GetTick>
 8004fb8:	4602      	mov	r2, r0
 8004fba:	697b      	ldr	r3, [r7, #20]
 8004fbc:	1ad3      	subs	r3, r2, r3
 8004fbe:	2b64      	cmp	r3, #100	@ 0x64
 8004fc0:	d901      	bls.n	8004fc6 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004fc2:	2303      	movs	r3, #3
 8004fc4:	e0e5      	b.n	8005192 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8004fc6:	4b76      	ldr	r3, [pc, #472]	@ (80051a0 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8004fc8:	681b      	ldr	r3, [r3, #0]
 8004fca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004fce:	2b00      	cmp	r3, #0
 8004fd0:	d0f0      	beq.n	8004fb4 <HAL_RCCEx_PeriphCLKConfig+0x6c>
 8004fd2:	4b72      	ldr	r3, [pc, #456]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004fd4:	6a1b      	ldr	r3, [r3, #32]
 8004fd6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004fda:	613b      	str	r3, [r7, #16]
 8004fdc:	693b      	ldr	r3, [r7, #16]
 8004fde:	2b00      	cmp	r3, #0
 8004fe0:	d02e      	beq.n	8005040 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	685b      	ldr	r3, [r3, #4]
 8004fe6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004fea:	693a      	ldr	r2, [r7, #16]
 8004fec:	429a      	cmp	r2, r3
 8004fee:	d027      	beq.n	8005040 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8004ff0:	4b6a      	ldr	r3, [pc, #424]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8004ff2:	6a1b      	ldr	r3, [r3, #32]
 8004ff4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004ff8:	613b      	str	r3, [r7, #16]
 8004ffa:	4b6a      	ldr	r3, [pc, #424]	@ (80051a4 <HAL_RCCEx_PeriphCLKConfig+0x25c>)
 8004ffc:	2201      	movs	r2, #1
 8004ffe:	601a      	str	r2, [r3, #0]
 8005000:	4b68      	ldr	r3, [pc, #416]	@ (80051a4 <HAL_RCCEx_PeriphCLKConfig+0x25c>)
 8005002:	2200      	movs	r2, #0
 8005004:	601a      	str	r2, [r3, #0]
 8005006:	4a65      	ldr	r2, [pc, #404]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005008:	693b      	ldr	r3, [r7, #16]
 800500a:	6213      	str	r3, [r2, #32]
 800500c:	693b      	ldr	r3, [r7, #16]
 800500e:	f003 0301 	and.w	r3, r3, #1
 8005012:	2b00      	cmp	r3, #0
 8005014:	d014      	beq.n	8005040 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8005016:	f7fe f939 	bl	800328c <HAL_GetTick>
 800501a:	6178      	str	r0, [r7, #20]
 800501c:	e00a      	b.n	8005034 <HAL_RCCEx_PeriphCLKConfig+0xec>
 800501e:	f7fe f935 	bl	800328c <HAL_GetTick>
 8005022:	4602      	mov	r2, r0
 8005024:	697b      	ldr	r3, [r7, #20]
 8005026:	1ad3      	subs	r3, r2, r3
 8005028:	f241 3288 	movw	r2, #5000	@ 0x1388
 800502c:	4293      	cmp	r3, r2
 800502e:	d901      	bls.n	8005034 <HAL_RCCEx_PeriphCLKConfig+0xec>
 8005030:	2303      	movs	r3, #3
 8005032:	e0ae      	b.n	8005192 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8005034:	4b59      	ldr	r3, [pc, #356]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005036:	6a1b      	ldr	r3, [r3, #32]
 8005038:	f003 0302 	and.w	r3, r3, #2
 800503c:	2b00      	cmp	r3, #0
 800503e:	d0ee      	beq.n	800501e <HAL_RCCEx_PeriphCLKConfig+0xd6>
 8005040:	4b56      	ldr	r3, [pc, #344]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005042:	6a1b      	ldr	r3, [r3, #32]
 8005044:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	685b      	ldr	r3, [r3, #4]
 800504c:	4953      	ldr	r1, [pc, #332]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800504e:	4313      	orrs	r3, r2
 8005050:	620b      	str	r3, [r1, #32]
 8005052:	7efb      	ldrb	r3, [r7, #27]
 8005054:	2b01      	cmp	r3, #1
 8005056:	d105      	bne.n	8005064 <HAL_RCCEx_PeriphCLKConfig+0x11c>
 8005058:	4b50      	ldr	r3, [pc, #320]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800505a:	69db      	ldr	r3, [r3, #28]
 800505c:	4a4f      	ldr	r2, [pc, #316]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800505e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005062:	61d3      	str	r3, [r2, #28]
 8005064:	687b      	ldr	r3, [r7, #4]
 8005066:	681b      	ldr	r3, [r3, #0]
 8005068:	f003 0302 	and.w	r3, r3, #2
 800506c:	2b00      	cmp	r3, #0
 800506e:	d008      	beq.n	8005082 <HAL_RCCEx_PeriphCLKConfig+0x13a>
 8005070:	4b4a      	ldr	r3, [pc, #296]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005072:	685b      	ldr	r3, [r3, #4]
 8005074:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	689b      	ldr	r3, [r3, #8]
 800507c:	4947      	ldr	r1, [pc, #284]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800507e:	4313      	orrs	r3, r2
 8005080:	604b      	str	r3, [r1, #4]
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	681b      	ldr	r3, [r3, #0]
 8005086:	f003 0304 	and.w	r3, r3, #4
 800508a:	2b00      	cmp	r3, #0
 800508c:	d008      	beq.n	80050a0 <HAL_RCCEx_PeriphCLKConfig+0x158>
 800508e:	4b43      	ldr	r3, [pc, #268]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005090:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005092:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	68db      	ldr	r3, [r3, #12]
 800509a:	4940      	ldr	r1, [pc, #256]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800509c:	4313      	orrs	r3, r2
 800509e:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	681b      	ldr	r3, [r3, #0]
 80050a4:	f003 0308 	and.w	r3, r3, #8
 80050a8:	2b00      	cmp	r3, #0
 80050aa:	d008      	beq.n	80050be <HAL_RCCEx_PeriphCLKConfig+0x176>
 80050ac:	4b3b      	ldr	r3, [pc, #236]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80050ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050b0:	f423 2280 	bic.w	r2, r3, #262144	@ 0x40000
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	691b      	ldr	r3, [r3, #16]
 80050b8:	4938      	ldr	r1, [pc, #224]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80050ba:	4313      	orrs	r3, r2
 80050bc:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80050be:	4b37      	ldr	r3, [pc, #220]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80050c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050c2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80050c6:	2b00      	cmp	r3, #0
 80050c8:	d105      	bne.n	80050d6 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 80050ca:	4b34      	ldr	r3, [pc, #208]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80050cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050ce:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80050d2:	2b00      	cmp	r3, #0
 80050d4:	d001      	beq.n	80050da <HAL_RCCEx_PeriphCLKConfig+0x192>
 80050d6:	2301      	movs	r3, #1
 80050d8:	61fb      	str	r3, [r7, #28]
 80050da:	69fb      	ldr	r3, [r7, #28]
 80050dc:	2b01      	cmp	r3, #1
 80050de:	d148      	bne.n	8005172 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 80050e0:	4b2e      	ldr	r3, [pc, #184]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80050e8:	2b00      	cmp	r3, #0
 80050ea:	d138      	bne.n	800515e <HAL_RCCEx_PeriphCLKConfig+0x216>
 80050ec:	4b2b      	ldr	r3, [pc, #172]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80050ee:	681b      	ldr	r3, [r3, #0]
 80050f0:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80050f4:	2b00      	cmp	r3, #0
 80050f6:	d009      	beq.n	800510c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 80050f8:	4b28      	ldr	r3, [pc, #160]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 80050fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050fc:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8005100:	687b      	ldr	r3, [r7, #4]
 8005102:	699b      	ldr	r3, [r3, #24]
 8005104:	429a      	cmp	r2, r3
 8005106:	d001      	beq.n	800510c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 8005108:	2301      	movs	r3, #1
 800510a:	e042      	b.n	8005192 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 800510c:	4b23      	ldr	r3, [pc, #140]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800510e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005110:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	699b      	ldr	r3, [r3, #24]
 8005118:	4920      	ldr	r1, [pc, #128]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800511a:	4313      	orrs	r3, r2
 800511c:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800511e:	4b1f      	ldr	r3, [pc, #124]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005120:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005122:	f423 4270 	bic.w	r2, r3, #61440	@ 0xf000
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	695b      	ldr	r3, [r3, #20]
 800512a:	491c      	ldr	r1, [pc, #112]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800512c:	4313      	orrs	r3, r2
 800512e:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8005130:	4b1d      	ldr	r3, [pc, #116]	@ (80051a8 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005132:	2201      	movs	r2, #1
 8005134:	601a      	str	r2, [r3, #0]
 8005136:	f7fe f8a9 	bl	800328c <HAL_GetTick>
 800513a:	6178      	str	r0, [r7, #20]
 800513c:	e008      	b.n	8005150 <HAL_RCCEx_PeriphCLKConfig+0x208>
 800513e:	f7fe f8a5 	bl	800328c <HAL_GetTick>
 8005142:	4602      	mov	r2, r0
 8005144:	697b      	ldr	r3, [r7, #20]
 8005146:	1ad3      	subs	r3, r2, r3
 8005148:	2b64      	cmp	r3, #100	@ 0x64
 800514a:	d901      	bls.n	8005150 <HAL_RCCEx_PeriphCLKConfig+0x208>
 800514c:	2303      	movs	r3, #3
 800514e:	e020      	b.n	8005192 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8005150:	4b12      	ldr	r3, [pc, #72]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005152:	681b      	ldr	r3, [r3, #0]
 8005154:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8005158:	2b00      	cmp	r3, #0
 800515a:	d0f0      	beq.n	800513e <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 800515c:	e009      	b.n	8005172 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 800515e:	4b0f      	ldr	r3, [pc, #60]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005160:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005162:	f403 4270 	and.w	r2, r3, #61440	@ 0xf000
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	695b      	ldr	r3, [r3, #20]
 800516a:	429a      	cmp	r2, r3
 800516c:	d001      	beq.n	8005172 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 800516e:	2301      	movs	r3, #1
 8005170:	e00f      	b.n	8005192 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	681b      	ldr	r3, [r3, #0]
 8005176:	f003 0310 	and.w	r3, r3, #16
 800517a:	2b00      	cmp	r3, #0
 800517c:	d008      	beq.n	8005190 <HAL_RCCEx_PeriphCLKConfig+0x248>
 800517e:	4b07      	ldr	r3, [pc, #28]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005180:	685b      	ldr	r3, [r3, #4]
 8005182:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	69db      	ldr	r3, [r3, #28]
 800518a:	4904      	ldr	r1, [pc, #16]	@ (800519c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800518c:	4313      	orrs	r3, r2
 800518e:	604b      	str	r3, [r1, #4]
 8005190:	2300      	movs	r3, #0
 8005192:	4618      	mov	r0, r3
 8005194:	3720      	adds	r7, #32
 8005196:	46bd      	mov	sp, r7
 8005198:	bd80      	pop	{r7, pc}
 800519a:	bf00      	nop
 800519c:	40021000 	.word	0x40021000
 80051a0:	40007000 	.word	0x40007000
 80051a4:	42420440 	.word	0x42420440
 80051a8:	42420070 	.word	0x42420070

080051ac <HAL_RCCEx_GetPeriphCLKFreq>:
 80051ac:	b580      	push	{r7, lr}
 80051ae:	b08a      	sub	sp, #40	@ 0x28
 80051b0:	af00      	add	r7, sp, #0
 80051b2:	6078      	str	r0, [r7, #4]
 80051b4:	2300      	movs	r3, #0
 80051b6:	61fb      	str	r3, [r7, #28]
 80051b8:	2300      	movs	r3, #0
 80051ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80051bc:	2300      	movs	r3, #0
 80051be:	61bb      	str	r3, [r7, #24]
 80051c0:	2300      	movs	r3, #0
 80051c2:	617b      	str	r3, [r7, #20]
 80051c4:	2300      	movs	r3, #0
 80051c6:	613b      	str	r3, [r7, #16]
 80051c8:	2300      	movs	r3, #0
 80051ca:	60fb      	str	r3, [r7, #12]
 80051cc:	2300      	movs	r3, #0
 80051ce:	60bb      	str	r3, [r7, #8]
 80051d0:	2300      	movs	r3, #0
 80051d2:	623b      	str	r3, [r7, #32]
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	3b01      	subs	r3, #1
 80051d8:	2b0f      	cmp	r3, #15
 80051da:	f200 811d 	bhi.w	8005418 <HAL_RCCEx_GetPeriphCLKFreq+0x26c>
 80051de:	a201      	add	r2, pc, #4	@ (adr r2, 80051e4 <HAL_RCCEx_GetPeriphCLKFreq+0x38>)
 80051e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80051e4:	08005399 	.word	0x08005399
 80051e8:	080053fd 	.word	0x080053fd
 80051ec:	08005419 	.word	0x08005419
 80051f0:	080052f7 	.word	0x080052f7
 80051f4:	08005419 	.word	0x08005419
 80051f8:	08005419 	.word	0x08005419
 80051fc:	08005419 	.word	0x08005419
 8005200:	08005349 	.word	0x08005349
 8005204:	08005419 	.word	0x08005419
 8005208:	08005419 	.word	0x08005419
 800520c:	08005419 	.word	0x08005419
 8005210:	08005419 	.word	0x08005419
 8005214:	08005419 	.word	0x08005419
 8005218:	08005419 	.word	0x08005419
 800521c:	08005419 	.word	0x08005419
 8005220:	08005225 	.word	0x08005225
 8005224:	4b83      	ldr	r3, [pc, #524]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8005226:	685b      	ldr	r3, [r3, #4]
 8005228:	60bb      	str	r3, [r7, #8]
 800522a:	4b82      	ldr	r3, [pc, #520]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800522c:	681b      	ldr	r3, [r3, #0]
 800522e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8005232:	2b00      	cmp	r3, #0
 8005234:	f000 80f2 	beq.w	800541c <HAL_RCCEx_GetPeriphCLKFreq+0x270>
 8005238:	68bb      	ldr	r3, [r7, #8]
 800523a:	0c9b      	lsrs	r3, r3, #18
 800523c:	f003 030f 	and.w	r3, r3, #15
 8005240:	4a7d      	ldr	r2, [pc, #500]	@ (8005438 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 8005242:	5cd3      	ldrb	r3, [r2, r3]
 8005244:	61bb      	str	r3, [r7, #24]
 8005246:	68bb      	ldr	r3, [r7, #8]
 8005248:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800524c:	2b00      	cmp	r3, #0
 800524e:	d03b      	beq.n	80052c8 <HAL_RCCEx_GetPeriphCLKFreq+0x11c>
 8005250:	4b78      	ldr	r3, [pc, #480]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8005252:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005254:	f003 030f 	and.w	r3, r3, #15
 8005258:	4a78      	ldr	r2, [pc, #480]	@ (800543c <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 800525a:	5cd3      	ldrb	r3, [r2, r3]
 800525c:	61fb      	str	r3, [r7, #28]
 800525e:	4b75      	ldr	r3, [pc, #468]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8005260:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005262:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005266:	2b00      	cmp	r3, #0
 8005268:	d01c      	beq.n	80052a4 <HAL_RCCEx_GetPeriphCLKFreq+0xf8>
 800526a:	4b72      	ldr	r3, [pc, #456]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800526c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800526e:	091b      	lsrs	r3, r3, #4
 8005270:	f003 030f 	and.w	r3, r3, #15
 8005274:	3301      	adds	r3, #1
 8005276:	60fb      	str	r3, [r7, #12]
 8005278:	4b6e      	ldr	r3, [pc, #440]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800527a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800527c:	0a1b      	lsrs	r3, r3, #8
 800527e:	f003 030f 	and.w	r3, r3, #15
 8005282:	3302      	adds	r3, #2
 8005284:	617b      	str	r3, [r7, #20]
 8005286:	4a6e      	ldr	r2, [pc, #440]	@ (8005440 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8005288:	68fb      	ldr	r3, [r7, #12]
 800528a:	fbb2 f3f3 	udiv	r3, r2, r3
 800528e:	697a      	ldr	r2, [r7, #20]
 8005290:	fb03 f202 	mul.w	r2, r3, r2
 8005294:	69fb      	ldr	r3, [r7, #28]
 8005296:	fbb2 f2f3 	udiv	r2, r2, r3
 800529a:	69bb      	ldr	r3, [r7, #24]
 800529c:	fb02 f303 	mul.w	r3, r2, r3
 80052a0:	627b      	str	r3, [r7, #36]	@ 0x24
 80052a2:	e007      	b.n	80052b4 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 80052a4:	4a66      	ldr	r2, [pc, #408]	@ (8005440 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80052a6:	69fb      	ldr	r3, [r7, #28]
 80052a8:	fbb2 f2f3 	udiv	r2, r2, r3
 80052ac:	69bb      	ldr	r3, [r7, #24]
 80052ae:	fb02 f303 	mul.w	r3, r2, r3
 80052b2:	627b      	str	r3, [r7, #36]	@ 0x24
 80052b4:	4b60      	ldr	r3, [pc, #384]	@ (8005438 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 80052b6:	7b5b      	ldrb	r3, [r3, #13]
 80052b8:	461a      	mov	r2, r3
 80052ba:	69bb      	ldr	r3, [r7, #24]
 80052bc:	4293      	cmp	r3, r2
 80052be:	d108      	bne.n	80052d2 <HAL_RCCEx_GetPeriphCLKFreq+0x126>
 80052c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80052c2:	085b      	lsrs	r3, r3, #1
 80052c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80052c6:	e004      	b.n	80052d2 <HAL_RCCEx_GetPeriphCLKFreq+0x126>
 80052c8:	69bb      	ldr	r3, [r7, #24]
 80052ca:	4a5e      	ldr	r2, [pc, #376]	@ (8005444 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 80052cc:	fb02 f303 	mul.w	r3, r2, r3
 80052d0:	627b      	str	r3, [r7, #36]	@ 0x24
 80052d2:	4b58      	ldr	r3, [pc, #352]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80052d4:	685b      	ldr	r3, [r3, #4]
 80052d6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80052da:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80052de:	d102      	bne.n	80052e6 <HAL_RCCEx_GetPeriphCLKFreq+0x13a>
 80052e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80052e2:	623b      	str	r3, [r7, #32]
 80052e4:	e09a      	b.n	800541c <HAL_RCCEx_GetPeriphCLKFreq+0x270>
 80052e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80052e8:	005b      	lsls	r3, r3, #1
 80052ea:	4a57      	ldr	r2, [pc, #348]	@ (8005448 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>)
 80052ec:	fba2 2303 	umull	r2, r3, r2, r3
 80052f0:	085b      	lsrs	r3, r3, #1
 80052f2:	623b      	str	r3, [r7, #32]
 80052f4:	e092      	b.n	800541c <HAL_RCCEx_GetPeriphCLKFreq+0x270>
 80052f6:	4b4f      	ldr	r3, [pc, #316]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80052f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80052fa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80052fe:	2b00      	cmp	r3, #0
 8005300:	d103      	bne.n	800530a <HAL_RCCEx_GetPeriphCLKFreq+0x15e>
 8005302:	f7ff fd15 	bl	8004d30 <HAL_RCC_GetSysClockFreq>
 8005306:	6238      	str	r0, [r7, #32]
 8005308:	e08a      	b.n	8005420 <HAL_RCCEx_GetPeriphCLKFreq+0x274>
 800530a:	4b4a      	ldr	r3, [pc, #296]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800530c:	681b      	ldr	r3, [r3, #0]
 800530e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005312:	2b00      	cmp	r3, #0
 8005314:	f000 8084 	beq.w	8005420 <HAL_RCCEx_GetPeriphCLKFreq+0x274>
 8005318:	4b46      	ldr	r3, [pc, #280]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800531a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800531c:	091b      	lsrs	r3, r3, #4
 800531e:	f003 030f 	and.w	r3, r3, #15
 8005322:	3301      	adds	r3, #1
 8005324:	60fb      	str	r3, [r7, #12]
 8005326:	4b43      	ldr	r3, [pc, #268]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8005328:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800532a:	0b1b      	lsrs	r3, r3, #12
 800532c:	f003 030f 	and.w	r3, r3, #15
 8005330:	3302      	adds	r3, #2
 8005332:	613b      	str	r3, [r7, #16]
 8005334:	4a42      	ldr	r2, [pc, #264]	@ (8005440 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8005336:	68fb      	ldr	r3, [r7, #12]
 8005338:	fbb2 f3f3 	udiv	r3, r2, r3
 800533c:	693a      	ldr	r2, [r7, #16]
 800533e:	fb02 f303 	mul.w	r3, r2, r3
 8005342:	005b      	lsls	r3, r3, #1
 8005344:	623b      	str	r3, [r7, #32]
 8005346:	e06b      	b.n	8005420 <HAL_RCCEx_GetPeriphCLKFreq+0x274>
 8005348:	4b3a      	ldr	r3, [pc, #232]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800534a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800534c:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8005350:	2b00      	cmp	r3, #0
 8005352:	d103      	bne.n	800535c <HAL_RCCEx_GetPeriphCLKFreq+0x1b0>
 8005354:	f7ff fcec 	bl	8004d30 <HAL_RCC_GetSysClockFreq>
 8005358:	6238      	str	r0, [r7, #32]
 800535a:	e063      	b.n	8005424 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
 800535c:	4b35      	ldr	r3, [pc, #212]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800535e:	681b      	ldr	r3, [r3, #0]
 8005360:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005364:	2b00      	cmp	r3, #0
 8005366:	d05d      	beq.n	8005424 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
 8005368:	4b32      	ldr	r3, [pc, #200]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800536a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800536c:	091b      	lsrs	r3, r3, #4
 800536e:	f003 030f 	and.w	r3, r3, #15
 8005372:	3301      	adds	r3, #1
 8005374:	60fb      	str	r3, [r7, #12]
 8005376:	4b2f      	ldr	r3, [pc, #188]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8005378:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800537a:	0b1b      	lsrs	r3, r3, #12
 800537c:	f003 030f 	and.w	r3, r3, #15
 8005380:	3302      	adds	r3, #2
 8005382:	613b      	str	r3, [r7, #16]
 8005384:	4a2e      	ldr	r2, [pc, #184]	@ (8005440 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8005386:	68fb      	ldr	r3, [r7, #12]
 8005388:	fbb2 f3f3 	udiv	r3, r2, r3
 800538c:	693a      	ldr	r2, [r7, #16]
 800538e:	fb02 f303 	mul.w	r3, r2, r3
 8005392:	005b      	lsls	r3, r3, #1
 8005394:	623b      	str	r3, [r7, #32]
 8005396:	e045      	b.n	8005424 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
 8005398:	4b26      	ldr	r3, [pc, #152]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800539a:	6a1b      	ldr	r3, [r3, #32]
 800539c:	60bb      	str	r3, [r7, #8]
 800539e:	68bb      	ldr	r3, [r7, #8]
 80053a0:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80053a4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80053a8:	d108      	bne.n	80053bc <HAL_RCCEx_GetPeriphCLKFreq+0x210>
 80053aa:	68bb      	ldr	r3, [r7, #8]
 80053ac:	f003 0302 	and.w	r3, r3, #2
 80053b0:	2b00      	cmp	r3, #0
 80053b2:	d003      	beq.n	80053bc <HAL_RCCEx_GetPeriphCLKFreq+0x210>
 80053b4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80053b8:	623b      	str	r3, [r7, #32]
 80053ba:	e01e      	b.n	80053fa <HAL_RCCEx_GetPeriphCLKFreq+0x24e>
 80053bc:	68bb      	ldr	r3, [r7, #8]
 80053be:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80053c2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80053c6:	d109      	bne.n	80053dc <HAL_RCCEx_GetPeriphCLKFreq+0x230>
 80053c8:	4b1a      	ldr	r3, [pc, #104]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80053ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80053cc:	f003 0302 	and.w	r3, r3, #2
 80053d0:	2b00      	cmp	r3, #0
 80053d2:	d003      	beq.n	80053dc <HAL_RCCEx_GetPeriphCLKFreq+0x230>
 80053d4:	f649 4340 	movw	r3, #40000	@ 0x9c40
 80053d8:	623b      	str	r3, [r7, #32]
 80053da:	e00e      	b.n	80053fa <HAL_RCCEx_GetPeriphCLKFreq+0x24e>
 80053dc:	68bb      	ldr	r3, [r7, #8]
 80053de:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80053e2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80053e6:	d11f      	bne.n	8005428 <HAL_RCCEx_GetPeriphCLKFreq+0x27c>
 80053e8:	4b12      	ldr	r3, [pc, #72]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80053ea:	681b      	ldr	r3, [r3, #0]
 80053ec:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80053f0:	2b00      	cmp	r3, #0
 80053f2:	d019      	beq.n	8005428 <HAL_RCCEx_GetPeriphCLKFreq+0x27c>
 80053f4:	4b15      	ldr	r3, [pc, #84]	@ (800544c <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>)
 80053f6:	623b      	str	r3, [r7, #32]
 80053f8:	e016      	b.n	8005428 <HAL_RCCEx_GetPeriphCLKFreq+0x27c>
 80053fa:	e015      	b.n	8005428 <HAL_RCCEx_GetPeriphCLKFreq+0x27c>
 80053fc:	f7ff fd72 	bl	8004ee4 <HAL_RCC_GetPCLK2Freq>
 8005400:	4602      	mov	r2, r0
 8005402:	4b0c      	ldr	r3, [pc, #48]	@ (8005434 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8005404:	685b      	ldr	r3, [r3, #4]
 8005406:	0b9b      	lsrs	r3, r3, #14
 8005408:	f003 0303 	and.w	r3, r3, #3
 800540c:	3301      	adds	r3, #1
 800540e:	005b      	lsls	r3, r3, #1
 8005410:	fbb2 f3f3 	udiv	r3, r2, r3
 8005414:	623b      	str	r3, [r7, #32]
 8005416:	e008      	b.n	800542a <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 8005418:	bf00      	nop
 800541a:	e006      	b.n	800542a <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 800541c:	bf00      	nop
 800541e:	e004      	b.n	800542a <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 8005420:	bf00      	nop
 8005422:	e002      	b.n	800542a <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 8005424:	bf00      	nop
 8005426:	e000      	b.n	800542a <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 8005428:	bf00      	nop
 800542a:	6a3b      	ldr	r3, [r7, #32]
 800542c:	4618      	mov	r0, r3
 800542e:	3728      	adds	r7, #40	@ 0x28
 8005430:	46bd      	mov	sp, r7
 8005432:	bd80      	pop	{r7, pc}
 8005434:	40021000 	.word	0x40021000
 8005438:	08006c70 	.word	0x08006c70
 800543c:	08006c80 	.word	0x08006c80
 8005440:	017d7840 	.word	0x017d7840
 8005444:	003d0900 	.word	0x003d0900
 8005448:	aaaaaaab 	.word	0xaaaaaaab
 800544c:	0002faf0 	.word	0x0002faf0

08005450 <HAL_SPI_Init>:
 8005450:	b580      	push	{r7, lr}
 8005452:	b082      	sub	sp, #8
 8005454:	af00      	add	r7, sp, #0
 8005456:	6078      	str	r0, [r7, #4]
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	2b00      	cmp	r3, #0
 800545c:	d101      	bne.n	8005462 <HAL_SPI_Init+0x12>
 800545e:	2301      	movs	r3, #1
 8005460:	e076      	b.n	8005550 <HAL_SPI_Init+0x100>
 8005462:	687b      	ldr	r3, [r7, #4]
 8005464:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005466:	2b00      	cmp	r3, #0
 8005468:	d108      	bne.n	800547c <HAL_SPI_Init+0x2c>
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	685b      	ldr	r3, [r3, #4]
 800546e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005472:	d009      	beq.n	8005488 <HAL_SPI_Init+0x38>
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	2200      	movs	r2, #0
 8005478:	61da      	str	r2, [r3, #28]
 800547a:	e005      	b.n	8005488 <HAL_SPI_Init+0x38>
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	2200      	movs	r2, #0
 8005480:	611a      	str	r2, [r3, #16]
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	2200      	movs	r2, #0
 8005486:	615a      	str	r2, [r3, #20]
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	2200      	movs	r2, #0
 800548c:	629a      	str	r2, [r3, #40]	@ 0x28
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005494:	b2db      	uxtb	r3, r3
 8005496:	2b00      	cmp	r3, #0
 8005498:	d106      	bne.n	80054a8 <HAL_SPI_Init+0x58>
 800549a:	687b      	ldr	r3, [r7, #4]
 800549c:	2200      	movs	r2, #0
 800549e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80054a2:	6878      	ldr	r0, [r7, #4]
 80054a4:	f7fd fcd8 	bl	8002e58 <HAL_SPI_MspInit>
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	2202      	movs	r2, #2
 80054ac:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80054b0:	687b      	ldr	r3, [r7, #4]
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	681a      	ldr	r2, [r3, #0]
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	681b      	ldr	r3, [r3, #0]
 80054ba:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80054be:	601a      	str	r2, [r3, #0]
 80054c0:	687b      	ldr	r3, [r7, #4]
 80054c2:	685b      	ldr	r3, [r3, #4]
 80054c4:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80054c8:	687b      	ldr	r3, [r7, #4]
 80054ca:	689b      	ldr	r3, [r3, #8]
 80054cc:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80054d0:	431a      	orrs	r2, r3
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	68db      	ldr	r3, [r3, #12]
 80054d6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80054da:	431a      	orrs	r2, r3
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	691b      	ldr	r3, [r3, #16]
 80054e0:	f003 0302 	and.w	r3, r3, #2
 80054e4:	431a      	orrs	r2, r3
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	695b      	ldr	r3, [r3, #20]
 80054ea:	f003 0301 	and.w	r3, r3, #1
 80054ee:	431a      	orrs	r2, r3
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	699b      	ldr	r3, [r3, #24]
 80054f4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80054f8:	431a      	orrs	r2, r3
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	69db      	ldr	r3, [r3, #28]
 80054fe:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8005502:	431a      	orrs	r2, r3
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	6a1b      	ldr	r3, [r3, #32]
 8005508:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800550c:	ea42 0103 	orr.w	r1, r2, r3
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005514:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	430a      	orrs	r2, r1
 800551e:	601a      	str	r2, [r3, #0]
 8005520:	687b      	ldr	r3, [r7, #4]
 8005522:	699b      	ldr	r3, [r3, #24]
 8005524:	0c1a      	lsrs	r2, r3, #16
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	f002 0204 	and.w	r2, r2, #4
 800552e:	605a      	str	r2, [r3, #4]
 8005530:	687b      	ldr	r3, [r7, #4]
 8005532:	681b      	ldr	r3, [r3, #0]
 8005534:	69da      	ldr	r2, [r3, #28]
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800553e:	61da      	str	r2, [r3, #28]
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	2200      	movs	r2, #0
 8005544:	655a      	str	r2, [r3, #84]	@ 0x54
 8005546:	687b      	ldr	r3, [r7, #4]
 8005548:	2201      	movs	r2, #1
 800554a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800554e:	2300      	movs	r3, #0
 8005550:	4618      	mov	r0, r3
 8005552:	3708      	adds	r7, #8
 8005554:	46bd      	mov	sp, r7
 8005556:	bd80      	pop	{r7, pc}

08005558 <HAL_SPI_Transmit>:
 8005558:	b580      	push	{r7, lr}
 800555a:	b088      	sub	sp, #32
 800555c:	af00      	add	r7, sp, #0
 800555e:	60f8      	str	r0, [r7, #12]
 8005560:	60b9      	str	r1, [r7, #8]
 8005562:	603b      	str	r3, [r7, #0]
 8005564:	4613      	mov	r3, r2
 8005566:	80fb      	strh	r3, [r7, #6]
 8005568:	f7fd fe90 	bl	800328c <HAL_GetTick>
 800556c:	61f8      	str	r0, [r7, #28]
 800556e:	88fb      	ldrh	r3, [r7, #6]
 8005570:	837b      	strh	r3, [r7, #26]
 8005572:	68fb      	ldr	r3, [r7, #12]
 8005574:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005578:	b2db      	uxtb	r3, r3
 800557a:	2b01      	cmp	r3, #1
 800557c:	d001      	beq.n	8005582 <HAL_SPI_Transmit+0x2a>
 800557e:	2302      	movs	r3, #2
 8005580:	e12a      	b.n	80057d8 <HAL_SPI_Transmit+0x280>
 8005582:	68bb      	ldr	r3, [r7, #8]
 8005584:	2b00      	cmp	r3, #0
 8005586:	d002      	beq.n	800558e <HAL_SPI_Transmit+0x36>
 8005588:	88fb      	ldrh	r3, [r7, #6]
 800558a:	2b00      	cmp	r3, #0
 800558c:	d101      	bne.n	8005592 <HAL_SPI_Transmit+0x3a>
 800558e:	2301      	movs	r3, #1
 8005590:	e122      	b.n	80057d8 <HAL_SPI_Transmit+0x280>
 8005592:	68fb      	ldr	r3, [r7, #12]
 8005594:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005598:	2b01      	cmp	r3, #1
 800559a:	d101      	bne.n	80055a0 <HAL_SPI_Transmit+0x48>
 800559c:	2302      	movs	r3, #2
 800559e:	e11b      	b.n	80057d8 <HAL_SPI_Transmit+0x280>
 80055a0:	68fb      	ldr	r3, [r7, #12]
 80055a2:	2201      	movs	r2, #1
 80055a4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80055a8:	68fb      	ldr	r3, [r7, #12]
 80055aa:	2203      	movs	r2, #3
 80055ac:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	2200      	movs	r2, #0
 80055b4:	655a      	str	r2, [r3, #84]	@ 0x54
 80055b6:	68fb      	ldr	r3, [r7, #12]
 80055b8:	68ba      	ldr	r2, [r7, #8]
 80055ba:	631a      	str	r2, [r3, #48]	@ 0x30
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	88fa      	ldrh	r2, [r7, #6]
 80055c0:	869a      	strh	r2, [r3, #52]	@ 0x34
 80055c2:	68fb      	ldr	r3, [r7, #12]
 80055c4:	88fa      	ldrh	r2, [r7, #6]
 80055c6:	86da      	strh	r2, [r3, #54]	@ 0x36
 80055c8:	68fb      	ldr	r3, [r7, #12]
 80055ca:	2200      	movs	r2, #0
 80055cc:	639a      	str	r2, [r3, #56]	@ 0x38
 80055ce:	68fb      	ldr	r3, [r7, #12]
 80055d0:	2200      	movs	r2, #0
 80055d2:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80055d4:	68fb      	ldr	r3, [r7, #12]
 80055d6:	2200      	movs	r2, #0
 80055d8:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80055da:	68fb      	ldr	r3, [r7, #12]
 80055dc:	2200      	movs	r2, #0
 80055de:	645a      	str	r2, [r3, #68]	@ 0x44
 80055e0:	68fb      	ldr	r3, [r7, #12]
 80055e2:	2200      	movs	r2, #0
 80055e4:	641a      	str	r2, [r3, #64]	@ 0x40
 80055e6:	68fb      	ldr	r3, [r7, #12]
 80055e8:	689b      	ldr	r3, [r3, #8]
 80055ea:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80055ee:	d10f      	bne.n	8005610 <HAL_SPI_Transmit+0xb8>
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	681a      	ldr	r2, [r3, #0]
 80055f6:	68fb      	ldr	r3, [r7, #12]
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80055fe:	601a      	str	r2, [r3, #0]
 8005600:	68fb      	ldr	r3, [r7, #12]
 8005602:	681b      	ldr	r3, [r3, #0]
 8005604:	681a      	ldr	r2, [r3, #0]
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800560e:	601a      	str	r2, [r3, #0]
 8005610:	68fb      	ldr	r3, [r7, #12]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800561a:	2b40      	cmp	r3, #64	@ 0x40
 800561c:	d007      	beq.n	800562e <HAL_SPI_Transmit+0xd6>
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	681a      	ldr	r2, [r3, #0]
 8005624:	68fb      	ldr	r3, [r7, #12]
 8005626:	681b      	ldr	r3, [r3, #0]
 8005628:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800562c:	601a      	str	r2, [r3, #0]
 800562e:	68fb      	ldr	r3, [r7, #12]
 8005630:	68db      	ldr	r3, [r3, #12]
 8005632:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005636:	d152      	bne.n	80056de <HAL_SPI_Transmit+0x186>
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	685b      	ldr	r3, [r3, #4]
 800563c:	2b00      	cmp	r3, #0
 800563e:	d002      	beq.n	8005646 <HAL_SPI_Transmit+0xee>
 8005640:	8b7b      	ldrh	r3, [r7, #26]
 8005642:	2b01      	cmp	r3, #1
 8005644:	d145      	bne.n	80056d2 <HAL_SPI_Transmit+0x17a>
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800564a:	881a      	ldrh	r2, [r3, #0]
 800564c:	68fb      	ldr	r3, [r7, #12]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	60da      	str	r2, [r3, #12]
 8005652:	68fb      	ldr	r3, [r7, #12]
 8005654:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005656:	1c9a      	adds	r2, r3, #2
 8005658:	68fb      	ldr	r3, [r7, #12]
 800565a:	631a      	str	r2, [r3, #48]	@ 0x30
 800565c:	68fb      	ldr	r3, [r7, #12]
 800565e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005660:	b29b      	uxth	r3, r3
 8005662:	3b01      	subs	r3, #1
 8005664:	b29a      	uxth	r2, r3
 8005666:	68fb      	ldr	r3, [r7, #12]
 8005668:	86da      	strh	r2, [r3, #54]	@ 0x36
 800566a:	e032      	b.n	80056d2 <HAL_SPI_Transmit+0x17a>
 800566c:	68fb      	ldr	r3, [r7, #12]
 800566e:	681b      	ldr	r3, [r3, #0]
 8005670:	689b      	ldr	r3, [r3, #8]
 8005672:	f003 0302 	and.w	r3, r3, #2
 8005676:	2b02      	cmp	r3, #2
 8005678:	d112      	bne.n	80056a0 <HAL_SPI_Transmit+0x148>
 800567a:	68fb      	ldr	r3, [r7, #12]
 800567c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800567e:	881a      	ldrh	r2, [r3, #0]
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	60da      	str	r2, [r3, #12]
 8005686:	68fb      	ldr	r3, [r7, #12]
 8005688:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800568a:	1c9a      	adds	r2, r3, #2
 800568c:	68fb      	ldr	r3, [r7, #12]
 800568e:	631a      	str	r2, [r3, #48]	@ 0x30
 8005690:	68fb      	ldr	r3, [r7, #12]
 8005692:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005694:	b29b      	uxth	r3, r3
 8005696:	3b01      	subs	r3, #1
 8005698:	b29a      	uxth	r2, r3
 800569a:	68fb      	ldr	r3, [r7, #12]
 800569c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800569e:	e018      	b.n	80056d2 <HAL_SPI_Transmit+0x17a>
 80056a0:	f7fd fdf4 	bl	800328c <HAL_GetTick>
 80056a4:	4602      	mov	r2, r0
 80056a6:	69fb      	ldr	r3, [r7, #28]
 80056a8:	1ad3      	subs	r3, r2, r3
 80056aa:	683a      	ldr	r2, [r7, #0]
 80056ac:	429a      	cmp	r2, r3
 80056ae:	d803      	bhi.n	80056b8 <HAL_SPI_Transmit+0x160>
 80056b0:	683b      	ldr	r3, [r7, #0]
 80056b2:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80056b6:	d102      	bne.n	80056be <HAL_SPI_Transmit+0x166>
 80056b8:	683b      	ldr	r3, [r7, #0]
 80056ba:	2b00      	cmp	r3, #0
 80056bc:	d109      	bne.n	80056d2 <HAL_SPI_Transmit+0x17a>
 80056be:	68fb      	ldr	r3, [r7, #12]
 80056c0:	2201      	movs	r2, #1
 80056c2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80056c6:	68fb      	ldr	r3, [r7, #12]
 80056c8:	2200      	movs	r2, #0
 80056ca:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80056ce:	2303      	movs	r3, #3
 80056d0:	e082      	b.n	80057d8 <HAL_SPI_Transmit+0x280>
 80056d2:	68fb      	ldr	r3, [r7, #12]
 80056d4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80056d6:	b29b      	uxth	r3, r3
 80056d8:	2b00      	cmp	r3, #0
 80056da:	d1c7      	bne.n	800566c <HAL_SPI_Transmit+0x114>
 80056dc:	e053      	b.n	8005786 <HAL_SPI_Transmit+0x22e>
 80056de:	68fb      	ldr	r3, [r7, #12]
 80056e0:	685b      	ldr	r3, [r3, #4]
 80056e2:	2b00      	cmp	r3, #0
 80056e4:	d002      	beq.n	80056ec <HAL_SPI_Transmit+0x194>
 80056e6:	8b7b      	ldrh	r3, [r7, #26]
 80056e8:	2b01      	cmp	r3, #1
 80056ea:	d147      	bne.n	800577c <HAL_SPI_Transmit+0x224>
 80056ec:	68fb      	ldr	r3, [r7, #12]
 80056ee:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80056f0:	68fb      	ldr	r3, [r7, #12]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	330c      	adds	r3, #12
 80056f6:	7812      	ldrb	r2, [r2, #0]
 80056f8:	701a      	strb	r2, [r3, #0]
 80056fa:	68fb      	ldr	r3, [r7, #12]
 80056fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80056fe:	1c5a      	adds	r2, r3, #1
 8005700:	68fb      	ldr	r3, [r7, #12]
 8005702:	631a      	str	r2, [r3, #48]	@ 0x30
 8005704:	68fb      	ldr	r3, [r7, #12]
 8005706:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005708:	b29b      	uxth	r3, r3
 800570a:	3b01      	subs	r3, #1
 800570c:	b29a      	uxth	r2, r3
 800570e:	68fb      	ldr	r3, [r7, #12]
 8005710:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005712:	e033      	b.n	800577c <HAL_SPI_Transmit+0x224>
 8005714:	68fb      	ldr	r3, [r7, #12]
 8005716:	681b      	ldr	r3, [r3, #0]
 8005718:	689b      	ldr	r3, [r3, #8]
 800571a:	f003 0302 	and.w	r3, r3, #2
 800571e:	2b02      	cmp	r3, #2
 8005720:	d113      	bne.n	800574a <HAL_SPI_Transmit+0x1f2>
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	330c      	adds	r3, #12
 800572c:	7812      	ldrb	r2, [r2, #0]
 800572e:	701a      	strb	r2, [r3, #0]
 8005730:	68fb      	ldr	r3, [r7, #12]
 8005732:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005734:	1c5a      	adds	r2, r3, #1
 8005736:	68fb      	ldr	r3, [r7, #12]
 8005738:	631a      	str	r2, [r3, #48]	@ 0x30
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800573e:	b29b      	uxth	r3, r3
 8005740:	3b01      	subs	r3, #1
 8005742:	b29a      	uxth	r2, r3
 8005744:	68fb      	ldr	r3, [r7, #12]
 8005746:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005748:	e018      	b.n	800577c <HAL_SPI_Transmit+0x224>
 800574a:	f7fd fd9f 	bl	800328c <HAL_GetTick>
 800574e:	4602      	mov	r2, r0
 8005750:	69fb      	ldr	r3, [r7, #28]
 8005752:	1ad3      	subs	r3, r2, r3
 8005754:	683a      	ldr	r2, [r7, #0]
 8005756:	429a      	cmp	r2, r3
 8005758:	d803      	bhi.n	8005762 <HAL_SPI_Transmit+0x20a>
 800575a:	683b      	ldr	r3, [r7, #0]
 800575c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8005760:	d102      	bne.n	8005768 <HAL_SPI_Transmit+0x210>
 8005762:	683b      	ldr	r3, [r7, #0]
 8005764:	2b00      	cmp	r3, #0
 8005766:	d109      	bne.n	800577c <HAL_SPI_Transmit+0x224>
 8005768:	68fb      	ldr	r3, [r7, #12]
 800576a:	2201      	movs	r2, #1
 800576c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	2200      	movs	r2, #0
 8005774:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005778:	2303      	movs	r3, #3
 800577a:	e02d      	b.n	80057d8 <HAL_SPI_Transmit+0x280>
 800577c:	68fb      	ldr	r3, [r7, #12]
 800577e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005780:	b29b      	uxth	r3, r3
 8005782:	2b00      	cmp	r3, #0
 8005784:	d1c6      	bne.n	8005714 <HAL_SPI_Transmit+0x1bc>
 8005786:	69fa      	ldr	r2, [r7, #28]
 8005788:	6839      	ldr	r1, [r7, #0]
 800578a:	68f8      	ldr	r0, [r7, #12]
 800578c:	f000 fbc4 	bl	8005f18 <SPI_EndRxTxTransaction>
 8005790:	4603      	mov	r3, r0
 8005792:	2b00      	cmp	r3, #0
 8005794:	d002      	beq.n	800579c <HAL_SPI_Transmit+0x244>
 8005796:	68fb      	ldr	r3, [r7, #12]
 8005798:	2220      	movs	r2, #32
 800579a:	655a      	str	r2, [r3, #84]	@ 0x54
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	689b      	ldr	r3, [r3, #8]
 80057a0:	2b00      	cmp	r3, #0
 80057a2:	d10a      	bne.n	80057ba <HAL_SPI_Transmit+0x262>
 80057a4:	2300      	movs	r3, #0
 80057a6:	617b      	str	r3, [r7, #20]
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	681b      	ldr	r3, [r3, #0]
 80057ac:	68db      	ldr	r3, [r3, #12]
 80057ae:	617b      	str	r3, [r7, #20]
 80057b0:	68fb      	ldr	r3, [r7, #12]
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	689b      	ldr	r3, [r3, #8]
 80057b6:	617b      	str	r3, [r7, #20]
 80057b8:	697b      	ldr	r3, [r7, #20]
 80057ba:	68fb      	ldr	r3, [r7, #12]
 80057bc:	2201      	movs	r2, #1
 80057be:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80057c2:	68fb      	ldr	r3, [r7, #12]
 80057c4:	2200      	movs	r2, #0
 80057c6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80057ca:	68fb      	ldr	r3, [r7, #12]
 80057cc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80057ce:	2b00      	cmp	r3, #0
 80057d0:	d001      	beq.n	80057d6 <HAL_SPI_Transmit+0x27e>
 80057d2:	2301      	movs	r3, #1
 80057d4:	e000      	b.n	80057d8 <HAL_SPI_Transmit+0x280>
 80057d6:	2300      	movs	r3, #0
 80057d8:	4618      	mov	r0, r3
 80057da:	3720      	adds	r7, #32
 80057dc:	46bd      	mov	sp, r7
 80057de:	bd80      	pop	{r7, pc}

080057e0 <HAL_SPI_Receive>:
 80057e0:	b580      	push	{r7, lr}
 80057e2:	b088      	sub	sp, #32
 80057e4:	af02      	add	r7, sp, #8
 80057e6:	60f8      	str	r0, [r7, #12]
 80057e8:	60b9      	str	r1, [r7, #8]
 80057ea:	603b      	str	r3, [r7, #0]
 80057ec:	4613      	mov	r3, r2
 80057ee:	80fb      	strh	r3, [r7, #6]
 80057f0:	68fb      	ldr	r3, [r7, #12]
 80057f2:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80057f6:	b2db      	uxtb	r3, r3
 80057f8:	2b01      	cmp	r3, #1
 80057fa:	d001      	beq.n	8005800 <HAL_SPI_Receive+0x20>
 80057fc:	2302      	movs	r3, #2
 80057fe:	e104      	b.n	8005a0a <HAL_SPI_Receive+0x22a>
 8005800:	68fb      	ldr	r3, [r7, #12]
 8005802:	685b      	ldr	r3, [r3, #4]
 8005804:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005808:	d112      	bne.n	8005830 <HAL_SPI_Receive+0x50>
 800580a:	68fb      	ldr	r3, [r7, #12]
 800580c:	689b      	ldr	r3, [r3, #8]
 800580e:	2b00      	cmp	r3, #0
 8005810:	d10e      	bne.n	8005830 <HAL_SPI_Receive+0x50>
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	2204      	movs	r2, #4
 8005816:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800581a:	88fa      	ldrh	r2, [r7, #6]
 800581c:	683b      	ldr	r3, [r7, #0]
 800581e:	9300      	str	r3, [sp, #0]
 8005820:	4613      	mov	r3, r2
 8005822:	68ba      	ldr	r2, [r7, #8]
 8005824:	68b9      	ldr	r1, [r7, #8]
 8005826:	68f8      	ldr	r0, [r7, #12]
 8005828:	f000 f8f3 	bl	8005a12 <HAL_SPI_TransmitReceive>
 800582c:	4603      	mov	r3, r0
 800582e:	e0ec      	b.n	8005a0a <HAL_SPI_Receive+0x22a>
 8005830:	f7fd fd2c 	bl	800328c <HAL_GetTick>
 8005834:	6178      	str	r0, [r7, #20]
 8005836:	68bb      	ldr	r3, [r7, #8]
 8005838:	2b00      	cmp	r3, #0
 800583a:	d002      	beq.n	8005842 <HAL_SPI_Receive+0x62>
 800583c:	88fb      	ldrh	r3, [r7, #6]
 800583e:	2b00      	cmp	r3, #0
 8005840:	d101      	bne.n	8005846 <HAL_SPI_Receive+0x66>
 8005842:	2301      	movs	r3, #1
 8005844:	e0e1      	b.n	8005a0a <HAL_SPI_Receive+0x22a>
 8005846:	68fb      	ldr	r3, [r7, #12]
 8005848:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800584c:	2b01      	cmp	r3, #1
 800584e:	d101      	bne.n	8005854 <HAL_SPI_Receive+0x74>
 8005850:	2302      	movs	r3, #2
 8005852:	e0da      	b.n	8005a0a <HAL_SPI_Receive+0x22a>
 8005854:	68fb      	ldr	r3, [r7, #12]
 8005856:	2201      	movs	r2, #1
 8005858:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800585c:	68fb      	ldr	r3, [r7, #12]
 800585e:	2204      	movs	r2, #4
 8005860:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005864:	68fb      	ldr	r3, [r7, #12]
 8005866:	2200      	movs	r2, #0
 8005868:	655a      	str	r2, [r3, #84]	@ 0x54
 800586a:	68fb      	ldr	r3, [r7, #12]
 800586c:	68ba      	ldr	r2, [r7, #8]
 800586e:	639a      	str	r2, [r3, #56]	@ 0x38
 8005870:	68fb      	ldr	r3, [r7, #12]
 8005872:	88fa      	ldrh	r2, [r7, #6]
 8005874:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8005876:	68fb      	ldr	r3, [r7, #12]
 8005878:	88fa      	ldrh	r2, [r7, #6]
 800587a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800587c:	68fb      	ldr	r3, [r7, #12]
 800587e:	2200      	movs	r2, #0
 8005880:	631a      	str	r2, [r3, #48]	@ 0x30
 8005882:	68fb      	ldr	r3, [r7, #12]
 8005884:	2200      	movs	r2, #0
 8005886:	869a      	strh	r2, [r3, #52]	@ 0x34
 8005888:	68fb      	ldr	r3, [r7, #12]
 800588a:	2200      	movs	r2, #0
 800588c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800588e:	68fb      	ldr	r3, [r7, #12]
 8005890:	2200      	movs	r2, #0
 8005892:	641a      	str	r2, [r3, #64]	@ 0x40
 8005894:	68fb      	ldr	r3, [r7, #12]
 8005896:	2200      	movs	r2, #0
 8005898:	645a      	str	r2, [r3, #68]	@ 0x44
 800589a:	68fb      	ldr	r3, [r7, #12]
 800589c:	689b      	ldr	r3, [r3, #8]
 800589e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80058a2:	d10f      	bne.n	80058c4 <HAL_SPI_Receive+0xe4>
 80058a4:	68fb      	ldr	r3, [r7, #12]
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	681a      	ldr	r2, [r3, #0]
 80058aa:	68fb      	ldr	r3, [r7, #12]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80058b2:	601a      	str	r2, [r3, #0]
 80058b4:	68fb      	ldr	r3, [r7, #12]
 80058b6:	681b      	ldr	r3, [r3, #0]
 80058b8:	681a      	ldr	r2, [r3, #0]
 80058ba:	68fb      	ldr	r3, [r7, #12]
 80058bc:	681b      	ldr	r3, [r3, #0]
 80058be:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 80058c2:	601a      	str	r2, [r3, #0]
 80058c4:	68fb      	ldr	r3, [r7, #12]
 80058c6:	681b      	ldr	r3, [r3, #0]
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80058ce:	2b40      	cmp	r3, #64	@ 0x40
 80058d0:	d007      	beq.n	80058e2 <HAL_SPI_Receive+0x102>
 80058d2:	68fb      	ldr	r3, [r7, #12]
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	681a      	ldr	r2, [r3, #0]
 80058d8:	68fb      	ldr	r3, [r7, #12]
 80058da:	681b      	ldr	r3, [r3, #0]
 80058dc:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80058e0:	601a      	str	r2, [r3, #0]
 80058e2:	68fb      	ldr	r3, [r7, #12]
 80058e4:	68db      	ldr	r3, [r3, #12]
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	d170      	bne.n	80059cc <HAL_SPI_Receive+0x1ec>
 80058ea:	e035      	b.n	8005958 <HAL_SPI_Receive+0x178>
 80058ec:	68fb      	ldr	r3, [r7, #12]
 80058ee:	681b      	ldr	r3, [r3, #0]
 80058f0:	689b      	ldr	r3, [r3, #8]
 80058f2:	f003 0301 	and.w	r3, r3, #1
 80058f6:	2b01      	cmp	r3, #1
 80058f8:	d115      	bne.n	8005926 <HAL_SPI_Receive+0x146>
 80058fa:	68fb      	ldr	r3, [r7, #12]
 80058fc:	681b      	ldr	r3, [r3, #0]
 80058fe:	f103 020c 	add.w	r2, r3, #12
 8005902:	68fb      	ldr	r3, [r7, #12]
 8005904:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005906:	7812      	ldrb	r2, [r2, #0]
 8005908:	b2d2      	uxtb	r2, r2
 800590a:	701a      	strb	r2, [r3, #0]
 800590c:	68fb      	ldr	r3, [r7, #12]
 800590e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005910:	1c5a      	adds	r2, r3, #1
 8005912:	68fb      	ldr	r3, [r7, #12]
 8005914:	639a      	str	r2, [r3, #56]	@ 0x38
 8005916:	68fb      	ldr	r3, [r7, #12]
 8005918:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800591a:	b29b      	uxth	r3, r3
 800591c:	3b01      	subs	r3, #1
 800591e:	b29a      	uxth	r2, r3
 8005920:	68fb      	ldr	r3, [r7, #12]
 8005922:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005924:	e018      	b.n	8005958 <HAL_SPI_Receive+0x178>
 8005926:	f7fd fcb1 	bl	800328c <HAL_GetTick>
 800592a:	4602      	mov	r2, r0
 800592c:	697b      	ldr	r3, [r7, #20]
 800592e:	1ad3      	subs	r3, r2, r3
 8005930:	683a      	ldr	r2, [r7, #0]
 8005932:	429a      	cmp	r2, r3
 8005934:	d803      	bhi.n	800593e <HAL_SPI_Receive+0x15e>
 8005936:	683b      	ldr	r3, [r7, #0]
 8005938:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800593c:	d102      	bne.n	8005944 <HAL_SPI_Receive+0x164>
 800593e:	683b      	ldr	r3, [r7, #0]
 8005940:	2b00      	cmp	r3, #0
 8005942:	d109      	bne.n	8005958 <HAL_SPI_Receive+0x178>
 8005944:	68fb      	ldr	r3, [r7, #12]
 8005946:	2201      	movs	r2, #1
 8005948:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800594c:	68fb      	ldr	r3, [r7, #12]
 800594e:	2200      	movs	r2, #0
 8005950:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005954:	2303      	movs	r3, #3
 8005956:	e058      	b.n	8005a0a <HAL_SPI_Receive+0x22a>
 8005958:	68fb      	ldr	r3, [r7, #12]
 800595a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800595c:	b29b      	uxth	r3, r3
 800595e:	2b00      	cmp	r3, #0
 8005960:	d1c4      	bne.n	80058ec <HAL_SPI_Receive+0x10c>
 8005962:	e038      	b.n	80059d6 <HAL_SPI_Receive+0x1f6>
 8005964:	68fb      	ldr	r3, [r7, #12]
 8005966:	681b      	ldr	r3, [r3, #0]
 8005968:	689b      	ldr	r3, [r3, #8]
 800596a:	f003 0301 	and.w	r3, r3, #1
 800596e:	2b01      	cmp	r3, #1
 8005970:	d113      	bne.n	800599a <HAL_SPI_Receive+0x1ba>
 8005972:	68fb      	ldr	r3, [r7, #12]
 8005974:	681b      	ldr	r3, [r3, #0]
 8005976:	68da      	ldr	r2, [r3, #12]
 8005978:	68fb      	ldr	r3, [r7, #12]
 800597a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800597c:	b292      	uxth	r2, r2
 800597e:	801a      	strh	r2, [r3, #0]
 8005980:	68fb      	ldr	r3, [r7, #12]
 8005982:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005984:	1c9a      	adds	r2, r3, #2
 8005986:	68fb      	ldr	r3, [r7, #12]
 8005988:	639a      	str	r2, [r3, #56]	@ 0x38
 800598a:	68fb      	ldr	r3, [r7, #12]
 800598c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800598e:	b29b      	uxth	r3, r3
 8005990:	3b01      	subs	r3, #1
 8005992:	b29a      	uxth	r2, r3
 8005994:	68fb      	ldr	r3, [r7, #12]
 8005996:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005998:	e018      	b.n	80059cc <HAL_SPI_Receive+0x1ec>
 800599a:	f7fd fc77 	bl	800328c <HAL_GetTick>
 800599e:	4602      	mov	r2, r0
 80059a0:	697b      	ldr	r3, [r7, #20]
 80059a2:	1ad3      	subs	r3, r2, r3
 80059a4:	683a      	ldr	r2, [r7, #0]
 80059a6:	429a      	cmp	r2, r3
 80059a8:	d803      	bhi.n	80059b2 <HAL_SPI_Receive+0x1d2>
 80059aa:	683b      	ldr	r3, [r7, #0]
 80059ac:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80059b0:	d102      	bne.n	80059b8 <HAL_SPI_Receive+0x1d8>
 80059b2:	683b      	ldr	r3, [r7, #0]
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	d109      	bne.n	80059cc <HAL_SPI_Receive+0x1ec>
 80059b8:	68fb      	ldr	r3, [r7, #12]
 80059ba:	2201      	movs	r2, #1
 80059bc:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80059c0:	68fb      	ldr	r3, [r7, #12]
 80059c2:	2200      	movs	r2, #0
 80059c4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80059c8:	2303      	movs	r3, #3
 80059ca:	e01e      	b.n	8005a0a <HAL_SPI_Receive+0x22a>
 80059cc:	68fb      	ldr	r3, [r7, #12]
 80059ce:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80059d0:	b29b      	uxth	r3, r3
 80059d2:	2b00      	cmp	r3, #0
 80059d4:	d1c6      	bne.n	8005964 <HAL_SPI_Receive+0x184>
 80059d6:	697a      	ldr	r2, [r7, #20]
 80059d8:	6839      	ldr	r1, [r7, #0]
 80059da:	68f8      	ldr	r0, [r7, #12]
 80059dc:	f000 fa4a 	bl	8005e74 <SPI_EndRxTransaction>
 80059e0:	4603      	mov	r3, r0
 80059e2:	2b00      	cmp	r3, #0
 80059e4:	d002      	beq.n	80059ec <HAL_SPI_Receive+0x20c>
 80059e6:	68fb      	ldr	r3, [r7, #12]
 80059e8:	2220      	movs	r2, #32
 80059ea:	655a      	str	r2, [r3, #84]	@ 0x54
 80059ec:	68fb      	ldr	r3, [r7, #12]
 80059ee:	2201      	movs	r2, #1
 80059f0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80059f4:	68fb      	ldr	r3, [r7, #12]
 80059f6:	2200      	movs	r2, #0
 80059f8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80059fc:	68fb      	ldr	r3, [r7, #12]
 80059fe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005a00:	2b00      	cmp	r3, #0
 8005a02:	d001      	beq.n	8005a08 <HAL_SPI_Receive+0x228>
 8005a04:	2301      	movs	r3, #1
 8005a06:	e000      	b.n	8005a0a <HAL_SPI_Receive+0x22a>
 8005a08:	2300      	movs	r3, #0
 8005a0a:	4618      	mov	r0, r3
 8005a0c:	3718      	adds	r7, #24
 8005a0e:	46bd      	mov	sp, r7
 8005a10:	bd80      	pop	{r7, pc}

08005a12 <HAL_SPI_TransmitReceive>:
 8005a12:	b580      	push	{r7, lr}
 8005a14:	b08a      	sub	sp, #40	@ 0x28
 8005a16:	af00      	add	r7, sp, #0
 8005a18:	60f8      	str	r0, [r7, #12]
 8005a1a:	60b9      	str	r1, [r7, #8]
 8005a1c:	607a      	str	r2, [r7, #4]
 8005a1e:	807b      	strh	r3, [r7, #2]
 8005a20:	2301      	movs	r3, #1
 8005a22:	627b      	str	r3, [r7, #36]	@ 0x24
 8005a24:	f7fd fc32 	bl	800328c <HAL_GetTick>
 8005a28:	6238      	str	r0, [r7, #32]
 8005a2a:	68fb      	ldr	r3, [r7, #12]
 8005a2c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005a30:	77fb      	strb	r3, [r7, #31]
 8005a32:	68fb      	ldr	r3, [r7, #12]
 8005a34:	685b      	ldr	r3, [r3, #4]
 8005a36:	61bb      	str	r3, [r7, #24]
 8005a38:	887b      	ldrh	r3, [r7, #2]
 8005a3a:	82fb      	strh	r3, [r7, #22]
 8005a3c:	7ffb      	ldrb	r3, [r7, #31]
 8005a3e:	2b01      	cmp	r3, #1
 8005a40:	d00c      	beq.n	8005a5c <HAL_SPI_TransmitReceive+0x4a>
 8005a42:	69bb      	ldr	r3, [r7, #24]
 8005a44:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005a48:	d106      	bne.n	8005a58 <HAL_SPI_TransmitReceive+0x46>
 8005a4a:	68fb      	ldr	r3, [r7, #12]
 8005a4c:	689b      	ldr	r3, [r3, #8]
 8005a4e:	2b00      	cmp	r3, #0
 8005a50:	d102      	bne.n	8005a58 <HAL_SPI_TransmitReceive+0x46>
 8005a52:	7ffb      	ldrb	r3, [r7, #31]
 8005a54:	2b04      	cmp	r3, #4
 8005a56:	d001      	beq.n	8005a5c <HAL_SPI_TransmitReceive+0x4a>
 8005a58:	2302      	movs	r3, #2
 8005a5a:	e17f      	b.n	8005d5c <HAL_SPI_TransmitReceive+0x34a>
 8005a5c:	68bb      	ldr	r3, [r7, #8]
 8005a5e:	2b00      	cmp	r3, #0
 8005a60:	d005      	beq.n	8005a6e <HAL_SPI_TransmitReceive+0x5c>
 8005a62:	687b      	ldr	r3, [r7, #4]
 8005a64:	2b00      	cmp	r3, #0
 8005a66:	d002      	beq.n	8005a6e <HAL_SPI_TransmitReceive+0x5c>
 8005a68:	887b      	ldrh	r3, [r7, #2]
 8005a6a:	2b00      	cmp	r3, #0
 8005a6c:	d101      	bne.n	8005a72 <HAL_SPI_TransmitReceive+0x60>
 8005a6e:	2301      	movs	r3, #1
 8005a70:	e174      	b.n	8005d5c <HAL_SPI_TransmitReceive+0x34a>
 8005a72:	68fb      	ldr	r3, [r7, #12]
 8005a74:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005a78:	2b01      	cmp	r3, #1
 8005a7a:	d101      	bne.n	8005a80 <HAL_SPI_TransmitReceive+0x6e>
 8005a7c:	2302      	movs	r3, #2
 8005a7e:	e16d      	b.n	8005d5c <HAL_SPI_TransmitReceive+0x34a>
 8005a80:	68fb      	ldr	r3, [r7, #12]
 8005a82:	2201      	movs	r2, #1
 8005a84:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005a88:	68fb      	ldr	r3, [r7, #12]
 8005a8a:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005a8e:	b2db      	uxtb	r3, r3
 8005a90:	2b04      	cmp	r3, #4
 8005a92:	d003      	beq.n	8005a9c <HAL_SPI_TransmitReceive+0x8a>
 8005a94:	68fb      	ldr	r3, [r7, #12]
 8005a96:	2205      	movs	r2, #5
 8005a98:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005a9c:	68fb      	ldr	r3, [r7, #12]
 8005a9e:	2200      	movs	r2, #0
 8005aa0:	655a      	str	r2, [r3, #84]	@ 0x54
 8005aa2:	68fb      	ldr	r3, [r7, #12]
 8005aa4:	687a      	ldr	r2, [r7, #4]
 8005aa6:	639a      	str	r2, [r3, #56]	@ 0x38
 8005aa8:	68fb      	ldr	r3, [r7, #12]
 8005aaa:	887a      	ldrh	r2, [r7, #2]
 8005aac:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005aae:	68fb      	ldr	r3, [r7, #12]
 8005ab0:	887a      	ldrh	r2, [r7, #2]
 8005ab2:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8005ab4:	68fb      	ldr	r3, [r7, #12]
 8005ab6:	68ba      	ldr	r2, [r7, #8]
 8005ab8:	631a      	str	r2, [r3, #48]	@ 0x30
 8005aba:	68fb      	ldr	r3, [r7, #12]
 8005abc:	887a      	ldrh	r2, [r7, #2]
 8005abe:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	887a      	ldrh	r2, [r7, #2]
 8005ac4:	869a      	strh	r2, [r3, #52]	@ 0x34
 8005ac6:	68fb      	ldr	r3, [r7, #12]
 8005ac8:	2200      	movs	r2, #0
 8005aca:	641a      	str	r2, [r3, #64]	@ 0x40
 8005acc:	68fb      	ldr	r3, [r7, #12]
 8005ace:	2200      	movs	r2, #0
 8005ad0:	645a      	str	r2, [r3, #68]	@ 0x44
 8005ad2:	68fb      	ldr	r3, [r7, #12]
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005adc:	2b40      	cmp	r3, #64	@ 0x40
 8005ade:	d007      	beq.n	8005af0 <HAL_SPI_TransmitReceive+0xde>
 8005ae0:	68fb      	ldr	r3, [r7, #12]
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	681a      	ldr	r2, [r3, #0]
 8005ae6:	68fb      	ldr	r3, [r7, #12]
 8005ae8:	681b      	ldr	r3, [r3, #0]
 8005aea:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005aee:	601a      	str	r2, [r3, #0]
 8005af0:	68fb      	ldr	r3, [r7, #12]
 8005af2:	68db      	ldr	r3, [r3, #12]
 8005af4:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005af8:	d17e      	bne.n	8005bf8 <HAL_SPI_TransmitReceive+0x1e6>
 8005afa:	68fb      	ldr	r3, [r7, #12]
 8005afc:	685b      	ldr	r3, [r3, #4]
 8005afe:	2b00      	cmp	r3, #0
 8005b00:	d002      	beq.n	8005b08 <HAL_SPI_TransmitReceive+0xf6>
 8005b02:	8afb      	ldrh	r3, [r7, #22]
 8005b04:	2b01      	cmp	r3, #1
 8005b06:	d16c      	bne.n	8005be2 <HAL_SPI_TransmitReceive+0x1d0>
 8005b08:	68fb      	ldr	r3, [r7, #12]
 8005b0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b0c:	881a      	ldrh	r2, [r3, #0]
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	60da      	str	r2, [r3, #12]
 8005b14:	68fb      	ldr	r3, [r7, #12]
 8005b16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b18:	1c9a      	adds	r2, r3, #2
 8005b1a:	68fb      	ldr	r3, [r7, #12]
 8005b1c:	631a      	str	r2, [r3, #48]	@ 0x30
 8005b1e:	68fb      	ldr	r3, [r7, #12]
 8005b20:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005b22:	b29b      	uxth	r3, r3
 8005b24:	3b01      	subs	r3, #1
 8005b26:	b29a      	uxth	r2, r3
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005b2c:	e059      	b.n	8005be2 <HAL_SPI_TransmitReceive+0x1d0>
 8005b2e:	68fb      	ldr	r3, [r7, #12]
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	689b      	ldr	r3, [r3, #8]
 8005b34:	f003 0302 	and.w	r3, r3, #2
 8005b38:	2b02      	cmp	r3, #2
 8005b3a:	d11b      	bne.n	8005b74 <HAL_SPI_TransmitReceive+0x162>
 8005b3c:	68fb      	ldr	r3, [r7, #12]
 8005b3e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005b40:	b29b      	uxth	r3, r3
 8005b42:	2b00      	cmp	r3, #0
 8005b44:	d016      	beq.n	8005b74 <HAL_SPI_TransmitReceive+0x162>
 8005b46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005b48:	2b01      	cmp	r3, #1
 8005b4a:	d113      	bne.n	8005b74 <HAL_SPI_TransmitReceive+0x162>
 8005b4c:	68fb      	ldr	r3, [r7, #12]
 8005b4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b50:	881a      	ldrh	r2, [r3, #0]
 8005b52:	68fb      	ldr	r3, [r7, #12]
 8005b54:	681b      	ldr	r3, [r3, #0]
 8005b56:	60da      	str	r2, [r3, #12]
 8005b58:	68fb      	ldr	r3, [r7, #12]
 8005b5a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b5c:	1c9a      	adds	r2, r3, #2
 8005b5e:	68fb      	ldr	r3, [r7, #12]
 8005b60:	631a      	str	r2, [r3, #48]	@ 0x30
 8005b62:	68fb      	ldr	r3, [r7, #12]
 8005b64:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005b66:	b29b      	uxth	r3, r3
 8005b68:	3b01      	subs	r3, #1
 8005b6a:	b29a      	uxth	r2, r3
 8005b6c:	68fb      	ldr	r3, [r7, #12]
 8005b6e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005b70:	2300      	movs	r3, #0
 8005b72:	627b      	str	r3, [r7, #36]	@ 0x24
 8005b74:	68fb      	ldr	r3, [r7, #12]
 8005b76:	681b      	ldr	r3, [r3, #0]
 8005b78:	689b      	ldr	r3, [r3, #8]
 8005b7a:	f003 0301 	and.w	r3, r3, #1
 8005b7e:	2b01      	cmp	r3, #1
 8005b80:	d119      	bne.n	8005bb6 <HAL_SPI_TransmitReceive+0x1a4>
 8005b82:	68fb      	ldr	r3, [r7, #12]
 8005b84:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005b86:	b29b      	uxth	r3, r3
 8005b88:	2b00      	cmp	r3, #0
 8005b8a:	d014      	beq.n	8005bb6 <HAL_SPI_TransmitReceive+0x1a4>
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	681b      	ldr	r3, [r3, #0]
 8005b90:	68da      	ldr	r2, [r3, #12]
 8005b92:	68fb      	ldr	r3, [r7, #12]
 8005b94:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005b96:	b292      	uxth	r2, r2
 8005b98:	801a      	strh	r2, [r3, #0]
 8005b9a:	68fb      	ldr	r3, [r7, #12]
 8005b9c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005b9e:	1c9a      	adds	r2, r3, #2
 8005ba0:	68fb      	ldr	r3, [r7, #12]
 8005ba2:	639a      	str	r2, [r3, #56]	@ 0x38
 8005ba4:	68fb      	ldr	r3, [r7, #12]
 8005ba6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005ba8:	b29b      	uxth	r3, r3
 8005baa:	3b01      	subs	r3, #1
 8005bac:	b29a      	uxth	r2, r3
 8005bae:	68fb      	ldr	r3, [r7, #12]
 8005bb0:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005bb2:	2301      	movs	r3, #1
 8005bb4:	627b      	str	r3, [r7, #36]	@ 0x24
 8005bb6:	f7fd fb69 	bl	800328c <HAL_GetTick>
 8005bba:	4602      	mov	r2, r0
 8005bbc:	6a3b      	ldr	r3, [r7, #32]
 8005bbe:	1ad3      	subs	r3, r2, r3
 8005bc0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005bc2:	429a      	cmp	r2, r3
 8005bc4:	d80d      	bhi.n	8005be2 <HAL_SPI_TransmitReceive+0x1d0>
 8005bc6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005bc8:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8005bcc:	d009      	beq.n	8005be2 <HAL_SPI_TransmitReceive+0x1d0>
 8005bce:	68fb      	ldr	r3, [r7, #12]
 8005bd0:	2201      	movs	r2, #1
 8005bd2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	2200      	movs	r2, #0
 8005bda:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005bde:	2303      	movs	r3, #3
 8005be0:	e0bc      	b.n	8005d5c <HAL_SPI_TransmitReceive+0x34a>
 8005be2:	68fb      	ldr	r3, [r7, #12]
 8005be4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005be6:	b29b      	uxth	r3, r3
 8005be8:	2b00      	cmp	r3, #0
 8005bea:	d1a0      	bne.n	8005b2e <HAL_SPI_TransmitReceive+0x11c>
 8005bec:	68fb      	ldr	r3, [r7, #12]
 8005bee:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005bf0:	b29b      	uxth	r3, r3
 8005bf2:	2b00      	cmp	r3, #0
 8005bf4:	d19b      	bne.n	8005b2e <HAL_SPI_TransmitReceive+0x11c>
 8005bf6:	e082      	b.n	8005cfe <HAL_SPI_TransmitReceive+0x2ec>
 8005bf8:	68fb      	ldr	r3, [r7, #12]
 8005bfa:	685b      	ldr	r3, [r3, #4]
 8005bfc:	2b00      	cmp	r3, #0
 8005bfe:	d002      	beq.n	8005c06 <HAL_SPI_TransmitReceive+0x1f4>
 8005c00:	8afb      	ldrh	r3, [r7, #22]
 8005c02:	2b01      	cmp	r3, #1
 8005c04:	d171      	bne.n	8005cea <HAL_SPI_TransmitReceive+0x2d8>
 8005c06:	68fb      	ldr	r3, [r7, #12]
 8005c08:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005c0a:	68fb      	ldr	r3, [r7, #12]
 8005c0c:	681b      	ldr	r3, [r3, #0]
 8005c0e:	330c      	adds	r3, #12
 8005c10:	7812      	ldrb	r2, [r2, #0]
 8005c12:	701a      	strb	r2, [r3, #0]
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c18:	1c5a      	adds	r2, r3, #1
 8005c1a:	68fb      	ldr	r3, [r7, #12]
 8005c1c:	631a      	str	r2, [r3, #48]	@ 0x30
 8005c1e:	68fb      	ldr	r3, [r7, #12]
 8005c20:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005c22:	b29b      	uxth	r3, r3
 8005c24:	3b01      	subs	r3, #1
 8005c26:	b29a      	uxth	r2, r3
 8005c28:	68fb      	ldr	r3, [r7, #12]
 8005c2a:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005c2c:	e05d      	b.n	8005cea <HAL_SPI_TransmitReceive+0x2d8>
 8005c2e:	68fb      	ldr	r3, [r7, #12]
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	689b      	ldr	r3, [r3, #8]
 8005c34:	f003 0302 	and.w	r3, r3, #2
 8005c38:	2b02      	cmp	r3, #2
 8005c3a:	d11c      	bne.n	8005c76 <HAL_SPI_TransmitReceive+0x264>
 8005c3c:	68fb      	ldr	r3, [r7, #12]
 8005c3e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005c40:	b29b      	uxth	r3, r3
 8005c42:	2b00      	cmp	r3, #0
 8005c44:	d017      	beq.n	8005c76 <HAL_SPI_TransmitReceive+0x264>
 8005c46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c48:	2b01      	cmp	r3, #1
 8005c4a:	d114      	bne.n	8005c76 <HAL_SPI_TransmitReceive+0x264>
 8005c4c:	68fb      	ldr	r3, [r7, #12]
 8005c4e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005c50:	68fb      	ldr	r3, [r7, #12]
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	330c      	adds	r3, #12
 8005c56:	7812      	ldrb	r2, [r2, #0]
 8005c58:	701a      	strb	r2, [r3, #0]
 8005c5a:	68fb      	ldr	r3, [r7, #12]
 8005c5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c5e:	1c5a      	adds	r2, r3, #1
 8005c60:	68fb      	ldr	r3, [r7, #12]
 8005c62:	631a      	str	r2, [r3, #48]	@ 0x30
 8005c64:	68fb      	ldr	r3, [r7, #12]
 8005c66:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005c68:	b29b      	uxth	r3, r3
 8005c6a:	3b01      	subs	r3, #1
 8005c6c:	b29a      	uxth	r2, r3
 8005c6e:	68fb      	ldr	r3, [r7, #12]
 8005c70:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005c72:	2300      	movs	r3, #0
 8005c74:	627b      	str	r3, [r7, #36]	@ 0x24
 8005c76:	68fb      	ldr	r3, [r7, #12]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	689b      	ldr	r3, [r3, #8]
 8005c7c:	f003 0301 	and.w	r3, r3, #1
 8005c80:	2b01      	cmp	r3, #1
 8005c82:	d119      	bne.n	8005cb8 <HAL_SPI_TransmitReceive+0x2a6>
 8005c84:	68fb      	ldr	r3, [r7, #12]
 8005c86:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005c88:	b29b      	uxth	r3, r3
 8005c8a:	2b00      	cmp	r3, #0
 8005c8c:	d014      	beq.n	8005cb8 <HAL_SPI_TransmitReceive+0x2a6>
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	681b      	ldr	r3, [r3, #0]
 8005c92:	68da      	ldr	r2, [r3, #12]
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005c98:	b2d2      	uxtb	r2, r2
 8005c9a:	701a      	strb	r2, [r3, #0]
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005ca0:	1c5a      	adds	r2, r3, #1
 8005ca2:	68fb      	ldr	r3, [r7, #12]
 8005ca4:	639a      	str	r2, [r3, #56]	@ 0x38
 8005ca6:	68fb      	ldr	r3, [r7, #12]
 8005ca8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005caa:	b29b      	uxth	r3, r3
 8005cac:	3b01      	subs	r3, #1
 8005cae:	b29a      	uxth	r2, r3
 8005cb0:	68fb      	ldr	r3, [r7, #12]
 8005cb2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005cb4:	2301      	movs	r3, #1
 8005cb6:	627b      	str	r3, [r7, #36]	@ 0x24
 8005cb8:	f7fd fae8 	bl	800328c <HAL_GetTick>
 8005cbc:	4602      	mov	r2, r0
 8005cbe:	6a3b      	ldr	r3, [r7, #32]
 8005cc0:	1ad3      	subs	r3, r2, r3
 8005cc2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005cc4:	429a      	cmp	r2, r3
 8005cc6:	d803      	bhi.n	8005cd0 <HAL_SPI_TransmitReceive+0x2be>
 8005cc8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005cca:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8005cce:	d102      	bne.n	8005cd6 <HAL_SPI_TransmitReceive+0x2c4>
 8005cd0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005cd2:	2b00      	cmp	r3, #0
 8005cd4:	d109      	bne.n	8005cea <HAL_SPI_TransmitReceive+0x2d8>
 8005cd6:	68fb      	ldr	r3, [r7, #12]
 8005cd8:	2201      	movs	r2, #1
 8005cda:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005cde:	68fb      	ldr	r3, [r7, #12]
 8005ce0:	2200      	movs	r2, #0
 8005ce2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005ce6:	2303      	movs	r3, #3
 8005ce8:	e038      	b.n	8005d5c <HAL_SPI_TransmitReceive+0x34a>
 8005cea:	68fb      	ldr	r3, [r7, #12]
 8005cec:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005cee:	b29b      	uxth	r3, r3
 8005cf0:	2b00      	cmp	r3, #0
 8005cf2:	d19c      	bne.n	8005c2e <HAL_SPI_TransmitReceive+0x21c>
 8005cf4:	68fb      	ldr	r3, [r7, #12]
 8005cf6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005cf8:	b29b      	uxth	r3, r3
 8005cfa:	2b00      	cmp	r3, #0
 8005cfc:	d197      	bne.n	8005c2e <HAL_SPI_TransmitReceive+0x21c>
 8005cfe:	6a3a      	ldr	r2, [r7, #32]
 8005d00:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8005d02:	68f8      	ldr	r0, [r7, #12]
 8005d04:	f000 f908 	bl	8005f18 <SPI_EndRxTxTransaction>
 8005d08:	4603      	mov	r3, r0
 8005d0a:	2b00      	cmp	r3, #0
 8005d0c:	d008      	beq.n	8005d20 <HAL_SPI_TransmitReceive+0x30e>
 8005d0e:	68fb      	ldr	r3, [r7, #12]
 8005d10:	2220      	movs	r2, #32
 8005d12:	655a      	str	r2, [r3, #84]	@ 0x54
 8005d14:	68fb      	ldr	r3, [r7, #12]
 8005d16:	2200      	movs	r2, #0
 8005d18:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005d1c:	2301      	movs	r3, #1
 8005d1e:	e01d      	b.n	8005d5c <HAL_SPI_TransmitReceive+0x34a>
 8005d20:	68fb      	ldr	r3, [r7, #12]
 8005d22:	689b      	ldr	r3, [r3, #8]
 8005d24:	2b00      	cmp	r3, #0
 8005d26:	d10a      	bne.n	8005d3e <HAL_SPI_TransmitReceive+0x32c>
 8005d28:	2300      	movs	r3, #0
 8005d2a:	613b      	str	r3, [r7, #16]
 8005d2c:	68fb      	ldr	r3, [r7, #12]
 8005d2e:	681b      	ldr	r3, [r3, #0]
 8005d30:	68db      	ldr	r3, [r3, #12]
 8005d32:	613b      	str	r3, [r7, #16]
 8005d34:	68fb      	ldr	r3, [r7, #12]
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	689b      	ldr	r3, [r3, #8]
 8005d3a:	613b      	str	r3, [r7, #16]
 8005d3c:	693b      	ldr	r3, [r7, #16]
 8005d3e:	68fb      	ldr	r3, [r7, #12]
 8005d40:	2201      	movs	r2, #1
 8005d42:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	2200      	movs	r2, #0
 8005d4a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005d4e:	68fb      	ldr	r3, [r7, #12]
 8005d50:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d52:	2b00      	cmp	r3, #0
 8005d54:	d001      	beq.n	8005d5a <HAL_SPI_TransmitReceive+0x348>
 8005d56:	2301      	movs	r3, #1
 8005d58:	e000      	b.n	8005d5c <HAL_SPI_TransmitReceive+0x34a>
 8005d5a:	2300      	movs	r3, #0
 8005d5c:	4618      	mov	r0, r3
 8005d5e:	3728      	adds	r7, #40	@ 0x28
 8005d60:	46bd      	mov	sp, r7
 8005d62:	bd80      	pop	{r7, pc}

08005d64 <SPI_WaitFlagStateUntilTimeout>:
 8005d64:	b580      	push	{r7, lr}
 8005d66:	b088      	sub	sp, #32
 8005d68:	af00      	add	r7, sp, #0
 8005d6a:	60f8      	str	r0, [r7, #12]
 8005d6c:	60b9      	str	r1, [r7, #8]
 8005d6e:	603b      	str	r3, [r7, #0]
 8005d70:	4613      	mov	r3, r2
 8005d72:	71fb      	strb	r3, [r7, #7]
 8005d74:	f7fd fa8a 	bl	800328c <HAL_GetTick>
 8005d78:	4602      	mov	r2, r0
 8005d7a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005d7c:	1a9b      	subs	r3, r3, r2
 8005d7e:	683a      	ldr	r2, [r7, #0]
 8005d80:	4413      	add	r3, r2
 8005d82:	61fb      	str	r3, [r7, #28]
 8005d84:	f7fd fa82 	bl	800328c <HAL_GetTick>
 8005d88:	61b8      	str	r0, [r7, #24]
 8005d8a:	4b39      	ldr	r3, [pc, #228]	@ (8005e70 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8005d8c:	681b      	ldr	r3, [r3, #0]
 8005d8e:	015b      	lsls	r3, r3, #5
 8005d90:	0d1b      	lsrs	r3, r3, #20
 8005d92:	69fa      	ldr	r2, [r7, #28]
 8005d94:	fb02 f303 	mul.w	r3, r2, r3
 8005d98:	617b      	str	r3, [r7, #20]
 8005d9a:	e054      	b.n	8005e46 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005d9c:	683b      	ldr	r3, [r7, #0]
 8005d9e:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8005da2:	d050      	beq.n	8005e46 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005da4:	f7fd fa72 	bl	800328c <HAL_GetTick>
 8005da8:	4602      	mov	r2, r0
 8005daa:	69bb      	ldr	r3, [r7, #24]
 8005dac:	1ad3      	subs	r3, r2, r3
 8005dae:	69fa      	ldr	r2, [r7, #28]
 8005db0:	429a      	cmp	r2, r3
 8005db2:	d902      	bls.n	8005dba <SPI_WaitFlagStateUntilTimeout+0x56>
 8005db4:	69fb      	ldr	r3, [r7, #28]
 8005db6:	2b00      	cmp	r3, #0
 8005db8:	d13d      	bne.n	8005e36 <SPI_WaitFlagStateUntilTimeout+0xd2>
 8005dba:	68fb      	ldr	r3, [r7, #12]
 8005dbc:	681b      	ldr	r3, [r3, #0]
 8005dbe:	685a      	ldr	r2, [r3, #4]
 8005dc0:	68fb      	ldr	r3, [r7, #12]
 8005dc2:	681b      	ldr	r3, [r3, #0]
 8005dc4:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005dc8:	605a      	str	r2, [r3, #4]
 8005dca:	68fb      	ldr	r3, [r7, #12]
 8005dcc:	685b      	ldr	r3, [r3, #4]
 8005dce:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005dd2:	d111      	bne.n	8005df8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005dd4:	68fb      	ldr	r3, [r7, #12]
 8005dd6:	689b      	ldr	r3, [r3, #8]
 8005dd8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005ddc:	d004      	beq.n	8005de8 <SPI_WaitFlagStateUntilTimeout+0x84>
 8005dde:	68fb      	ldr	r3, [r7, #12]
 8005de0:	689b      	ldr	r3, [r3, #8]
 8005de2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005de6:	d107      	bne.n	8005df8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005de8:	68fb      	ldr	r3, [r7, #12]
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	681a      	ldr	r2, [r3, #0]
 8005dee:	68fb      	ldr	r3, [r7, #12]
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005df6:	601a      	str	r2, [r3, #0]
 8005df8:	68fb      	ldr	r3, [r7, #12]
 8005dfa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005dfc:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005e00:	d10f      	bne.n	8005e22 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	681a      	ldr	r2, [r3, #0]
 8005e08:	68fb      	ldr	r3, [r7, #12]
 8005e0a:	681b      	ldr	r3, [r3, #0]
 8005e0c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005e10:	601a      	str	r2, [r3, #0]
 8005e12:	68fb      	ldr	r3, [r7, #12]
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	681a      	ldr	r2, [r3, #0]
 8005e18:	68fb      	ldr	r3, [r7, #12]
 8005e1a:	681b      	ldr	r3, [r3, #0]
 8005e1c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005e20:	601a      	str	r2, [r3, #0]
 8005e22:	68fb      	ldr	r3, [r7, #12]
 8005e24:	2201      	movs	r2, #1
 8005e26:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005e2a:	68fb      	ldr	r3, [r7, #12]
 8005e2c:	2200      	movs	r2, #0
 8005e2e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005e32:	2303      	movs	r3, #3
 8005e34:	e017      	b.n	8005e66 <SPI_WaitFlagStateUntilTimeout+0x102>
 8005e36:	697b      	ldr	r3, [r7, #20]
 8005e38:	2b00      	cmp	r3, #0
 8005e3a:	d101      	bne.n	8005e40 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8005e3c:	2300      	movs	r3, #0
 8005e3e:	61fb      	str	r3, [r7, #28]
 8005e40:	697b      	ldr	r3, [r7, #20]
 8005e42:	3b01      	subs	r3, #1
 8005e44:	617b      	str	r3, [r7, #20]
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	681b      	ldr	r3, [r3, #0]
 8005e4a:	689a      	ldr	r2, [r3, #8]
 8005e4c:	68bb      	ldr	r3, [r7, #8]
 8005e4e:	4013      	ands	r3, r2
 8005e50:	68ba      	ldr	r2, [r7, #8]
 8005e52:	429a      	cmp	r2, r3
 8005e54:	bf0c      	ite	eq
 8005e56:	2301      	moveq	r3, #1
 8005e58:	2300      	movne	r3, #0
 8005e5a:	b2db      	uxtb	r3, r3
 8005e5c:	461a      	mov	r2, r3
 8005e5e:	79fb      	ldrb	r3, [r7, #7]
 8005e60:	429a      	cmp	r2, r3
 8005e62:	d19b      	bne.n	8005d9c <SPI_WaitFlagStateUntilTimeout+0x38>
 8005e64:	2300      	movs	r3, #0
 8005e66:	4618      	mov	r0, r3
 8005e68:	3720      	adds	r7, #32
 8005e6a:	46bd      	mov	sp, r7
 8005e6c:	bd80      	pop	{r7, pc}
 8005e6e:	bf00      	nop
 8005e70:	2000006c 	.word	0x2000006c

08005e74 <SPI_EndRxTransaction>:
 8005e74:	b580      	push	{r7, lr}
 8005e76:	b086      	sub	sp, #24
 8005e78:	af02      	add	r7, sp, #8
 8005e7a:	60f8      	str	r0, [r7, #12]
 8005e7c:	60b9      	str	r1, [r7, #8]
 8005e7e:	607a      	str	r2, [r7, #4]
 8005e80:	68fb      	ldr	r3, [r7, #12]
 8005e82:	685b      	ldr	r3, [r3, #4]
 8005e84:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005e88:	d111      	bne.n	8005eae <SPI_EndRxTransaction+0x3a>
 8005e8a:	68fb      	ldr	r3, [r7, #12]
 8005e8c:	689b      	ldr	r3, [r3, #8]
 8005e8e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005e92:	d004      	beq.n	8005e9e <SPI_EndRxTransaction+0x2a>
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	689b      	ldr	r3, [r3, #8]
 8005e98:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005e9c:	d107      	bne.n	8005eae <SPI_EndRxTransaction+0x3a>
 8005e9e:	68fb      	ldr	r3, [r7, #12]
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	681a      	ldr	r2, [r3, #0]
 8005ea4:	68fb      	ldr	r3, [r7, #12]
 8005ea6:	681b      	ldr	r3, [r3, #0]
 8005ea8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005eac:	601a      	str	r2, [r3, #0]
 8005eae:	68fb      	ldr	r3, [r7, #12]
 8005eb0:	685b      	ldr	r3, [r3, #4]
 8005eb2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005eb6:	d117      	bne.n	8005ee8 <SPI_EndRxTransaction+0x74>
 8005eb8:	68fb      	ldr	r3, [r7, #12]
 8005eba:	689b      	ldr	r3, [r3, #8]
 8005ebc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005ec0:	d112      	bne.n	8005ee8 <SPI_EndRxTransaction+0x74>
 8005ec2:	687b      	ldr	r3, [r7, #4]
 8005ec4:	9300      	str	r3, [sp, #0]
 8005ec6:	68bb      	ldr	r3, [r7, #8]
 8005ec8:	2200      	movs	r2, #0
 8005eca:	2101      	movs	r1, #1
 8005ecc:	68f8      	ldr	r0, [r7, #12]
 8005ece:	f7ff ff49 	bl	8005d64 <SPI_WaitFlagStateUntilTimeout>
 8005ed2:	4603      	mov	r3, r0
 8005ed4:	2b00      	cmp	r3, #0
 8005ed6:	d01a      	beq.n	8005f0e <SPI_EndRxTransaction+0x9a>
 8005ed8:	68fb      	ldr	r3, [r7, #12]
 8005eda:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005edc:	f043 0220 	orr.w	r2, r3, #32
 8005ee0:	68fb      	ldr	r3, [r7, #12]
 8005ee2:	655a      	str	r2, [r3, #84]	@ 0x54
 8005ee4:	2303      	movs	r3, #3
 8005ee6:	e013      	b.n	8005f10 <SPI_EndRxTransaction+0x9c>
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	9300      	str	r3, [sp, #0]
 8005eec:	68bb      	ldr	r3, [r7, #8]
 8005eee:	2200      	movs	r2, #0
 8005ef0:	2180      	movs	r1, #128	@ 0x80
 8005ef2:	68f8      	ldr	r0, [r7, #12]
 8005ef4:	f7ff ff36 	bl	8005d64 <SPI_WaitFlagStateUntilTimeout>
 8005ef8:	4603      	mov	r3, r0
 8005efa:	2b00      	cmp	r3, #0
 8005efc:	d007      	beq.n	8005f0e <SPI_EndRxTransaction+0x9a>
 8005efe:	68fb      	ldr	r3, [r7, #12]
 8005f00:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005f02:	f043 0220 	orr.w	r2, r3, #32
 8005f06:	68fb      	ldr	r3, [r7, #12]
 8005f08:	655a      	str	r2, [r3, #84]	@ 0x54
 8005f0a:	2303      	movs	r3, #3
 8005f0c:	e000      	b.n	8005f10 <SPI_EndRxTransaction+0x9c>
 8005f0e:	2300      	movs	r3, #0
 8005f10:	4618      	mov	r0, r3
 8005f12:	3710      	adds	r7, #16
 8005f14:	46bd      	mov	sp, r7
 8005f16:	bd80      	pop	{r7, pc}

08005f18 <SPI_EndRxTxTransaction>:
 8005f18:	b580      	push	{r7, lr}
 8005f1a:	b086      	sub	sp, #24
 8005f1c:	af02      	add	r7, sp, #8
 8005f1e:	60f8      	str	r0, [r7, #12]
 8005f20:	60b9      	str	r1, [r7, #8]
 8005f22:	607a      	str	r2, [r7, #4]
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	9300      	str	r3, [sp, #0]
 8005f28:	68bb      	ldr	r3, [r7, #8]
 8005f2a:	2201      	movs	r2, #1
 8005f2c:	2102      	movs	r1, #2
 8005f2e:	68f8      	ldr	r0, [r7, #12]
 8005f30:	f7ff ff18 	bl	8005d64 <SPI_WaitFlagStateUntilTimeout>
 8005f34:	4603      	mov	r3, r0
 8005f36:	2b00      	cmp	r3, #0
 8005f38:	d007      	beq.n	8005f4a <SPI_EndRxTxTransaction+0x32>
 8005f3a:	68fb      	ldr	r3, [r7, #12]
 8005f3c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005f3e:	f043 0220 	orr.w	r2, r3, #32
 8005f42:	68fb      	ldr	r3, [r7, #12]
 8005f44:	655a      	str	r2, [r3, #84]	@ 0x54
 8005f46:	2303      	movs	r3, #3
 8005f48:	e013      	b.n	8005f72 <SPI_EndRxTxTransaction+0x5a>
 8005f4a:	687b      	ldr	r3, [r7, #4]
 8005f4c:	9300      	str	r3, [sp, #0]
 8005f4e:	68bb      	ldr	r3, [r7, #8]
 8005f50:	2200      	movs	r2, #0
 8005f52:	2180      	movs	r1, #128	@ 0x80
 8005f54:	68f8      	ldr	r0, [r7, #12]
 8005f56:	f7ff ff05 	bl	8005d64 <SPI_WaitFlagStateUntilTimeout>
 8005f5a:	4603      	mov	r3, r0
 8005f5c:	2b00      	cmp	r3, #0
 8005f5e:	d007      	beq.n	8005f70 <SPI_EndRxTxTransaction+0x58>
 8005f60:	68fb      	ldr	r3, [r7, #12]
 8005f62:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005f64:	f043 0220 	orr.w	r2, r3, #32
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	655a      	str	r2, [r3, #84]	@ 0x54
 8005f6c:	2303      	movs	r3, #3
 8005f6e:	e000      	b.n	8005f72 <SPI_EndRxTxTransaction+0x5a>
 8005f70:	2300      	movs	r3, #0
 8005f72:	4618      	mov	r0, r3
 8005f74:	3710      	adds	r7, #16
 8005f76:	46bd      	mov	sp, r7
 8005f78:	bd80      	pop	{r7, pc}

08005f7a <HAL_TIM_Base_Init>:
 8005f7a:	b580      	push	{r7, lr}
 8005f7c:	b082      	sub	sp, #8
 8005f7e:	af00      	add	r7, sp, #0
 8005f80:	6078      	str	r0, [r7, #4]
 8005f82:	687b      	ldr	r3, [r7, #4]
 8005f84:	2b00      	cmp	r3, #0
 8005f86:	d101      	bne.n	8005f8c <HAL_TIM_Base_Init+0x12>
 8005f88:	2301      	movs	r3, #1
 8005f8a:	e041      	b.n	8006010 <HAL_TIM_Base_Init+0x96>
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005f92:	b2db      	uxtb	r3, r3
 8005f94:	2b00      	cmp	r3, #0
 8005f96:	d106      	bne.n	8005fa6 <HAL_TIM_Base_Init+0x2c>
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	2200      	movs	r2, #0
 8005f9c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005fa0:	6878      	ldr	r0, [r7, #4]
 8005fa2:	f7fd f861 	bl	8003068 <HAL_TIM_Base_MspInit>
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	2202      	movs	r2, #2
 8005faa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	681a      	ldr	r2, [r3, #0]
 8005fb2:	687b      	ldr	r3, [r7, #4]
 8005fb4:	3304      	adds	r3, #4
 8005fb6:	4619      	mov	r1, r3
 8005fb8:	4610      	mov	r0, r2
 8005fba:	f000 f82d 	bl	8006018 <TIM_Base_SetConfig>
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	2201      	movs	r2, #1
 8005fc2:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005fc6:	687b      	ldr	r3, [r7, #4]
 8005fc8:	2201      	movs	r2, #1
 8005fca:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	2201      	movs	r2, #1
 8005fd2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005fd6:	687b      	ldr	r3, [r7, #4]
 8005fd8:	2201      	movs	r2, #1
 8005fda:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005fde:	687b      	ldr	r3, [r7, #4]
 8005fe0:	2201      	movs	r2, #1
 8005fe2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	2201      	movs	r2, #1
 8005fea:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005fee:	687b      	ldr	r3, [r7, #4]
 8005ff0:	2201      	movs	r2, #1
 8005ff2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	2201      	movs	r2, #1
 8005ffa:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	2201      	movs	r2, #1
 8006002:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006006:	687b      	ldr	r3, [r7, #4]
 8006008:	2201      	movs	r2, #1
 800600a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800600e:	2300      	movs	r3, #0
 8006010:	4618      	mov	r0, r3
 8006012:	3708      	adds	r7, #8
 8006014:	46bd      	mov	sp, r7
 8006016:	bd80      	pop	{r7, pc}

08006018 <TIM_Base_SetConfig>:
 8006018:	b480      	push	{r7}
 800601a:	b085      	sub	sp, #20
 800601c:	af00      	add	r7, sp, #0
 800601e:	6078      	str	r0, [r7, #4]
 8006020:	6039      	str	r1, [r7, #0]
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	681b      	ldr	r3, [r3, #0]
 8006026:	60fb      	str	r3, [r7, #12]
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	4a33      	ldr	r2, [pc, #204]	@ (80060f8 <TIM_Base_SetConfig+0xe0>)
 800602c:	4293      	cmp	r3, r2
 800602e:	d00f      	beq.n	8006050 <TIM_Base_SetConfig+0x38>
 8006030:	687b      	ldr	r3, [r7, #4]
 8006032:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006036:	d00b      	beq.n	8006050 <TIM_Base_SetConfig+0x38>
 8006038:	687b      	ldr	r3, [r7, #4]
 800603a:	4a30      	ldr	r2, [pc, #192]	@ (80060fc <TIM_Base_SetConfig+0xe4>)
 800603c:	4293      	cmp	r3, r2
 800603e:	d007      	beq.n	8006050 <TIM_Base_SetConfig+0x38>
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	4a2f      	ldr	r2, [pc, #188]	@ (8006100 <TIM_Base_SetConfig+0xe8>)
 8006044:	4293      	cmp	r3, r2
 8006046:	d003      	beq.n	8006050 <TIM_Base_SetConfig+0x38>
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	4a2e      	ldr	r2, [pc, #184]	@ (8006104 <TIM_Base_SetConfig+0xec>)
 800604c:	4293      	cmp	r3, r2
 800604e:	d108      	bne.n	8006062 <TIM_Base_SetConfig+0x4a>
 8006050:	68fb      	ldr	r3, [r7, #12]
 8006052:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006056:	60fb      	str	r3, [r7, #12]
 8006058:	683b      	ldr	r3, [r7, #0]
 800605a:	685b      	ldr	r3, [r3, #4]
 800605c:	68fa      	ldr	r2, [r7, #12]
 800605e:	4313      	orrs	r3, r2
 8006060:	60fb      	str	r3, [r7, #12]
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	4a24      	ldr	r2, [pc, #144]	@ (80060f8 <TIM_Base_SetConfig+0xe0>)
 8006066:	4293      	cmp	r3, r2
 8006068:	d00f      	beq.n	800608a <TIM_Base_SetConfig+0x72>
 800606a:	687b      	ldr	r3, [r7, #4]
 800606c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006070:	d00b      	beq.n	800608a <TIM_Base_SetConfig+0x72>
 8006072:	687b      	ldr	r3, [r7, #4]
 8006074:	4a21      	ldr	r2, [pc, #132]	@ (80060fc <TIM_Base_SetConfig+0xe4>)
 8006076:	4293      	cmp	r3, r2
 8006078:	d007      	beq.n	800608a <TIM_Base_SetConfig+0x72>
 800607a:	687b      	ldr	r3, [r7, #4]
 800607c:	4a20      	ldr	r2, [pc, #128]	@ (8006100 <TIM_Base_SetConfig+0xe8>)
 800607e:	4293      	cmp	r3, r2
 8006080:	d003      	beq.n	800608a <TIM_Base_SetConfig+0x72>
 8006082:	687b      	ldr	r3, [r7, #4]
 8006084:	4a1f      	ldr	r2, [pc, #124]	@ (8006104 <TIM_Base_SetConfig+0xec>)
 8006086:	4293      	cmp	r3, r2
 8006088:	d108      	bne.n	800609c <TIM_Base_SetConfig+0x84>
 800608a:	68fb      	ldr	r3, [r7, #12]
 800608c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006090:	60fb      	str	r3, [r7, #12]
 8006092:	683b      	ldr	r3, [r7, #0]
 8006094:	68db      	ldr	r3, [r3, #12]
 8006096:	68fa      	ldr	r2, [r7, #12]
 8006098:	4313      	orrs	r3, r2
 800609a:	60fb      	str	r3, [r7, #12]
 800609c:	68fb      	ldr	r3, [r7, #12]
 800609e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80060a2:	683b      	ldr	r3, [r7, #0]
 80060a4:	695b      	ldr	r3, [r3, #20]
 80060a6:	4313      	orrs	r3, r2
 80060a8:	60fb      	str	r3, [r7, #12]
 80060aa:	687b      	ldr	r3, [r7, #4]
 80060ac:	68fa      	ldr	r2, [r7, #12]
 80060ae:	601a      	str	r2, [r3, #0]
 80060b0:	683b      	ldr	r3, [r7, #0]
 80060b2:	689a      	ldr	r2, [r3, #8]
 80060b4:	687b      	ldr	r3, [r7, #4]
 80060b6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80060b8:	683b      	ldr	r3, [r7, #0]
 80060ba:	681a      	ldr	r2, [r3, #0]
 80060bc:	687b      	ldr	r3, [r7, #4]
 80060be:	629a      	str	r2, [r3, #40]	@ 0x28
 80060c0:	687b      	ldr	r3, [r7, #4]
 80060c2:	4a0d      	ldr	r2, [pc, #52]	@ (80060f8 <TIM_Base_SetConfig+0xe0>)
 80060c4:	4293      	cmp	r3, r2
 80060c6:	d103      	bne.n	80060d0 <TIM_Base_SetConfig+0xb8>
 80060c8:	683b      	ldr	r3, [r7, #0]
 80060ca:	691a      	ldr	r2, [r3, #16]
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	631a      	str	r2, [r3, #48]	@ 0x30
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	2201      	movs	r2, #1
 80060d4:	615a      	str	r2, [r3, #20]
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	691b      	ldr	r3, [r3, #16]
 80060da:	f003 0301 	and.w	r3, r3, #1
 80060de:	2b00      	cmp	r3, #0
 80060e0:	d005      	beq.n	80060ee <TIM_Base_SetConfig+0xd6>
 80060e2:	687b      	ldr	r3, [r7, #4]
 80060e4:	691b      	ldr	r3, [r3, #16]
 80060e6:	f023 0201 	bic.w	r2, r3, #1
 80060ea:	687b      	ldr	r3, [r7, #4]
 80060ec:	611a      	str	r2, [r3, #16]
 80060ee:	bf00      	nop
 80060f0:	3714      	adds	r7, #20
 80060f2:	46bd      	mov	sp, r7
 80060f4:	bc80      	pop	{r7}
 80060f6:	4770      	bx	lr
 80060f8:	40012c00 	.word	0x40012c00
 80060fc:	40000400 	.word	0x40000400
 8006100:	40000800 	.word	0x40000800
 8006104:	40000c00 	.word	0x40000c00

08006108 <HAL_TIMEx_MasterConfigSynchronization>:
 8006108:	b480      	push	{r7}
 800610a:	b085      	sub	sp, #20
 800610c:	af00      	add	r7, sp, #0
 800610e:	6078      	str	r0, [r7, #4]
 8006110:	6039      	str	r1, [r7, #0]
 8006112:	687b      	ldr	r3, [r7, #4]
 8006114:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006118:	2b01      	cmp	r3, #1
 800611a:	d101      	bne.n	8006120 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800611c:	2302      	movs	r3, #2
 800611e:	e04b      	b.n	80061b8 <HAL_TIMEx_MasterConfigSynchronization+0xb0>
 8006120:	687b      	ldr	r3, [r7, #4]
 8006122:	2201      	movs	r2, #1
 8006124:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006128:	687b      	ldr	r3, [r7, #4]
 800612a:	2202      	movs	r2, #2
 800612c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	681b      	ldr	r3, [r3, #0]
 8006134:	685b      	ldr	r3, [r3, #4]
 8006136:	60fb      	str	r3, [r7, #12]
 8006138:	687b      	ldr	r3, [r7, #4]
 800613a:	681b      	ldr	r3, [r3, #0]
 800613c:	689b      	ldr	r3, [r3, #8]
 800613e:	60bb      	str	r3, [r7, #8]
 8006140:	68fb      	ldr	r3, [r7, #12]
 8006142:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006146:	60fb      	str	r3, [r7, #12]
 8006148:	683b      	ldr	r3, [r7, #0]
 800614a:	681b      	ldr	r3, [r3, #0]
 800614c:	68fa      	ldr	r2, [r7, #12]
 800614e:	4313      	orrs	r3, r2
 8006150:	60fb      	str	r3, [r7, #12]
 8006152:	687b      	ldr	r3, [r7, #4]
 8006154:	681b      	ldr	r3, [r3, #0]
 8006156:	68fa      	ldr	r2, [r7, #12]
 8006158:	605a      	str	r2, [r3, #4]
 800615a:	687b      	ldr	r3, [r7, #4]
 800615c:	681b      	ldr	r3, [r3, #0]
 800615e:	4a19      	ldr	r2, [pc, #100]	@ (80061c4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>)
 8006160:	4293      	cmp	r3, r2
 8006162:	d013      	beq.n	800618c <HAL_TIMEx_MasterConfigSynchronization+0x84>
 8006164:	687b      	ldr	r3, [r7, #4]
 8006166:	681b      	ldr	r3, [r3, #0]
 8006168:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800616c:	d00e      	beq.n	800618c <HAL_TIMEx_MasterConfigSynchronization+0x84>
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	681b      	ldr	r3, [r3, #0]
 8006172:	4a15      	ldr	r2, [pc, #84]	@ (80061c8 <HAL_TIMEx_MasterConfigSynchronization+0xc0>)
 8006174:	4293      	cmp	r3, r2
 8006176:	d009      	beq.n	800618c <HAL_TIMEx_MasterConfigSynchronization+0x84>
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	4a13      	ldr	r2, [pc, #76]	@ (80061cc <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 800617e:	4293      	cmp	r3, r2
 8006180:	d004      	beq.n	800618c <HAL_TIMEx_MasterConfigSynchronization+0x84>
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	4a12      	ldr	r2, [pc, #72]	@ (80061d0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8006188:	4293      	cmp	r3, r2
 800618a:	d10c      	bne.n	80061a6 <HAL_TIMEx_MasterConfigSynchronization+0x9e>
 800618c:	68bb      	ldr	r3, [r7, #8]
 800618e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006192:	60bb      	str	r3, [r7, #8]
 8006194:	683b      	ldr	r3, [r7, #0]
 8006196:	685b      	ldr	r3, [r3, #4]
 8006198:	68ba      	ldr	r2, [r7, #8]
 800619a:	4313      	orrs	r3, r2
 800619c:	60bb      	str	r3, [r7, #8]
 800619e:	687b      	ldr	r3, [r7, #4]
 80061a0:	681b      	ldr	r3, [r3, #0]
 80061a2:	68ba      	ldr	r2, [r7, #8]
 80061a4:	609a      	str	r2, [r3, #8]
 80061a6:	687b      	ldr	r3, [r7, #4]
 80061a8:	2201      	movs	r2, #1
 80061aa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80061ae:	687b      	ldr	r3, [r7, #4]
 80061b0:	2200      	movs	r2, #0
 80061b2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80061b6:	2300      	movs	r3, #0
 80061b8:	4618      	mov	r0, r3
 80061ba:	3714      	adds	r7, #20
 80061bc:	46bd      	mov	sp, r7
 80061be:	bc80      	pop	{r7}
 80061c0:	4770      	bx	lr
 80061c2:	bf00      	nop
 80061c4:	40012c00 	.word	0x40012c00
 80061c8:	40000400 	.word	0x40000400
 80061cc:	40000800 	.word	0x40000800
 80061d0:	40000c00 	.word	0x40000c00

080061d4 <HAL_UART_Init>:
 80061d4:	b580      	push	{r7, lr}
 80061d6:	b082      	sub	sp, #8
 80061d8:	af00      	add	r7, sp, #0
 80061da:	6078      	str	r0, [r7, #4]
 80061dc:	687b      	ldr	r3, [r7, #4]
 80061de:	2b00      	cmp	r3, #0
 80061e0:	d101      	bne.n	80061e6 <HAL_UART_Init+0x12>
 80061e2:	2301      	movs	r3, #1
 80061e4:	e042      	b.n	800626c <HAL_UART_Init+0x98>
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80061ec:	b2db      	uxtb	r3, r3
 80061ee:	2b00      	cmp	r3, #0
 80061f0:	d106      	bne.n	8006200 <HAL_UART_Init+0x2c>
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	2200      	movs	r2, #0
 80061f6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80061fa:	6878      	ldr	r0, [r7, #4]
 80061fc:	f7fc ff7c 	bl	80030f8 <HAL_UART_MspInit>
 8006200:	687b      	ldr	r3, [r7, #4]
 8006202:	2224      	movs	r2, #36	@ 0x24
 8006204:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	68da      	ldr	r2, [r3, #12]
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006216:	60da      	str	r2, [r3, #12]
 8006218:	6878      	ldr	r0, [r7, #4]
 800621a:	f000 f82b 	bl	8006274 <UART_SetConfig>
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	681b      	ldr	r3, [r3, #0]
 8006222:	691a      	ldr	r2, [r3, #16]
 8006224:	687b      	ldr	r3, [r7, #4]
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800622c:	611a      	str	r2, [r3, #16]
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	681b      	ldr	r3, [r3, #0]
 8006232:	695a      	ldr	r2, [r3, #20]
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800623c:	615a      	str	r2, [r3, #20]
 800623e:	687b      	ldr	r3, [r7, #4]
 8006240:	681b      	ldr	r3, [r3, #0]
 8006242:	68da      	ldr	r2, [r3, #12]
 8006244:	687b      	ldr	r3, [r7, #4]
 8006246:	681b      	ldr	r3, [r3, #0]
 8006248:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800624c:	60da      	str	r2, [r3, #12]
 800624e:	687b      	ldr	r3, [r7, #4]
 8006250:	2200      	movs	r2, #0
 8006252:	645a      	str	r2, [r3, #68]	@ 0x44
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	2220      	movs	r2, #32
 8006258:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	2220      	movs	r2, #32
 8006260:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	2200      	movs	r2, #0
 8006268:	635a      	str	r2, [r3, #52]	@ 0x34
 800626a:	2300      	movs	r3, #0
 800626c:	4618      	mov	r0, r3
 800626e:	3708      	adds	r7, #8
 8006270:	46bd      	mov	sp, r7
 8006272:	bd80      	pop	{r7, pc}

08006274 <UART_SetConfig>:
 8006274:	b580      	push	{r7, lr}
 8006276:	b084      	sub	sp, #16
 8006278:	af00      	add	r7, sp, #0
 800627a:	6078      	str	r0, [r7, #4]
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	681b      	ldr	r3, [r3, #0]
 8006280:	691b      	ldr	r3, [r3, #16]
 8006282:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8006286:	687b      	ldr	r3, [r7, #4]
 8006288:	68da      	ldr	r2, [r3, #12]
 800628a:	687b      	ldr	r3, [r7, #4]
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	430a      	orrs	r2, r1
 8006290:	611a      	str	r2, [r3, #16]
 8006292:	687b      	ldr	r3, [r7, #4]
 8006294:	689a      	ldr	r2, [r3, #8]
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	691b      	ldr	r3, [r3, #16]
 800629a:	431a      	orrs	r2, r3
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	695b      	ldr	r3, [r3, #20]
 80062a0:	4313      	orrs	r3, r2
 80062a2:	60bb      	str	r3, [r7, #8]
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	68db      	ldr	r3, [r3, #12]
 80062aa:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 80062ae:	f023 030c 	bic.w	r3, r3, #12
 80062b2:	687a      	ldr	r2, [r7, #4]
 80062b4:	6812      	ldr	r2, [r2, #0]
 80062b6:	68b9      	ldr	r1, [r7, #8]
 80062b8:	430b      	orrs	r3, r1
 80062ba:	60d3      	str	r3, [r2, #12]
 80062bc:	687b      	ldr	r3, [r7, #4]
 80062be:	681b      	ldr	r3, [r3, #0]
 80062c0:	695b      	ldr	r3, [r3, #20]
 80062c2:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	699a      	ldr	r2, [r3, #24]
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	430a      	orrs	r2, r1
 80062d0:	615a      	str	r2, [r3, #20]
 80062d2:	687b      	ldr	r3, [r7, #4]
 80062d4:	681b      	ldr	r3, [r3, #0]
 80062d6:	4a2c      	ldr	r2, [pc, #176]	@ (8006388 <UART_SetConfig+0x114>)
 80062d8:	4293      	cmp	r3, r2
 80062da:	d103      	bne.n	80062e4 <UART_SetConfig+0x70>
 80062dc:	f7fe fe02 	bl	8004ee4 <HAL_RCC_GetPCLK2Freq>
 80062e0:	60f8      	str	r0, [r7, #12]
 80062e2:	e002      	b.n	80062ea <UART_SetConfig+0x76>
 80062e4:	f7fe fdea 	bl	8004ebc <HAL_RCC_GetPCLK1Freq>
 80062e8:	60f8      	str	r0, [r7, #12]
 80062ea:	68fa      	ldr	r2, [r7, #12]
 80062ec:	4613      	mov	r3, r2
 80062ee:	009b      	lsls	r3, r3, #2
 80062f0:	4413      	add	r3, r2
 80062f2:	009a      	lsls	r2, r3, #2
 80062f4:	441a      	add	r2, r3
 80062f6:	687b      	ldr	r3, [r7, #4]
 80062f8:	685b      	ldr	r3, [r3, #4]
 80062fa:	009b      	lsls	r3, r3, #2
 80062fc:	fbb2 f3f3 	udiv	r3, r2, r3
 8006300:	4a22      	ldr	r2, [pc, #136]	@ (800638c <UART_SetConfig+0x118>)
 8006302:	fba2 2303 	umull	r2, r3, r2, r3
 8006306:	095b      	lsrs	r3, r3, #5
 8006308:	0119      	lsls	r1, r3, #4
 800630a:	68fa      	ldr	r2, [r7, #12]
 800630c:	4613      	mov	r3, r2
 800630e:	009b      	lsls	r3, r3, #2
 8006310:	4413      	add	r3, r2
 8006312:	009a      	lsls	r2, r3, #2
 8006314:	441a      	add	r2, r3
 8006316:	687b      	ldr	r3, [r7, #4]
 8006318:	685b      	ldr	r3, [r3, #4]
 800631a:	009b      	lsls	r3, r3, #2
 800631c:	fbb2 f2f3 	udiv	r2, r2, r3
 8006320:	4b1a      	ldr	r3, [pc, #104]	@ (800638c <UART_SetConfig+0x118>)
 8006322:	fba3 0302 	umull	r0, r3, r3, r2
 8006326:	095b      	lsrs	r3, r3, #5
 8006328:	2064      	movs	r0, #100	@ 0x64
 800632a:	fb00 f303 	mul.w	r3, r0, r3
 800632e:	1ad3      	subs	r3, r2, r3
 8006330:	011b      	lsls	r3, r3, #4
 8006332:	3332      	adds	r3, #50	@ 0x32
 8006334:	4a15      	ldr	r2, [pc, #84]	@ (800638c <UART_SetConfig+0x118>)
 8006336:	fba2 2303 	umull	r2, r3, r2, r3
 800633a:	095b      	lsrs	r3, r3, #5
 800633c:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8006340:	4419      	add	r1, r3
 8006342:	68fa      	ldr	r2, [r7, #12]
 8006344:	4613      	mov	r3, r2
 8006346:	009b      	lsls	r3, r3, #2
 8006348:	4413      	add	r3, r2
 800634a:	009a      	lsls	r2, r3, #2
 800634c:	441a      	add	r2, r3
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	685b      	ldr	r3, [r3, #4]
 8006352:	009b      	lsls	r3, r3, #2
 8006354:	fbb2 f2f3 	udiv	r2, r2, r3
 8006358:	4b0c      	ldr	r3, [pc, #48]	@ (800638c <UART_SetConfig+0x118>)
 800635a:	fba3 0302 	umull	r0, r3, r3, r2
 800635e:	095b      	lsrs	r3, r3, #5
 8006360:	2064      	movs	r0, #100	@ 0x64
 8006362:	fb00 f303 	mul.w	r3, r0, r3
 8006366:	1ad3      	subs	r3, r2, r3
 8006368:	011b      	lsls	r3, r3, #4
 800636a:	3332      	adds	r3, #50	@ 0x32
 800636c:	4a07      	ldr	r2, [pc, #28]	@ (800638c <UART_SetConfig+0x118>)
 800636e:	fba2 2303 	umull	r2, r3, r2, r3
 8006372:	095b      	lsrs	r3, r3, #5
 8006374:	f003 020f 	and.w	r2, r3, #15
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	681b      	ldr	r3, [r3, #0]
 800637c:	440a      	add	r2, r1
 800637e:	609a      	str	r2, [r3, #8]
 8006380:	bf00      	nop
 8006382:	3710      	adds	r7, #16
 8006384:	46bd      	mov	sp, r7
 8006386:	bd80      	pop	{r7, pc}
 8006388:	40013800 	.word	0x40013800
 800638c:	51eb851f 	.word	0x51eb851f

08006390 <memset>:
 8006390:	4603      	mov	r3, r0
 8006392:	4402      	add	r2, r0
 8006394:	4293      	cmp	r3, r2
 8006396:	d100      	bne.n	800639a <memset+0xa>
 8006398:	4770      	bx	lr
 800639a:	f803 1b01 	strb.w	r1, [r3], #1
 800639e:	e7f9      	b.n	8006394 <memset+0x4>

080063a0 <clock>:
 80063a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80063a2:	4b08      	ldr	r3, [pc, #32]	@ (80063c4 <clock+0x24>)
 80063a4:	4669      	mov	r1, sp
 80063a6:	6818      	ldr	r0, [r3, #0]
 80063a8:	f000 f80e 	bl	80063c8 <_times_r>
 80063ac:	1c43      	adds	r3, r0, #1
 80063ae:	d006      	beq.n	80063be <clock+0x1e>
 80063b0:	e9dd 0300 	ldrd	r0, r3, [sp]
 80063b4:	4418      	add	r0, r3
 80063b6:	9b02      	ldr	r3, [sp, #8]
 80063b8:	4418      	add	r0, r3
 80063ba:	9b03      	ldr	r3, [sp, #12]
 80063bc:	4418      	add	r0, r3
 80063be:	b005      	add	sp, #20
 80063c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80063c4:	20000078 	.word	0x20000078

080063c8 <_times_r>:
 80063c8:	4608      	mov	r0, r1
 80063ca:	f7fc be05 	b.w	8002fd8 <_times>
	...

080063d0 <__errno>:
 80063d0:	4b01      	ldr	r3, [pc, #4]	@ (80063d8 <__errno+0x8>)
 80063d2:	6818      	ldr	r0, [r3, #0]
 80063d4:	4770      	bx	lr
 80063d6:	bf00      	nop
 80063d8:	20000078 	.word	0x20000078

080063dc <__libc_init_array>:
 80063dc:	b570      	push	{r4, r5, r6, lr}
 80063de:	2600      	movs	r6, #0
 80063e0:	4d0c      	ldr	r5, [pc, #48]	@ (8006414 <__libc_init_array+0x38>)
 80063e2:	4c0d      	ldr	r4, [pc, #52]	@ (8006418 <__libc_init_array+0x3c>)
 80063e4:	1b64      	subs	r4, r4, r5
 80063e6:	10a4      	asrs	r4, r4, #2
 80063e8:	42a6      	cmp	r6, r4
 80063ea:	d109      	bne.n	8006400 <__libc_init_array+0x24>
 80063ec:	f000 fa12 	bl	8006814 <_init>
 80063f0:	2600      	movs	r6, #0
 80063f2:	4d0a      	ldr	r5, [pc, #40]	@ (800641c <__libc_init_array+0x40>)
 80063f4:	4c0a      	ldr	r4, [pc, #40]	@ (8006420 <__libc_init_array+0x44>)
 80063f6:	1b64      	subs	r4, r4, r5
 80063f8:	10a4      	asrs	r4, r4, #2
 80063fa:	42a6      	cmp	r6, r4
 80063fc:	d105      	bne.n	800640a <__libc_init_array+0x2e>
 80063fe:	bd70      	pop	{r4, r5, r6, pc}
 8006400:	f855 3b04 	ldr.w	r3, [r5], #4
 8006404:	4798      	blx	r3
 8006406:	3601      	adds	r6, #1
 8006408:	e7ee      	b.n	80063e8 <__libc_init_array+0xc>
 800640a:	f855 3b04 	ldr.w	r3, [r5], #4
 800640e:	4798      	blx	r3
 8006410:	3601      	adds	r6, #1
 8006412:	e7f2      	b.n	80063fa <__libc_init_array+0x1e>
 8006414:	08006c9c 	.word	0x08006c9c
 8006418:	08006c9c 	.word	0x08006c9c
 800641c:	08006c9c 	.word	0x08006c9c
 8006420:	08006ca0 	.word	0x08006ca0

08006424 <memcpy>:
 8006424:	440a      	add	r2, r1
 8006426:	4291      	cmp	r1, r2
 8006428:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 800642c:	d100      	bne.n	8006430 <memcpy+0xc>
 800642e:	4770      	bx	lr
 8006430:	b510      	push	{r4, lr}
 8006432:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006436:	4291      	cmp	r1, r2
 8006438:	f803 4f01 	strb.w	r4, [r3, #1]!
 800643c:	d1f9      	bne.n	8006432 <memcpy+0xe>
 800643e:	bd10      	pop	{r4, pc}

08006440 <log>:
 8006440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006442:	4604      	mov	r4, r0
 8006444:	460d      	mov	r5, r1
 8006446:	f000 f833 	bl	80064b0 <__ieee754_log>
 800644a:	4622      	mov	r2, r4
 800644c:	4606      	mov	r6, r0
 800644e:	460f      	mov	r7, r1
 8006450:	462b      	mov	r3, r5
 8006452:	4620      	mov	r0, r4
 8006454:	4629      	mov	r1, r5
 8006456:	f7fa fb3d 	bl	8000ad4 <__aeabi_dcmpun>
 800645a:	b998      	cbnz	r0, 8006484 <log+0x44>
 800645c:	2200      	movs	r2, #0
 800645e:	2300      	movs	r3, #0
 8006460:	4620      	mov	r0, r4
 8006462:	4629      	mov	r1, r5
 8006464:	f7fa fb2c 	bl	8000ac0 <__aeabi_dcmpgt>
 8006468:	b960      	cbnz	r0, 8006484 <log+0x44>
 800646a:	2200      	movs	r2, #0
 800646c:	2300      	movs	r3, #0
 800646e:	4620      	mov	r0, r4
 8006470:	4629      	mov	r1, r5
 8006472:	f7fa fafd 	bl	8000a70 <__aeabi_dcmpeq>
 8006476:	b140      	cbz	r0, 800648a <log+0x4a>
 8006478:	f7ff ffaa 	bl	80063d0 <__errno>
 800647c:	2322      	movs	r3, #34	@ 0x22
 800647e:	2600      	movs	r6, #0
 8006480:	4f06      	ldr	r7, [pc, #24]	@ (800649c <log+0x5c>)
 8006482:	6003      	str	r3, [r0, #0]
 8006484:	4630      	mov	r0, r6
 8006486:	4639      	mov	r1, r7
 8006488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800648a:	f7ff ffa1 	bl	80063d0 <__errno>
 800648e:	2321      	movs	r3, #33	@ 0x21
 8006490:	6003      	str	r3, [r0, #0]
 8006492:	4803      	ldr	r0, [pc, #12]	@ (80064a0 <log+0x60>)
 8006494:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006498:	f000 b804 	b.w	80064a4 <nan>
 800649c:	fff00000 	.word	0xfff00000
 80064a0:	08006c90 	.word	0x08006c90

080064a4 <nan>:
 80064a4:	2000      	movs	r0, #0
 80064a6:	4901      	ldr	r1, [pc, #4]	@ (80064ac <nan+0x8>)
 80064a8:	4770      	bx	lr
 80064aa:	bf00      	nop
 80064ac:	7ff80000 	.word	0x7ff80000

080064b0 <__ieee754_log>:
 80064b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80064b4:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80064b8:	4602      	mov	r2, r0
 80064ba:	460b      	mov	r3, r1
 80064bc:	460d      	mov	r5, r1
 80064be:	b087      	sub	sp, #28
 80064c0:	da24      	bge.n	800650c <__ieee754_log+0x5c>
 80064c2:	f021 4400 	bic.w	r4, r1, #2147483648	@ 0x80000000
 80064c6:	4304      	orrs	r4, r0
 80064c8:	d108      	bne.n	80064dc <__ieee754_log+0x2c>
 80064ca:	2200      	movs	r2, #0
 80064cc:	2300      	movs	r3, #0
 80064ce:	2000      	movs	r0, #0
 80064d0:	49cb      	ldr	r1, [pc, #812]	@ (8006800 <__ieee754_log+0x350>)
 80064d2:	f7fa f98f 	bl	80007f4 <__aeabi_ddiv>
 80064d6:	b007      	add	sp, #28
 80064d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064dc:	2900      	cmp	r1, #0
 80064de:	da04      	bge.n	80064ea <__ieee754_log+0x3a>
 80064e0:	f7f9 fea6 	bl	8000230 <__aeabi_dsub>
 80064e4:	2200      	movs	r2, #0
 80064e6:	2300      	movs	r3, #0
 80064e8:	e7f3      	b.n	80064d2 <__ieee754_log+0x22>
 80064ea:	2200      	movs	r2, #0
 80064ec:	4bc5      	ldr	r3, [pc, #788]	@ (8006804 <__ieee754_log+0x354>)
 80064ee:	f7fa f857 	bl	80005a0 <__aeabi_dmul>
 80064f2:	460b      	mov	r3, r1
 80064f4:	460d      	mov	r5, r1
 80064f6:	4602      	mov	r2, r0
 80064f8:	f06f 0135 	mvn.w	r1, #53	@ 0x35
 80064fc:	48c2      	ldr	r0, [pc, #776]	@ (8006808 <__ieee754_log+0x358>)
 80064fe:	4285      	cmp	r5, r0
 8006500:	dd06      	ble.n	8006510 <__ieee754_log+0x60>
 8006502:	4610      	mov	r0, r2
 8006504:	4619      	mov	r1, r3
 8006506:	f7f9 fe95 	bl	8000234 <__adddf3>
 800650a:	e7e4      	b.n	80064d6 <__ieee754_log+0x26>
 800650c:	2100      	movs	r1, #0
 800650e:	e7f5      	b.n	80064fc <__ieee754_log+0x4c>
 8006510:	152c      	asrs	r4, r5, #20
 8006512:	f2a4 34ff 	subw	r4, r4, #1023	@ 0x3ff
 8006516:	f3c5 0513 	ubfx	r5, r5, #0, #20
 800651a:	440c      	add	r4, r1
 800651c:	f505 2115 	add.w	r1, r5, #610304	@ 0x95000
 8006520:	f601 7164 	addw	r1, r1, #3940	@ 0xf64
 8006524:	f401 1680 	and.w	r6, r1, #1048576	@ 0x100000
 8006528:	f086 517f 	eor.w	r1, r6, #1069547520	@ 0x3fc00000
 800652c:	f481 1140 	eor.w	r1, r1, #3145728	@ 0x300000
 8006530:	ea41 0305 	orr.w	r3, r1, r5
 8006534:	4610      	mov	r0, r2
 8006536:	4619      	mov	r1, r3
 8006538:	2200      	movs	r2, #0
 800653a:	4bb4      	ldr	r3, [pc, #720]	@ (800680c <__ieee754_log+0x35c>)
 800653c:	f7f9 fe78 	bl	8000230 <__aeabi_dsub>
 8006540:	1cab      	adds	r3, r5, #2
 8006542:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006546:	2b02      	cmp	r3, #2
 8006548:	4682      	mov	sl, r0
 800654a:	468b      	mov	fp, r1
 800654c:	f04f 0200 	mov.w	r2, #0
 8006550:	eb04 5416 	add.w	r4, r4, r6, lsr #20
 8006554:	dc53      	bgt.n	80065fe <__ieee754_log+0x14e>
 8006556:	2300      	movs	r3, #0
 8006558:	f7fa fa8a 	bl	8000a70 <__aeabi_dcmpeq>
 800655c:	b1d0      	cbz	r0, 8006594 <__ieee754_log+0xe4>
 800655e:	2c00      	cmp	r4, #0
 8006560:	f000 8120 	beq.w	80067a4 <__ieee754_log+0x2f4>
 8006564:	4620      	mov	r0, r4
 8006566:	f7f9 ffb1 	bl	80004cc <__aeabi_i2d>
 800656a:	a391      	add	r3, pc, #580	@ (adr r3, 80067b0 <__ieee754_log+0x300>)
 800656c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006570:	4606      	mov	r6, r0
 8006572:	460f      	mov	r7, r1
 8006574:	f7fa f814 	bl	80005a0 <__aeabi_dmul>
 8006578:	a38f      	add	r3, pc, #572	@ (adr r3, 80067b8 <__ieee754_log+0x308>)
 800657a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800657e:	4604      	mov	r4, r0
 8006580:	460d      	mov	r5, r1
 8006582:	4630      	mov	r0, r6
 8006584:	4639      	mov	r1, r7
 8006586:	f7fa f80b 	bl	80005a0 <__aeabi_dmul>
 800658a:	4602      	mov	r2, r0
 800658c:	460b      	mov	r3, r1
 800658e:	4620      	mov	r0, r4
 8006590:	4629      	mov	r1, r5
 8006592:	e7b8      	b.n	8006506 <__ieee754_log+0x56>
 8006594:	a38a      	add	r3, pc, #552	@ (adr r3, 80067c0 <__ieee754_log+0x310>)
 8006596:	e9d3 2300 	ldrd	r2, r3, [r3]
 800659a:	4650      	mov	r0, sl
 800659c:	4659      	mov	r1, fp
 800659e:	f7f9 ffff 	bl	80005a0 <__aeabi_dmul>
 80065a2:	4602      	mov	r2, r0
 80065a4:	460b      	mov	r3, r1
 80065a6:	2000      	movs	r0, #0
 80065a8:	4999      	ldr	r1, [pc, #612]	@ (8006810 <__ieee754_log+0x360>)
 80065aa:	f7f9 fe41 	bl	8000230 <__aeabi_dsub>
 80065ae:	4652      	mov	r2, sl
 80065b0:	4606      	mov	r6, r0
 80065b2:	460f      	mov	r7, r1
 80065b4:	465b      	mov	r3, fp
 80065b6:	4650      	mov	r0, sl
 80065b8:	4659      	mov	r1, fp
 80065ba:	f7f9 fff1 	bl	80005a0 <__aeabi_dmul>
 80065be:	4602      	mov	r2, r0
 80065c0:	460b      	mov	r3, r1
 80065c2:	4630      	mov	r0, r6
 80065c4:	4639      	mov	r1, r7
 80065c6:	f7f9 ffeb 	bl	80005a0 <__aeabi_dmul>
 80065ca:	4606      	mov	r6, r0
 80065cc:	460f      	mov	r7, r1
 80065ce:	b914      	cbnz	r4, 80065d6 <__ieee754_log+0x126>
 80065d0:	4632      	mov	r2, r6
 80065d2:	463b      	mov	r3, r7
 80065d4:	e0a0      	b.n	8006718 <__ieee754_log+0x268>
 80065d6:	4620      	mov	r0, r4
 80065d8:	f7f9 ff78 	bl	80004cc <__aeabi_i2d>
 80065dc:	a374      	add	r3, pc, #464	@ (adr r3, 80067b0 <__ieee754_log+0x300>)
 80065de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80065e2:	4680      	mov	r8, r0
 80065e4:	4689      	mov	r9, r1
 80065e6:	f7f9 ffdb 	bl	80005a0 <__aeabi_dmul>
 80065ea:	a373      	add	r3, pc, #460	@ (adr r3, 80067b8 <__ieee754_log+0x308>)
 80065ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80065f0:	4604      	mov	r4, r0
 80065f2:	460d      	mov	r5, r1
 80065f4:	4640      	mov	r0, r8
 80065f6:	4649      	mov	r1, r9
 80065f8:	f7f9 ffd2 	bl	80005a0 <__aeabi_dmul>
 80065fc:	e0a5      	b.n	800674a <__ieee754_log+0x29a>
 80065fe:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8006602:	f7f9 fe17 	bl	8000234 <__adddf3>
 8006606:	4602      	mov	r2, r0
 8006608:	460b      	mov	r3, r1
 800660a:	4650      	mov	r0, sl
 800660c:	4659      	mov	r1, fp
 800660e:	f7fa f8f1 	bl	80007f4 <__aeabi_ddiv>
 8006612:	e9cd 0100 	strd	r0, r1, [sp]
 8006616:	4620      	mov	r0, r4
 8006618:	f7f9 ff58 	bl	80004cc <__aeabi_i2d>
 800661c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006620:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006624:	4610      	mov	r0, r2
 8006626:	4619      	mov	r1, r3
 8006628:	f7f9 ffba 	bl	80005a0 <__aeabi_dmul>
 800662c:	4602      	mov	r2, r0
 800662e:	460b      	mov	r3, r1
 8006630:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8006634:	f7f9 ffb4 	bl	80005a0 <__aeabi_dmul>
 8006638:	a363      	add	r3, pc, #396	@ (adr r3, 80067c8 <__ieee754_log+0x318>)
 800663a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800663e:	4680      	mov	r8, r0
 8006640:	4689      	mov	r9, r1
 8006642:	f7f9 ffad 	bl	80005a0 <__aeabi_dmul>
 8006646:	a362      	add	r3, pc, #392	@ (adr r3, 80067d0 <__ieee754_log+0x320>)
 8006648:	e9d3 2300 	ldrd	r2, r3, [r3]
 800664c:	f7f9 fdf2 	bl	8000234 <__adddf3>
 8006650:	4642      	mov	r2, r8
 8006652:	464b      	mov	r3, r9
 8006654:	f7f9 ffa4 	bl	80005a0 <__aeabi_dmul>
 8006658:	a35f      	add	r3, pc, #380	@ (adr r3, 80067d8 <__ieee754_log+0x328>)
 800665a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800665e:	f7f9 fde9 	bl	8000234 <__adddf3>
 8006662:	4642      	mov	r2, r8
 8006664:	464b      	mov	r3, r9
 8006666:	f7f9 ff9b 	bl	80005a0 <__aeabi_dmul>
 800666a:	a35d      	add	r3, pc, #372	@ (adr r3, 80067e0 <__ieee754_log+0x330>)
 800666c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006670:	f7f9 fde0 	bl	8000234 <__adddf3>
 8006674:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006678:	f7f9 ff92 	bl	80005a0 <__aeabi_dmul>
 800667c:	a35a      	add	r3, pc, #360	@ (adr r3, 80067e8 <__ieee754_log+0x338>)
 800667e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006682:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006686:	4640      	mov	r0, r8
 8006688:	4649      	mov	r1, r9
 800668a:	f7f9 ff89 	bl	80005a0 <__aeabi_dmul>
 800668e:	a358      	add	r3, pc, #352	@ (adr r3, 80067f0 <__ieee754_log+0x340>)
 8006690:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006694:	f7f9 fdce 	bl	8000234 <__adddf3>
 8006698:	4642      	mov	r2, r8
 800669a:	464b      	mov	r3, r9
 800669c:	f7f9 ff80 	bl	80005a0 <__aeabi_dmul>
 80066a0:	a355      	add	r3, pc, #340	@ (adr r3, 80067f8 <__ieee754_log+0x348>)
 80066a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80066a6:	f7f9 fdc5 	bl	8000234 <__adddf3>
 80066aa:	4642      	mov	r2, r8
 80066ac:	464b      	mov	r3, r9
 80066ae:	f7f9 ff77 	bl	80005a0 <__aeabi_dmul>
 80066b2:	4602      	mov	r2, r0
 80066b4:	460b      	mov	r3, r1
 80066b6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80066ba:	f7f9 fdbb 	bl	8000234 <__adddf3>
 80066be:	f5a5 26c2 	sub.w	r6, r5, #397312	@ 0x61000
 80066c2:	f5c5 25d7 	rsb	r5, r5, #440320	@ 0x6b800
 80066c6:	f2a6 467a 	subw	r6, r6, #1146	@ 0x47a
 80066ca:	3551      	adds	r5, #81	@ 0x51
 80066cc:	4335      	orrs	r5, r6
 80066ce:	2d00      	cmp	r5, #0
 80066d0:	4680      	mov	r8, r0
 80066d2:	4689      	mov	r9, r1
 80066d4:	dd48      	ble.n	8006768 <__ieee754_log+0x2b8>
 80066d6:	2200      	movs	r2, #0
 80066d8:	4b4d      	ldr	r3, [pc, #308]	@ (8006810 <__ieee754_log+0x360>)
 80066da:	4650      	mov	r0, sl
 80066dc:	4659      	mov	r1, fp
 80066de:	f7f9 ff5f 	bl	80005a0 <__aeabi_dmul>
 80066e2:	4652      	mov	r2, sl
 80066e4:	465b      	mov	r3, fp
 80066e6:	f7f9 ff5b 	bl	80005a0 <__aeabi_dmul>
 80066ea:	4602      	mov	r2, r0
 80066ec:	460b      	mov	r3, r1
 80066ee:	4606      	mov	r6, r0
 80066f0:	460f      	mov	r7, r1
 80066f2:	4640      	mov	r0, r8
 80066f4:	4649      	mov	r1, r9
 80066f6:	f7f9 fd9d 	bl	8000234 <__adddf3>
 80066fa:	e9dd 2300 	ldrd	r2, r3, [sp]
 80066fe:	f7f9 ff4f 	bl	80005a0 <__aeabi_dmul>
 8006702:	4680      	mov	r8, r0
 8006704:	4689      	mov	r9, r1
 8006706:	b964      	cbnz	r4, 8006722 <__ieee754_log+0x272>
 8006708:	4602      	mov	r2, r0
 800670a:	460b      	mov	r3, r1
 800670c:	4630      	mov	r0, r6
 800670e:	4639      	mov	r1, r7
 8006710:	f7f9 fd8e 	bl	8000230 <__aeabi_dsub>
 8006714:	4602      	mov	r2, r0
 8006716:	460b      	mov	r3, r1
 8006718:	4650      	mov	r0, sl
 800671a:	4659      	mov	r1, fp
 800671c:	f7f9 fd88 	bl	8000230 <__aeabi_dsub>
 8006720:	e6d9      	b.n	80064d6 <__ieee754_log+0x26>
 8006722:	a323      	add	r3, pc, #140	@ (adr r3, 80067b0 <__ieee754_log+0x300>)
 8006724:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006728:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800672c:	f7f9 ff38 	bl	80005a0 <__aeabi_dmul>
 8006730:	a321      	add	r3, pc, #132	@ (adr r3, 80067b8 <__ieee754_log+0x308>)
 8006732:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006736:	4604      	mov	r4, r0
 8006738:	460d      	mov	r5, r1
 800673a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800673e:	f7f9 ff2f 	bl	80005a0 <__aeabi_dmul>
 8006742:	4642      	mov	r2, r8
 8006744:	464b      	mov	r3, r9
 8006746:	f7f9 fd75 	bl	8000234 <__adddf3>
 800674a:	4602      	mov	r2, r0
 800674c:	460b      	mov	r3, r1
 800674e:	4630      	mov	r0, r6
 8006750:	4639      	mov	r1, r7
 8006752:	f7f9 fd6d 	bl	8000230 <__aeabi_dsub>
 8006756:	4652      	mov	r2, sl
 8006758:	465b      	mov	r3, fp
 800675a:	f7f9 fd69 	bl	8000230 <__aeabi_dsub>
 800675e:	4602      	mov	r2, r0
 8006760:	460b      	mov	r3, r1
 8006762:	4620      	mov	r0, r4
 8006764:	4629      	mov	r1, r5
 8006766:	e7d9      	b.n	800671c <__ieee754_log+0x26c>
 8006768:	4602      	mov	r2, r0
 800676a:	460b      	mov	r3, r1
 800676c:	4650      	mov	r0, sl
 800676e:	4659      	mov	r1, fp
 8006770:	f7f9 fd5e 	bl	8000230 <__aeabi_dsub>
 8006774:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006778:	f7f9 ff12 	bl	80005a0 <__aeabi_dmul>
 800677c:	4606      	mov	r6, r0
 800677e:	460f      	mov	r7, r1
 8006780:	2c00      	cmp	r4, #0
 8006782:	f43f af25 	beq.w	80065d0 <__ieee754_log+0x120>
 8006786:	a30a      	add	r3, pc, #40	@ (adr r3, 80067b0 <__ieee754_log+0x300>)
 8006788:	e9d3 2300 	ldrd	r2, r3, [r3]
 800678c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006790:	f7f9 ff06 	bl	80005a0 <__aeabi_dmul>
 8006794:	a308      	add	r3, pc, #32	@ (adr r3, 80067b8 <__ieee754_log+0x308>)
 8006796:	e9d3 2300 	ldrd	r2, r3, [r3]
 800679a:	4604      	mov	r4, r0
 800679c:	460d      	mov	r5, r1
 800679e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80067a2:	e729      	b.n	80065f8 <__ieee754_log+0x148>
 80067a4:	2000      	movs	r0, #0
 80067a6:	2100      	movs	r1, #0
 80067a8:	e695      	b.n	80064d6 <__ieee754_log+0x26>
 80067aa:	bf00      	nop
 80067ac:	f3af 8000 	nop.w
 80067b0:	fee00000 	.word	0xfee00000
 80067b4:	3fe62e42 	.word	0x3fe62e42
 80067b8:	35793c76 	.word	0x35793c76
 80067bc:	3dea39ef 	.word	0x3dea39ef
 80067c0:	55555555 	.word	0x55555555
 80067c4:	3fd55555 	.word	0x3fd55555
 80067c8:	df3e5244 	.word	0xdf3e5244
 80067cc:	3fc2f112 	.word	0x3fc2f112
 80067d0:	96cb03de 	.word	0x96cb03de
 80067d4:	3fc74664 	.word	0x3fc74664
 80067d8:	94229359 	.word	0x94229359
 80067dc:	3fd24924 	.word	0x3fd24924
 80067e0:	55555593 	.word	0x55555593
 80067e4:	3fe55555 	.word	0x3fe55555
 80067e8:	d078c69f 	.word	0xd078c69f
 80067ec:	3fc39a09 	.word	0x3fc39a09
 80067f0:	1d8e78af 	.word	0x1d8e78af
 80067f4:	3fcc71c5 	.word	0x3fcc71c5
 80067f8:	9997fa04 	.word	0x9997fa04
 80067fc:	3fd99999 	.word	0x3fd99999
 8006800:	c3500000 	.word	0xc3500000
 8006804:	43500000 	.word	0x43500000
 8006808:	7fefffff 	.word	0x7fefffff
 800680c:	3ff00000 	.word	0x3ff00000
 8006810:	3fe00000 	.word	0x3fe00000

08006814 <_init>:
 8006814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006816:	bf00      	nop
 8006818:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800681a:	bc08      	pop	{r3}
 800681c:	469e      	mov	lr, r3
 800681e:	4770      	bx	lr

08006820 <_fini>:
 8006820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006822:	bf00      	nop
 8006824:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006826:	bc08      	pop	{r3}
 8006828:	469e      	mov	lr, r3
 800682a:	4770      	bx	lr
